{
  "entries": [
    [
      "demo.sh",
      [
        {
          "term": "Demo script for charm TUIs",
          "type": "comment",
          "location": {
            "file": "demo.sh",
            "line": 2,
            "column": 0
          },
          "context": "# Demo script for charm TUIs",
          "surroundingLines": [
            "# Demo script for charm TUIs"
          ],
          "relatedTerms": [],
          "language": "shell"
        },
        {
          "term": "🎉 Charm TUI Demo - Phase 2 Complete!",
          "type": "string",
          "location": {
            "file": "demo.sh",
            "line": 4,
            "column": 5
          },
          "context": "echo \"🎉 Charm TUI Demo - Phase 2 Complete!\"",
          "surroundingLines": [
            "echo \"🎉 Charm TUI Demo - Phase 2 Complete!\""
          ],
          "relatedTerms": [],
          "language": "shell"
        },
        {
          "term": "We've successfully created Go-based TUIs with optional --tui flags.",
          "type": "string",
          "location": {
            "file": "demo.sh",
            "line": 6,
            "column": 5
          },
          "context": "echo \"We've successfully created Go-based TUIs with optional --tui flags.\"",
          "surroundingLines": [
            "echo \"We've successfully created Go-based TUIs with optional --tui flags.\""
          ],
          "relatedTerms": [],
          "language": "shell"
        },
        {
          "term": "Available commands:",
          "type": "string",
          "location": {
            "file": "demo.sh",
            "line": 8,
            "column": 5
          },
          "context": "echo \"Available commands:\"",
          "surroundingLines": [
            "echo \"Available commands:\""
          ],
          "relatedTerms": [],
          "language": "shell"
        },
        {
          "term": "1. SmartGrep (Semantic Search):",
          "type": "string",
          "location": {
            "file": "demo.sh",
            "line": 10,
            "column": 5
          },
          "context": "echo \"1. SmartGrep (Semantic Search):\"",
          "surroundingLines": [
            "echo \"1. SmartGrep (Semantic Search):\""
          ],
          "relatedTerms": [],
          "language": "shell"
        },
        {
          "term": "   ./build/bin/smartgrep --help           # Show help",
          "type": "string",
          "location": {
            "file": "demo.sh",
            "line": 11,
            "column": 5
          },
          "context": "echo \"   ./build/bin/smartgrep --help           # Show help\"",
          "surroundingLines": [
            "echo \"   ./build/bin/smartgrep --help           # Show help\""
          ],
          "relatedTerms": [],
          "language": "shell"
        },
        {
          "term": "   ./build/bin/smartgrep 'auth'           # CLI mode (fast for Claude)",
          "type": "string",
          "location": {
            "file": "demo.sh",
            "line": 12,
            "column": 5
          },
          "context": "echo \"   ./build/bin/smartgrep 'auth'           # CLI mode (fast for Claude)\"",
          "surroundingLines": [
            "echo \"   ./build/bin/smartgrep 'auth'           # CLI mode (fast for Claude)\""
          ],
          "relatedTerms": [],
          "language": "shell"
        },
        {
          "term": "auth",
          "type": "string",
          "location": {
            "file": "demo.sh",
            "line": 12,
            "column": 31
          },
          "context": "echo \"   ./build/bin/smartgrep 'auth'           # CLI mode (fast for Claude)\"",
          "surroundingLines": [
            "echo \"   ./build/bin/smartgrep 'auth'           # CLI mode (fast for Claude)\""
          ],
          "relatedTerms": [],
          "language": "shell"
        },
        {
          "term": "   ./build/bin/smartgrep --tui            # Interactive TUI mode",
          "type": "string",
          "location": {
            "file": "demo.sh",
            "line": 13,
            "column": 5
          },
          "context": "echo \"   ./build/bin/smartgrep --tui            # Interactive TUI mode\"",
          "surroundingLines": [
            "echo \"   ./build/bin/smartgrep --tui            # Interactive TUI mode\""
          ],
          "relatedTerms": [],
          "language": "shell"
        },
        {
          "term": "2. Curator (AI Assistant):",
          "type": "string",
          "location": {
            "file": "demo.sh",
            "line": 15,
            "column": 5
          },
          "context": "echo \"2. Curator (AI Assistant):\"",
          "surroundingLines": [
            "echo \"2. Curator (AI Assistant):\""
          ],
          "relatedTerms": [],
          "language": "shell"
        },
        {
          "term": "   ./build/bin/curator overview .         # CLI mode",
          "type": "string",
          "location": {
            "file": "demo.sh",
            "line": 16,
            "column": 5
          },
          "context": "echo \"   ./build/bin/curator overview .         # CLI mode\"",
          "surroundingLines": [
            "echo \"   ./build/bin/curator overview .         # CLI mode\""
          ],
          "relatedTerms": [],
          "language": "shell"
        },
        {
          "term": "   ./build/bin/curator --tui              # Interactive TUI mode",
          "type": "string",
          "location": {
            "file": "demo.sh",
            "line": 17,
            "column": 5
          },
          "context": "echo \"   ./build/bin/curator --tui              # Interactive TUI mode\"",
          "surroundingLines": [
            "echo \"   ./build/bin/curator --tui              # Interactive TUI mode\""
          ],
          "relatedTerms": [],
          "language": "shell"
        },
        {
          "term": "   ./build/bin/curator chat --tui         # Chat with markdown rendering",
          "type": "string",
          "location": {
            "file": "demo.sh",
            "line": 18,
            "column": 5
          },
          "context": "echo \"   ./build/bin/curator chat --tui         # Chat with markdown rendering\"",
          "surroundingLines": [
            "echo \"   ./build/bin/curator chat --tui         # Chat with markdown rendering\""
          ],
          "relatedTerms": [],
          "language": "shell"
        },
        {
          "term": "3. Monitor (Live Dashboard):",
          "type": "string",
          "location": {
            "file": "demo.sh",
            "line": 20,
            "column": 5
          },
          "context": "echo \"3. Monitor (Live Dashboard):\"",
          "surroundingLines": [
            "echo \"3. Monitor (Live Dashboard):\""
          ],
          "relatedTerms": [],
          "language": "shell"
        },
        {
          "term": "   ./build/bin/monitor status             # CLI mode",
          "type": "string",
          "location": {
            "file": "demo.sh",
            "line": 21,
            "column": 5
          },
          "context": "echo \"   ./build/bin/monitor status             # CLI mode\"",
          "surroundingLines": [
            "echo \"   ./build/bin/monitor status             # CLI mode\""
          ],
          "relatedTerms": [],
          "language": "shell"
        },
        {
          "term": "   ./build/bin/monitor --tui              # Interactive dashboard",
          "type": "string",
          "location": {
            "file": "demo.sh",
            "line": 22,
            "column": 5
          },
          "context": "echo \"   ./build/bin/monitor --tui              # Interactive dashboard\"",
          "surroundingLines": [
            "echo \"   ./build/bin/monitor --tui              # Interactive dashboard\""
          ],
          "relatedTerms": [],
          "language": "shell"
        },
        {
          "term": "   ./build/bin/monitor watch --tui        # Live monitoring",
          "type": "string",
          "location": {
            "file": "demo.sh",
            "line": 23,
            "column": 5
          },
          "context": "echo \"   ./build/bin/monitor watch --tui        # Live monitoring\"",
          "surroundingLines": [
            "echo \"   ./build/bin/monitor watch --tui        # Live monitoring\""
          ],
          "relatedTerms": [],
          "language": "shell"
        },
        {
          "term": "Key features:",
          "type": "string",
          "location": {
            "file": "demo.sh",
            "line": 25,
            "column": 5
          },
          "context": "echo \"Key features:\"",
          "surroundingLines": [
            "echo \"Key features:\""
          ],
          "relatedTerms": [],
          "language": "shell"
        },
        {
          "term": "- ✅ CLI mode by default (Claude-optimized)",
          "type": "string",
          "location": {
            "file": "demo.sh",
            "line": 26,
            "column": 5
          },
          "context": "echo \"- ✅ CLI mode by default (Claude-optimized)\"",
          "surroundingLines": [
            "echo \"- ✅ CLI mode by default (Claude-optimized)\""
          ],
          "relatedTerms": [],
          "language": "shell"
        },
        {
          "term": "- ✅ Optional --tui flag for interactive mode",
          "type": "string",
          "location": {
            "file": "demo.sh",
            "line": 27,
            "column": 5
          },
          "context": "echo \"- ✅ Optional --tui flag for interactive mode\"",
          "surroundingLines": [
            "echo \"- ✅ Optional --tui flag for interactive mode\""
          ],
          "relatedTerms": [],
          "language": "shell"
        },
        {
          "term": "- ✅ Beautiful rendering with Charm libraries",
          "type": "string",
          "location": {
            "file": "demo.sh",
            "line": 28,
            "column": 5
          },
          "context": "echo \"- ✅ Beautiful rendering with Charm libraries\"",
          "surroundingLines": [
            "echo \"- ✅ Beautiful rendering with Charm libraries\""
          ],
          "relatedTerms": [],
          "language": "shell"
        },
        {
          "term": "- ✅ Markdown support in Curator",
          "type": "string",
          "location": {
            "file": "demo.sh",
            "line": 29,
            "column": 5
          },
          "context": "echo \"- ✅ Markdown support in Curator\"",
          "surroundingLines": [
            "echo \"- ✅ Markdown support in Curator\""
          ],
          "relatedTerms": [],
          "language": "shell"
        },
        {
          "term": "- ✅ Real-time updates in Monitor",
          "type": "string",
          "location": {
            "file": "demo.sh",
            "line": 30,
            "column": 5
          },
          "context": "echo \"- ✅ Real-time updates in Monitor\"",
          "surroundingLines": [
            "echo \"- ✅ Real-time updates in Monitor\""
          ],
          "relatedTerms": [],
          "language": "shell"
        },
        {
          "term": "- ✅ Clean architecture with cmd/internal separation",
          "type": "string",
          "location": {
            "file": "demo.sh",
            "line": 31,
            "column": 5
          },
          "context": "echo \"- ✅ Clean architecture with cmd/internal separation\"",
          "surroundingLines": [
            "echo \"- ✅ Clean architecture with cmd/internal separation\""
          ],
          "relatedTerms": [],
          "language": "shell"
        },
        {
          "term": "Try it out:",
          "type": "string",
          "location": {
            "file": "demo.sh",
            "line": 33,
            "column": 5
          },
          "context": "echo \"Try it out:\"",
          "surroundingLines": [
            "echo \"Try it out:\""
          ],
          "relatedTerms": [],
          "language": "shell"
        },
        {
          "term": "  cd charm-tui",
          "type": "string",
          "location": {
            "file": "demo.sh",
            "line": 34,
            "column": 5
          },
          "context": "echo \"  cd charm-tui\"",
          "surroundingLines": [
            "echo \"  cd charm-tui\""
          ],
          "relatedTerms": [],
          "language": "shell"
        },
        {
          "term": "  ./build/bin/smartgrep --tui",
          "type": "string",
          "location": {
            "file": "demo.sh",
            "line": 35,
            "column": 5
          },
          "context": "echo \"  ./build/bin/smartgrep --tui\"",
          "surroundingLines": [
            "echo \"  ./build/bin/smartgrep --tui\""
          ],
          "relatedTerms": [],
          "language": "shell"
        }
      ]
    ],
    [
      "Makefile",
      [
        {
          "term": "Build output directory",
          "type": "comment",
          "location": {
            "file": "Makefile",
            "line": 3,
            "column": 0
          },
          "context": "# Build output directory",
          "surroundingLines": [
            "# Build output directory"
          ],
          "relatedTerms": [],
          "language": "shell"
        },
        {
          "term": "Binary names",
          "type": "comment",
          "location": {
            "file": "Makefile",
            "line": 7,
            "column": 0
          },
          "context": "# Binary names",
          "surroundingLines": [
            "# Binary names"
          ],
          "relatedTerms": [],
          "language": "shell"
        },
        {
          "term": "Default target",
          "type": "comment",
          "location": {
            "file": "Makefile",
            "line": 12,
            "column": 0
          },
          "context": "# Default target",
          "surroundingLines": [
            "# Default target"
          ],
          "relatedTerms": [],
          "language": "shell"
        },
        {
          "term": "Create directories",
          "type": "comment",
          "location": {
            "file": "Makefile",
            "line": 15,
            "column": 0
          },
          "context": "# Create directories",
          "surroundingLines": [
            "# Create directories"
          ],
          "relatedTerms": [],
          "language": "shell"
        },
        {
          "term": "Build all binaries",
          "type": "comment",
          "location": {
            "file": "Makefile",
            "line": 19,
            "column": 0
          },
          "context": "# Build all binaries",
          "surroundingLines": [
            "# Build all binaries"
          ],
          "relatedTerms": [],
          "language": "shell"
        },
        {
          "term": "Build individual binaries",
          "type": "comment",
          "location": {
            "file": "Makefile",
            "line": 22,
            "column": 0
          },
          "context": "# Build individual binaries",
          "surroundingLines": [
            "# Build individual binaries"
          ],
          "relatedTerms": [],
          "language": "shell"
        },
        {
          "term": "Install binaries to system",
          "type": "comment",
          "location": {
            "file": "Makefile",
            "line": 32,
            "column": 0
          },
          "context": "# Install binaries to system",
          "surroundingLines": [
            "# Install binaries to system"
          ],
          "relatedTerms": [],
          "language": "shell"
        },
        {
          "term": "Installing charm TUI binaries...",
          "type": "string",
          "location": {
            "file": "Makefile",
            "line": 34,
            "column": 7
          },
          "context": "@echo \"Installing charm TUI binaries...\"",
          "surroundingLines": [
            "@echo \"Installing charm TUI binaries...\""
          ],
          "relatedTerms": [],
          "language": "shell"
        },
        {
          "term": "✅ Installation complete!",
          "type": "string",
          "location": {
            "file": "Makefile",
            "line": 38,
            "column": 7
          },
          "context": "@echo \"✅ Installation complete!\"",
          "surroundingLines": [
            "@echo \"✅ Installation complete!\""
          ],
          "relatedTerms": [],
          "language": "shell"
        },
        {
          "term": "You can now use:",
          "type": "string",
          "location": {
            "file": "Makefile",
            "line": 40,
            "column": 7
          },
          "context": "@echo \"You can now use:\"",
          "surroundingLines": [
            "@echo \"You can now use:\""
          ],
          "relatedTerms": [],
          "language": "shell"
        },
        {
          "term": "  smartgrep-tui --tui    # Interactive semantic search",
          "type": "string",
          "location": {
            "file": "Makefile",
            "line": 41,
            "column": 7
          },
          "context": "@echo \"  smartgrep-tui --tui    # Interactive semantic search\"",
          "surroundingLines": [
            "@echo \"  smartgrep-tui --tui    # Interactive semantic search\""
          ],
          "relatedTerms": [],
          "language": "shell"
        },
        {
          "term": "  curator-tui --tui      # Interactive AI assistant",
          "type": "string",
          "location": {
            "file": "Makefile",
            "line": 42,
            "column": 7
          },
          "context": "@echo \"  curator-tui --tui      # Interactive AI assistant\"",
          "surroundingLines": [
            "@echo \"  curator-tui --tui      # Interactive AI assistant\""
          ],
          "relatedTerms": [],
          "language": "shell"
        },
        {
          "term": "  monitor-tui --tui      # Interactive monitoring",
          "type": "string",
          "location": {
            "file": "Makefile",
            "line": 43,
            "column": 7
          },
          "context": "@echo \"  monitor-tui --tui      # Interactive monitoring\"",
          "surroundingLines": [
            "@echo \"  monitor-tui --tui      # Interactive monitoring\""
          ],
          "relatedTerms": [],
          "language": "shell"
        },
        {
          "term": "Run tests",
          "type": "comment",
          "location": {
            "file": "Makefile",
            "line": 45,
            "column": 0
          },
          "context": "# Run tests",
          "surroundingLines": [
            "# Run tests"
          ],
          "relatedTerms": [],
          "language": "shell"
        },
        {
          "term": "Clean build artifacts",
          "type": "comment",
          "location": {
            "file": "Makefile",
            "line": 49,
            "column": 0
          },
          "context": "# Clean build artifacts",
          "surroundingLines": [
            "# Clean build artifacts"
          ],
          "relatedTerms": [],
          "language": "shell"
        },
        {
          "term": "Development shortcuts",
          "type": "comment",
          "location": {
            "file": "Makefile",
            "line": 53,
            "column": 0
          },
          "context": "# Development shortcuts",
          "surroundingLines": [
            "# Development shortcuts"
          ],
          "relatedTerms": [],
          "language": "shell"
        },
        {
          "term": "Download dependencies",
          "type": "comment",
          "location": {
            "file": "Makefile",
            "line": 63,
            "column": 0
          },
          "context": "# Download dependencies",
          "surroundingLines": [
            "# Download dependencies"
          ],
          "relatedTerms": [],
          "language": "shell"
        },
        {
          "term": "Update dependencies",
          "type": "comment",
          "location": {
            "file": "Makefile",
            "line": 68,
            "column": 0
          },
          "context": "# Update dependencies",
          "surroundingLines": [
            "# Update dependencies"
          ],
          "relatedTerms": [],
          "language": "shell"
        }
      ]
    ],
    [
      "internal/curator/tui.go",
      [
        {
          "term": "curator",
          "type": "module",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 1,
            "column": 0
          },
          "context": "package curator",
          "surroundingLines": [
            "package curator"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "os/exec",
          "type": "string",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 6,
            "column": 1
          },
          "context": "\"os/exec\"",
          "surroundingLines": [
            "\"os/exec\""
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "github.com/charmbracelet/bubbles/spinner",
          "type": "string",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 9,
            "column": 1
          },
          "context": "\"github.com/charmbracelet/bubbles/spinner\"",
          "surroundingLines": [
            "\"github.com/charmbracelet/bubbles/spinner\""
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "github.com/charmbracelet/bubbles/textarea",
          "type": "string",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 10,
            "column": 1
          },
          "context": "\"github.com/charmbracelet/bubbles/textarea\"",
          "surroundingLines": [
            "\"github.com/charmbracelet/bubbles/textarea\""
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "github.com/charmbracelet/bubbles/viewport",
          "type": "string",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 11,
            "column": 1
          },
          "context": "\"github.com/charmbracelet/bubbles/viewport\"",
          "surroundingLines": [
            "\"github.com/charmbracelet/bubbles/viewport\""
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "github.com/charmbracelet/bubbletea",
          "type": "string",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 12,
            "column": 5
          },
          "context": "tea \"github.com/charmbracelet/bubbletea\"",
          "surroundingLines": [
            "tea \"github.com/charmbracelet/bubbletea\""
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "github.com/charmbracelet/glamour",
          "type": "string",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 13,
            "column": 1
          },
          "context": "\"github.com/charmbracelet/glamour\"",
          "surroundingLines": [
            "\"github.com/charmbracelet/glamour\""
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "github.com/charmbracelet/lipgloss",
          "type": "string",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 14,
            "column": 1
          },
          "context": "\"github.com/charmbracelet/lipgloss\"",
          "surroundingLines": [
            "\"github.com/charmbracelet/lipgloss\""
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "responseMsg",
          "type": "class",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 46,
            "column": 0
          },
          "context": "type responseMsg struct {",
          "surroundingLines": [
            "",
            "// Messages",
            "type responseMsg struct {",
            "content string",
            "isError bool"
          ],
          "relatedTerms": [
            "responseMsg"
          ],
          "language": "go"
        },
        {
          "term": "responseMsg.content",
          "type": "variable",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 47,
            "column": 0
          },
          "context": "content string",
          "surroundingLines": [
            "content string"
          ],
          "relatedTerms": [
            "string"
          ],
          "language": "go"
        },
        {
          "term": "responseMsg.isError",
          "type": "variable",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 48,
            "column": 0
          },
          "context": "isError bool",
          "surroundingLines": [
            "isError bool"
          ],
          "relatedTerms": [
            "bool"
          ],
          "language": "go"
        },
        {
          "term": "model",
          "type": "class",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 52,
            "column": 0
          },
          "context": "type model struct {",
          "surroundingLines": [
            "",
            "// Model",
            "type model struct {",
            "mode        string",
            "projectPath string"
          ],
          "relatedTerms": [
            "model"
          ],
          "language": "go"
        },
        {
          "term": "model.mode",
          "type": "variable",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 53,
            "column": 0
          },
          "context": "mode        string",
          "surroundingLines": [
            "mode        string"
          ],
          "relatedTerms": [
            "string"
          ],
          "language": "go"
        },
        {
          "term": "model.projectPath",
          "type": "variable",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 54,
            "column": 0
          },
          "context": "projectPath string",
          "surroundingLines": [
            "projectPath string"
          ],
          "relatedTerms": [
            "string"
          ],
          "language": "go"
        },
        {
          "term": "model.question",
          "type": "variable",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 55,
            "column": 0
          },
          "context": "question    string",
          "surroundingLines": [
            "question    string"
          ],
          "relatedTerms": [
            "string"
          ],
          "language": "go"
        },
        {
          "term": "model.viewport",
          "type": "variable",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 56,
            "column": 0
          },
          "context": "viewport    viewport.Model",
          "surroundingLines": [
            "viewport    viewport.Model"
          ],
          "relatedTerms": [
            "viewport"
          ],
          "language": "go"
        },
        {
          "term": "model.textarea",
          "type": "variable",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 57,
            "column": 0
          },
          "context": "textarea    textarea.Model",
          "surroundingLines": [
            "textarea    textarea.Model"
          ],
          "relatedTerms": [
            "textarea"
          ],
          "language": "go"
        },
        {
          "term": "model.spinner",
          "type": "variable",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 58,
            "column": 0
          },
          "context": "spinner     spinner.Model",
          "surroundingLines": [
            "spinner     spinner.Model"
          ],
          "relatedTerms": [
            "spinner"
          ],
          "language": "go"
        },
        {
          "term": "model.messages",
          "type": "variable",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 59,
            "column": 0
          },
          "context": "messages    []message",
          "surroundingLines": [
            "messages    []message"
          ],
          "relatedTerms": [
            "[]message"
          ],
          "language": "go"
        },
        {
          "term": "model.isLoading",
          "type": "variable",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 60,
            "column": 0
          },
          "context": "isLoading   bool",
          "surroundingLines": [
            "isLoading   bool"
          ],
          "relatedTerms": [
            "bool"
          ],
          "language": "go"
        },
        {
          "term": "model.width",
          "type": "variable",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 61,
            "column": 0
          },
          "context": "width       int",
          "surroundingLines": [
            "width       int"
          ],
          "relatedTerms": [
            "int"
          ],
          "language": "go"
        },
        {
          "term": "model.height",
          "type": "variable",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 62,
            "column": 0
          },
          "context": "height      int",
          "surroundingLines": [
            "height      int"
          ],
          "relatedTerms": [
            "int"
          ],
          "language": "go"
        },
        {
          "term": "model.err",
          "type": "variable",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 63,
            "column": 0
          },
          "context": "err         error",
          "surroundingLines": [
            "err         error"
          ],
          "relatedTerms": [
            "error"
          ],
          "language": "go"
        },
        {
          "term": "model.renderer",
          "type": "variable",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 64,
            "column": 0
          },
          "context": "renderer    *glamour.TermRenderer",
          "surroundingLines": [
            "renderer    *glamour.TermRenderer"
          ],
          "relatedTerms": [
            "*glamour"
          ],
          "language": "go"
        },
        {
          "term": "message",
          "type": "class",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 67,
            "column": 0
          },
          "context": "type message struct {",
          "surroundingLines": [
            "}",
            "",
            "type message struct {",
            "role    string // \"user\" or \"curator\"",
            "content string"
          ],
          "relatedTerms": [
            "message"
          ],
          "language": "go"
        },
        {
          "term": "message.role",
          "type": "variable",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 68,
            "column": 0
          },
          "context": "role    string // \"user\" or \"curator\"",
          "surroundingLines": [
            "role    string // \"user\" or \"curator\""
          ],
          "relatedTerms": [
            "string"
          ],
          "language": "go"
        },
        {
          "term": "message.content",
          "type": "variable",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 69,
            "column": 0
          },
          "context": "content string",
          "surroundingLines": [
            "content string"
          ],
          "relatedTerms": [
            "string"
          ],
          "language": "go"
        },
        {
          "term": "initialModel",
          "type": "function",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 72,
            "column": 0
          },
          "context": "func initialModel(mode, projectPath string) model {",
          "surroundingLines": [
            "}",
            "",
            "func initialModel(mode, projectPath string) model {",
            "// Create markdown renderer",
            "renderer, _ := glamour.NewTermRenderer("
          ],
          "relatedTerms": [
            "initialModel",
            "mode",
            "projectPath",
            "model"
          ],
          "language": "go"
        },
        {
          "term": "vp",
          "type": "variable",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 80,
            "column": 0
          },
          "context": "vp := viewport.New(80, 20)",
          "surroundingLines": [
            "",
            "// Create components",
            "vp := viewport.New(80, 20)",
            "ta := textarea.New()",
            "ta.Placeholder = \"Type your message...\""
          ],
          "relatedTerms": [
            "viewport",
            "New"
          ],
          "language": "go"
        },
        {
          "term": "ta",
          "type": "variable",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 81,
            "column": 0
          },
          "context": "ta := textarea.New()",
          "surroundingLines": [
            "// Create components",
            "vp := viewport.New(80, 20)",
            "ta := textarea.New()",
            "ta.Placeholder = \"Type your message...\"",
            "ta.CharLimit = 500"
          ],
          "relatedTerms": [
            "textarea",
            "New"
          ],
          "language": "go"
        },
        {
          "term": "Type your message...",
          "type": "string",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 82,
            "column": 18
          },
          "context": "ta.Placeholder = \"Type your message...\"",
          "surroundingLines": [
            "ta.Placeholder = \"Type your message...\""
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "sp",
          "type": "variable",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 89,
            "column": 0
          },
          "context": "sp := spinner.New()",
          "surroundingLines": [
            "ta.ShowLineNumbers = false",
            "",
            "sp := spinner.New()",
            "sp.Spinner = spinner.Dot",
            "sp.Style = lipgloss.NewStyle().Foreground(lipgloss.Color(\"212\"))"
          ],
          "relatedTerms": [
            "spinner",
            "New"
          ],
          "language": "go"
        },
        {
          "term": "model.Init",
          "type": "function",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 104,
            "column": 0
          },
          "context": "func (m model) Init() tea.Cmd {",
          "surroundingLines": [
            "}",
            "",
            "func (m model) Init() tea.Cmd {",
            "return tea.Batch(",
            "m.spinner.Tick,"
          ],
          "relatedTerms": [
            "model",
            "Init",
            "tea",
            "Cmd"
          ],
          "language": "go"
        },
        {
          "term": "model.executeInitialCommand",
          "type": "function",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 112,
            "column": 0
          },
          "context": "func (m model) executeInitialCommand() tea.Cmd {",
          "surroundingLines": [
            "}",
            "",
            "func (m model) executeInitialCommand() tea.Cmd {",
            "switch m.mode {",
            "case \"overview\":"
          ],
          "relatedTerms": [
            "model",
            "executeInitialCommand",
            "tea",
            "Cmd"
          ],
          "language": "go"
        },
        {
          "term": "model.runCuratorCommand",
          "type": "function",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 130,
            "column": 0
          },
          "context": "func (m model) runCuratorCommand(command string, args ...string) tea.Cmd {",
          "surroundingLines": [
            "}",
            "",
            "func (m model) runCuratorCommand(command string, args ...string) tea.Cmd {",
            "return func() tea.Msg {",
            "cmdArgs := []string{\"run\", \"../../src/tools/curator-cli/cli.ts\", command}"
          ],
          "relatedTerms": [
            "model",
            "runCuratorCommand",
            "command",
            "args",
            "tea",
            "Cmd"
          ],
          "language": "go"
        },
        {
          "term": "cmdArgs",
          "type": "variable",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 132,
            "column": 0
          },
          "context": "cmdArgs := []string{\"run\", \"../../src/tools/curator-cli/cli.ts\", command}",
          "surroundingLines": [
            "func (m model) runCuratorCommand(command string, args ...string) tea.Cmd {",
            "return func() tea.Msg {",
            "cmdArgs := []string{\"run\", \"../../src/tools/curator-cli/cli.ts\", command}",
            "cmdArgs = append(cmdArgs, args...)",
            ""
          ],
          "relatedTerms": [
            "cmdArgs",
            "run",
            "src",
            "tools",
            "curator",
            "cli",
            "command"
          ],
          "language": "go"
        },
        {
          "term": "../../src/tools/curator-cli/cli.ts",
          "type": "string",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 132,
            "column": 29
          },
          "context": "cmdArgs := []string{\"run\", \"../../src/tools/curator-cli/cli.ts\", command}",
          "surroundingLines": [
            "cmdArgs := []string{\"run\", \"../../src/tools/curator-cli/cli.ts\", command}"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "cmd",
          "type": "variable",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 135,
            "column": 0
          },
          "context": "cmd := exec.Command(\"bun\", cmdArgs...)",
          "surroundingLines": [
            "cmdArgs = append(cmdArgs, args...)",
            "",
            "cmd := exec.Command(\"bun\", cmdArgs...)",
            "output, err := cmd.CombinedOutput()",
            ""
          ],
          "relatedTerms": [
            "cmd",
            "exec",
            "Command",
            "bun",
            "cmdArgs"
          ],
          "language": "go"
        },
        {
          "term": "Error: %v\\n%s",
          "type": "string",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 140,
            "column": 25
          },
          "context": "content: fmt.Sprintf(\"Error: %v\\n%s\", err, string(output)),",
          "surroundingLines": [
            "content: fmt.Sprintf(\"Error: %v\\n%s\", err, string(output)),"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "model.Update",
          "type": "function",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 152,
            "column": 0
          },
          "context": "func (m model) Update(msg tea.Msg) (tea.Model, tea.Cmd) {",
          "surroundingLines": [
            "}",
            "",
            "func (m model) Update(msg tea.Msg) (tea.Model, tea.Cmd) {",
            "switch msg := msg.(type) {",
            "case tea.WindowSizeMsg:"
          ],
          "relatedTerms": [
            "model",
            "Update",
            "msg",
            "tea",
            "Msg",
            "Model",
            "Cmd"
          ],
          "language": "go"
        },
        {
          "term": "headerHeight",
          "type": "variable",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 159,
            "column": 0
          },
          "context": "headerHeight := 8",
          "surroundingLines": [
            "",
            "// Update viewport size",
            "headerHeight := 8",
            "footerHeight := 8",
            "m.viewport.Width = msg.Width - 4"
          ],
          "relatedTerms": [
            "headerHeight"
          ],
          "language": "go"
        },
        {
          "term": "footerHeight",
          "type": "variable",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 160,
            "column": 0
          },
          "context": "footerHeight := 8",
          "surroundingLines": [
            "// Update viewport size",
            "headerHeight := 8",
            "footerHeight := 8",
            "m.viewport.Width = msg.Width - 4",
            "m.viewport.Height = msg.Height - headerHeight - footerHeight"
          ],
          "relatedTerms": [
            "footerHeight"
          ],
          "language": "go"
        },
        {
          "term": "userMsg",
          "type": "variable",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 180,
            "column": 0
          },
          "context": "userMsg := m.textarea.Value()",
          "surroundingLines": [
            "if m.mode == \"chat\" && !m.isLoading && m.textarea.Value() != \"\" {",
            "// Send message",
            "userMsg := m.textarea.Value()",
            "m.messages = append(m.messages, message{",
            "role:    \"user\","
          ],
          "relatedTerms": [
            "userMsg",
            "textarea",
            "Value"
          ],
          "language": "go"
        },
        {
          "term": "model.updateViewport",
          "type": "function",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 234,
            "column": 0
          },
          "context": "func (m *model) updateViewport() {",
          "surroundingLines": [
            "}",
            "",
            "func (m *model) updateViewport() {",
            "var content strings.Builder",
            ""
          ],
          "relatedTerms": [
            "model",
            "updateViewport"
          ],
          "language": "go"
        },
        {
          "term": "🧑 You:",
          "type": "string",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 240,
            "column": 40
          },
          "context": "content.WriteString(userStyle.Render(\"🧑 You:\") + \"\\n\")",
          "surroundingLines": [
            "content.WriteString(userStyle.Render(\"🧑 You:\") + \"\\n\")"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "🤖 Curator:",
          "type": "string",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 243,
            "column": 43
          },
          "context": "content.WriteString(curatorStyle.Render(\"🤖 Curator:\") + \"\\n\")",
          "surroundingLines": [
            "content.WriteString(curatorStyle.Render(\"🤖 Curator:\") + \"\\n\")"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "model.View",
          "type": "function",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 258,
            "column": 0
          },
          "context": "func (m model) View() string {",
          "surroundingLines": [
            "}",
            "",
            "func (m model) View() string {",
            "if m.err != nil {",
            "return fmt.Sprintf(\"Error: %v\\n\\nPress Ctrl+C to quit.\", m.err)"
          ],
          "relatedTerms": [
            "model",
            "View"
          ],
          "language": "go"
        },
        {
          "term": "Error: %v\\n\\nPress Ctrl+C to quit.",
          "type": "string",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 260,
            "column": 21
          },
          "context": "return fmt.Sprintf(\"Error: %v\\n\\nPress Ctrl+C to quit.\", m.err)",
          "surroundingLines": [
            "return fmt.Sprintf(\"Error: %v\\n\\nPress Ctrl+C to quit.\", m.err)"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "title",
          "type": "variable",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 264,
            "column": 0
          },
          "context": "title := titleStyle.Render(\"🤖 Curator - AI Codebase Assistant\")",
          "surroundingLines": [
            "",
            "// Title",
            "title := titleStyle.Render(\"🤖 Curator - AI Codebase Assistant\")",
            "",
            "// Main content area"
          ],
          "relatedTerms": [
            "title",
            "titleStyle",
            "Render",
            "Curator",
            "Codebase",
            "Assistant"
          ],
          "language": "go"
        },
        {
          "term": "🤖 Curator - AI Codebase Assistant",
          "type": "string",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 264,
            "column": 28
          },
          "context": "title := titleStyle.Render(\"🤖 Curator - AI Codebase Assistant\")",
          "surroundingLines": [
            "title := titleStyle.Render(\"🤖 Curator - AI Codebase Assistant\")"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": " Thinking...",
          "type": "string",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 271,
            "column": 23
          },
          "context": "m.spinner.View() + \" Thinking...\",",
          "surroundingLines": [
            "m.spinner.View() + \" Thinking...\","
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "Enter: send • Esc: quit • ↑/↓: scroll",
          "type": "string",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 287,
            "column": 26
          },
          "context": "help = helpStyle.Render(\"Enter: send • Esc: quit • ↑/↓: scroll\")",
          "surroundingLines": [
            "help = helpStyle.Render(\"Enter: send • Esc: quit • ↑/↓: scroll\")"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "↑/↓: scroll • Ctrl+C: quit",
          "type": "string",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 289,
            "column": 26
          },
          "context": "help = helpStyle.Render(\"↑/↓: scroll • Ctrl+C: quit\")",
          "surroundingLines": [
            "help = helpStyle.Render(\"↑/↓: scroll • Ctrl+C: quit\")"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "RunTUI",
          "type": "function",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 304,
            "column": 0
          },
          "context": "func RunTUI(projectPath string) error {",
          "surroundingLines": [
            "// Public functions for different modes",
            "",
            "func RunTUI(projectPath string) error {",
            "if projectPath == \"\" {",
            "projectPath, _ = os.Getwd()"
          ],
          "relatedTerms": [
            "RunTUI",
            "projectPath"
          ],
          "language": "go"
        },
        {
          "term": "RunOverviewTUI",
          "type": "function",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 311,
            "column": 0
          },
          "context": "func RunOverviewTUI(projectPath string, newSession bool) error {",
          "surroundingLines": [
            "}",
            "",
            "func RunOverviewTUI(projectPath string, newSession bool) error {",
            "if projectPath == \"\" {",
            "projectPath, _ = os.Getwd()"
          ],
          "relatedTerms": [
            "RunOverviewTUI",
            "projectPath",
            "newSession"
          ],
          "language": "go"
        },
        {
          "term": "m",
          "type": "variable",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 316,
            "column": 0
          },
          "context": "m := initialModel(\"overview\", projectPath)",
          "surroundingLines": [
            "}",
            "",
            "m := initialModel(\"overview\", projectPath)",
            "p := tea.NewProgram(m, tea.WithAltScreen())",
            "_, err := p.Run()"
          ],
          "relatedTerms": [
            "initialModel",
            "overview",
            "projectPath"
          ],
          "language": "go"
        },
        {
          "term": "p",
          "type": "variable",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 317,
            "column": 0
          },
          "context": "p := tea.NewProgram(m, tea.WithAltScreen())",
          "surroundingLines": [
            "",
            "m := initialModel(\"overview\", projectPath)",
            "p := tea.NewProgram(m, tea.WithAltScreen())",
            "_, err := p.Run()",
            "return err"
          ],
          "relatedTerms": [
            "tea",
            "NewProgram",
            "WithAltScreen"
          ],
          "language": "go"
        },
        {
          "term": "RunAskTUI",
          "type": "function",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 322,
            "column": 0
          },
          "context": "func RunAskTUI(projectPath, question string) error {",
          "surroundingLines": [
            "}",
            "",
            "func RunAskTUI(projectPath, question string) error {",
            "if projectPath == \"\" {",
            "projectPath, _ = os.Getwd()"
          ],
          "relatedTerms": [
            "RunAskTUI",
            "projectPath",
            "question"
          ],
          "language": "go"
        },
        {
          "term": "m",
          "type": "variable",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 327,
            "column": 0
          },
          "context": "m := initialModel(\"ask\", projectPath)",
          "surroundingLines": [
            "}",
            "",
            "m := initialModel(\"ask\", projectPath)",
            "m.question = question",
            "p := tea.NewProgram(m, tea.WithAltScreen())"
          ],
          "relatedTerms": [
            "initialModel",
            "ask",
            "projectPath"
          ],
          "language": "go"
        },
        {
          "term": "p",
          "type": "variable",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 329,
            "column": 0
          },
          "context": "p := tea.NewProgram(m, tea.WithAltScreen())",
          "surroundingLines": [
            "m := initialModel(\"ask\", projectPath)",
            "m.question = question",
            "p := tea.NewProgram(m, tea.WithAltScreen())",
            "_, err := p.Run()",
            "return err"
          ],
          "relatedTerms": [
            "tea",
            "NewProgram",
            "WithAltScreen"
          ],
          "language": "go"
        },
        {
          "term": "RunChatTUI",
          "type": "function",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 334,
            "column": 0
          },
          "context": "func RunChatTUI(projectPath string) error {",
          "surroundingLines": [
            "}",
            "",
            "func RunChatTUI(projectPath string) error {",
            "if projectPath == \"\" {",
            "projectPath, _ = os.Getwd()"
          ],
          "relatedTerms": [
            "RunChatTUI",
            "projectPath"
          ],
          "language": "go"
        },
        {
          "term": "m",
          "type": "variable",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 339,
            "column": 0
          },
          "context": "m := initialModel(\"chat\", projectPath)",
          "surroundingLines": [
            "}",
            "",
            "m := initialModel(\"chat\", projectPath)",
            "m.textarea.Focus()",
            ""
          ],
          "relatedTerms": [
            "initialModel",
            "chat",
            "projectPath"
          ],
          "language": "go"
        },
        {
          "term": "# Welcome to Curator Chat! 🤖\\n\\nI'm here to help you understand your codebase. Ask me anything about:\\n\\n- Code structure and architecture\\n- Implementation details\\n- How to add new features\\n- Impact of changes\\n- Best practices in your project\\n\\nWhat would you like to know?",
          "type": "string",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 345,
            "column": 11
          },
          "context": "content: \"# Welcome to Curator Chat! 🤖\\n\\nI'm here to help you understand your codebase. Ask me anything about:\\n\\n- Code structure and architecture\\n- Implementation details\\n- How to add new features\\n- Impact of changes\\n- Best practices in your project\\n\\nWhat would you like to know?\",",
          "surroundingLines": [
            "content: \"# Welcome to Curator Chat! 🤖\\n\\nI'm here to help you understand your codebase. Ask me anything about:\\n\\n- Code structure and architecture\\n- Implementation details\\n- How to add new features\\n- Impact of changes\\n- Best practices in your project\\n\\nWhat would you like to know?\","
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "p",
          "type": "variable",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 349,
            "column": 0
          },
          "context": "p := tea.NewProgram(m, tea.WithAltScreen())",
          "surroundingLines": [
            "m.updateViewport()",
            "",
            "p := tea.NewProgram(m, tea.WithAltScreen())",
            "_, err := p.Run()",
            "return err"
          ],
          "relatedTerms": [
            "tea",
            "NewProgram",
            "WithAltScreen"
          ],
          "language": "go"
        },
        {
          "term": "RunFeatureTUI",
          "type": "function",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 354,
            "column": 0
          },
          "context": "func RunFeatureTUI(projectPath, description string) error {",
          "surroundingLines": [
            "}",
            "",
            "func RunFeatureTUI(projectPath, description string) error {",
            "if projectPath == \"\" {",
            "projectPath, _ = os.Getwd()"
          ],
          "relatedTerms": [
            "RunFeatureTUI",
            "projectPath",
            "description"
          ],
          "language": "go"
        },
        {
          "term": "m",
          "type": "variable",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 359,
            "column": 0
          },
          "context": "m := initialModel(\"feature\", projectPath)",
          "surroundingLines": [
            "}",
            "",
            "m := initialModel(\"feature\", projectPath)",
            "m.question = description",
            "m.isLoading = true"
          ],
          "relatedTerms": [
            "initialModel",
            "feature",
            "projectPath"
          ],
          "language": "go"
        },
        {
          "term": "Feature Request: %s",
          "type": "string",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 366,
            "column": 23
          },
          "context": "content: fmt.Sprintf(\"Feature Request: %s\", description),",
          "surroundingLines": [
            "content: fmt.Sprintf(\"Feature Request: %s\", description),"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "p",
          "type": "variable",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 369,
            "column": 0
          },
          "context": "p := tea.NewProgram(m, tea.WithAltScreen())",
          "surroundingLines": [
            "})",
            "",
            "p := tea.NewProgram(m, tea.WithAltScreen())",
            "_, err := p.Run()",
            "return err"
          ],
          "relatedTerms": [
            "tea",
            "NewProgram",
            "WithAltScreen"
          ],
          "language": "go"
        },
        {
          "term": "RunChangeTUI",
          "type": "function",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 374,
            "column": 0
          },
          "context": "func RunChangeTUI(projectPath, description string) error {",
          "surroundingLines": [
            "}",
            "",
            "func RunChangeTUI(projectPath, description string) error {",
            "if projectPath == \"\" {",
            "projectPath, _ = os.Getwd()"
          ],
          "relatedTerms": [
            "RunChangeTUI",
            "projectPath",
            "description"
          ],
          "language": "go"
        },
        {
          "term": "m",
          "type": "variable",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 379,
            "column": 0
          },
          "context": "m := initialModel(\"change\", projectPath)",
          "surroundingLines": [
            "}",
            "",
            "m := initialModel(\"change\", projectPath)",
            "m.question = description",
            "m.isLoading = true"
          ],
          "relatedTerms": [
            "initialModel",
            "change",
            "projectPath"
          ],
          "language": "go"
        },
        {
          "term": "Change Analysis: %s",
          "type": "string",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 386,
            "column": 23
          },
          "context": "content: fmt.Sprintf(\"Change Analysis: %s\", description),",
          "surroundingLines": [
            "content: fmt.Sprintf(\"Change Analysis: %s\", description),"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "p",
          "type": "variable",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 389,
            "column": 0
          },
          "context": "p := tea.NewProgram(m, tea.WithAltScreen())",
          "surroundingLines": [
            "})",
            "",
            "p := tea.NewProgram(m, tea.WithAltScreen())",
            "_, err := p.Run()",
            "return err"
          ],
          "relatedTerms": [
            "tea",
            "NewProgram",
            "WithAltScreen"
          ],
          "language": "go"
        },
        {
          "term": "RunMemoryTUI",
          "type": "function",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 394,
            "column": 0
          },
          "context": "func RunMemoryTUI(projectPath string) error {",
          "surroundingLines": [
            "}",
            "",
            "func RunMemoryTUI(projectPath string) error {",
            "if projectPath == \"\" {",
            "projectPath, _ = os.Getwd()"
          ],
          "relatedTerms": [
            "RunMemoryTUI",
            "projectPath"
          ],
          "language": "go"
        },
        {
          "term": "m",
          "type": "variable",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 399,
            "column": 0
          },
          "context": "m := initialModel(\"memory\", projectPath)",
          "surroundingLines": [
            "}",
            "",
            "m := initialModel(\"memory\", projectPath)",
            "m.isLoading = true",
            ""
          ],
          "relatedTerms": [
            "initialModel",
            "memory",
            "projectPath"
          ],
          "language": "go"
        },
        {
          "term": "p",
          "type": "variable",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 402,
            "column": 0
          },
          "context": "p := tea.NewProgram(m, tea.WithAltScreen())",
          "surroundingLines": [
            "m.isLoading = true",
            "",
            "p := tea.NewProgram(m, tea.WithAltScreen())",
            "_, err := p.Run()",
            "return err"
          ],
          "relatedTerms": [
            "tea",
            "NewProgram",
            "WithAltScreen"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "internal/smartgrep/tui.go",
      [
        {
          "term": "smartgrep",
          "type": "module",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 1,
            "column": 0
          },
          "context": "package smartgrep",
          "surroundingLines": [
            "package smartgrep"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "os/exec",
          "type": "string",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 5,
            "column": 1
          },
          "context": "\"os/exec\"",
          "surroundingLines": [
            "\"os/exec\""
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "github.com/charmbracelet/bubbles/key",
          "type": "string",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 7,
            "column": 1
          },
          "context": "\"github.com/charmbracelet/bubbles/key\"",
          "surroundingLines": [
            "\"github.com/charmbracelet/bubbles/key\""
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "github.com/charmbracelet/bubbles/list",
          "type": "string",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 8,
            "column": 1
          },
          "context": "\"github.com/charmbracelet/bubbles/list\"",
          "surroundingLines": [
            "\"github.com/charmbracelet/bubbles/list\""
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "github.com/charmbracelet/bubbles/textinput",
          "type": "string",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 9,
            "column": 1
          },
          "context": "\"github.com/charmbracelet/bubbles/textinput\"",
          "surroundingLines": [
            "\"github.com/charmbracelet/bubbles/textinput\""
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "github.com/charmbracelet/bubbletea",
          "type": "string",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 10,
            "column": 5
          },
          "context": "tea \"github.com/charmbracelet/bubbletea\"",
          "surroundingLines": [
            "tea \"github.com/charmbracelet/bubbletea\""
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "github.com/charmbracelet/lipgloss",
          "type": "string",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 11,
            "column": 1
          },
          "context": "\"github.com/charmbracelet/lipgloss\"",
          "surroundingLines": [
            "\"github.com/charmbracelet/lipgloss\""
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "keyMap",
          "type": "class",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 30,
            "column": 0
          },
          "context": "type keyMap struct {",
          "surroundingLines": [
            "",
            "// Key bindings",
            "type keyMap struct {",
            "Up     key.Binding",
            "Down   key.Binding"
          ],
          "relatedTerms": [
            "keyMap"
          ],
          "language": "go"
        },
        {
          "term": "keyMap.Up",
          "type": "variable",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 31,
            "column": 0
          },
          "context": "Up     key.Binding",
          "surroundingLines": [
            "Up     key.Binding"
          ],
          "relatedTerms": [
            "key"
          ],
          "language": "go"
        },
        {
          "term": "keyMap.Down",
          "type": "variable",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 32,
            "column": 0
          },
          "context": "Down   key.Binding",
          "surroundingLines": [
            "Down   key.Binding"
          ],
          "relatedTerms": [
            "key"
          ],
          "language": "go"
        },
        {
          "term": "keyMap.Select",
          "type": "variable",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 33,
            "column": 0
          },
          "context": "Select key.Binding",
          "surroundingLines": [
            "Select key.Binding"
          ],
          "relatedTerms": [
            "key"
          ],
          "language": "go"
        },
        {
          "term": "keyMap.Back",
          "type": "variable",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 34,
            "column": 0
          },
          "context": "Back   key.Binding",
          "surroundingLines": [
            "Back   key.Binding"
          ],
          "relatedTerms": [
            "key"
          ],
          "language": "go"
        },
        {
          "term": "keyMap.Quit",
          "type": "variable",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 35,
            "column": 0
          },
          "context": "Quit   key.Binding",
          "surroundingLines": [
            "Quit   key.Binding"
          ],
          "relatedTerms": [
            "key"
          ],
          "language": "go"
        },
        {
          "term": "keys",
          "type": "variable",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 38,
            "column": 0
          },
          "context": "var keys = keyMap{",
          "surroundingLines": [
            "}",
            "",
            "var keys = keyMap{",
            "Up: key.NewBinding(",
            "key.WithKeys(\"up\", \"k\"),"
          ],
          "relatedTerms": [
            "keys",
            "keyMap"
          ],
          "language": "go"
        },
        {
          "term": "menuItem",
          "type": "class",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 62,
            "column": 0
          },
          "context": "type menuItem struct {",
          "surroundingLines": [
            "",
            "// Main menu item",
            "type menuItem struct {",
            "title       string",
            "description string"
          ],
          "relatedTerms": [
            "menuItem"
          ],
          "language": "go"
        },
        {
          "term": "menuItem.title",
          "type": "variable",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 63,
            "column": 0
          },
          "context": "title       string",
          "surroundingLines": [
            "title       string"
          ],
          "relatedTerms": [
            "string"
          ],
          "language": "go"
        },
        {
          "term": "menuItem.description",
          "type": "variable",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 64,
            "column": 0
          },
          "context": "description string",
          "surroundingLines": [
            "description string"
          ],
          "relatedTerms": [
            "string"
          ],
          "language": "go"
        },
        {
          "term": "menuItem.action",
          "type": "variable",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 65,
            "column": 0
          },
          "context": "action      string",
          "surroundingLines": [
            "action      string"
          ],
          "relatedTerms": [
            "string"
          ],
          "language": "go"
        },
        {
          "term": "menuItem.Title",
          "type": "function",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 68,
            "column": 0
          },
          "context": "func (i menuItem) Title() string       { return i.title }",
          "surroundingLines": [
            "}",
            "",
            "func (i menuItem) Title() string       { return i.title }",
            "func (i menuItem) Description() string { return i.description }",
            "func (i menuItem) FilterValue() string { return i.title }"
          ],
          "relatedTerms": [
            "menuItem",
            "Title",
            "title"
          ],
          "language": "go"
        },
        {
          "term": "menuItem.Description",
          "type": "function",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 69,
            "column": 0
          },
          "context": "func (i menuItem) Description() string { return i.description }",
          "surroundingLines": [
            "",
            "func (i menuItem) Title() string       { return i.title }",
            "func (i menuItem) Description() string { return i.description }",
            "func (i menuItem) FilterValue() string { return i.title }",
            ""
          ],
          "relatedTerms": [
            "menuItem",
            "Description",
            "description"
          ],
          "language": "go"
        },
        {
          "term": "menuItem.FilterValue",
          "type": "function",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 70,
            "column": 0
          },
          "context": "func (i menuItem) FilterValue() string { return i.title }",
          "surroundingLines": [
            "func (i menuItem) Title() string       { return i.title }",
            "func (i menuItem) Description() string { return i.description }",
            "func (i menuItem) FilterValue() string { return i.title }",
            "",
            "// Main model"
          ],
          "relatedTerms": [
            "menuItem",
            "FilterValue",
            "title"
          ],
          "language": "go"
        },
        {
          "term": "model",
          "type": "class",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 73,
            "column": 0
          },
          "context": "type model struct {",
          "surroundingLines": [
            "",
            "// Main model",
            "type model struct {",
            "mode        string",
            "mainMenu    list.Model"
          ],
          "relatedTerms": [
            "model"
          ],
          "language": "go"
        },
        {
          "term": "model.mode",
          "type": "variable",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 74,
            "column": 0
          },
          "context": "mode        string",
          "surroundingLines": [
            "mode        string"
          ],
          "relatedTerms": [
            "string"
          ],
          "language": "go"
        },
        {
          "term": "model.mainMenu",
          "type": "variable",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 75,
            "column": 0
          },
          "context": "mainMenu    list.Model",
          "surroundingLines": [
            "mainMenu    list.Model"
          ],
          "relatedTerms": [
            "list"
          ],
          "language": "go"
        },
        {
          "term": "model.searchInput",
          "type": "variable",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 76,
            "column": 0
          },
          "context": "searchInput textinput.Model",
          "surroundingLines": [
            "searchInput textinput.Model"
          ],
          "relatedTerms": [
            "textinput"
          ],
          "language": "go"
        },
        {
          "term": "model.results",
          "type": "variable",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 77,
            "column": 0
          },
          "context": "results     string",
          "surroundingLines": [
            "results     string"
          ],
          "relatedTerms": [
            "string"
          ],
          "language": "go"
        },
        {
          "term": "model.err",
          "type": "variable",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 78,
            "column": 0
          },
          "context": "err         error",
          "surroundingLines": [
            "err         error"
          ],
          "relatedTerms": [
            "error"
          ],
          "language": "go"
        },
        {
          "term": "initialModel",
          "type": "function",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 81,
            "column": 0
          },
          "context": "func initialModel() model {",
          "surroundingLines": [
            "}",
            "",
            "func initialModel() model {",
            "// Main menu items",
            "items := []list.Item{"
          ],
          "relatedTerms": [
            "initialModel",
            "model"
          ],
          "language": "go"
        },
        {
          "term": "items",
          "type": "variable",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 83,
            "column": 0
          },
          "context": "items := []list.Item{",
          "surroundingLines": [
            "func initialModel() model {",
            "// Main menu items",
            "items := []list.Item{",
            "menuItem{",
            "title:       \"🔍 Pattern Search\","
          ],
          "relatedTerms": [
            "items",
            "list",
            "Item"
          ],
          "language": "go"
        },
        {
          "term": "🔍 Pattern Search",
          "type": "string",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 85,
            "column": 16
          },
          "context": "title:       \"🔍 Pattern Search\",",
          "surroundingLines": [
            "title:       \"🔍 Pattern Search\","
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "Search for specific terms with AND/OR/NOT logic",
          "type": "string",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 86,
            "column": 16
          },
          "context": "description: \"Search for specific terms with AND/OR/NOT logic\",",
          "surroundingLines": [
            "description: \"Search for specific terms with AND/OR/NOT logic\","
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "📦 Concept Groups",
          "type": "string",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 90,
            "column": 16
          },
          "context": "title:       \"📦 Concept Groups\",",
          "surroundingLines": [
            "title:       \"📦 Concept Groups\","
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "Search predefined semantic groups",
          "type": "string",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 91,
            "column": 16
          },
          "context": "description: \"Search predefined semantic groups\",",
          "surroundingLines": [
            "description: \"Search predefined semantic groups\","
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "🔗 Find References",
          "type": "string",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 95,
            "column": 16
          },
          "context": "title:       \"🔗 Find References\",",
          "surroundingLines": [
            "title:       \"🔗 Find References\","
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "Find all usages of a symbol",
          "type": "string",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 96,
            "column": 16
          },
          "context": "description: \"Find all usages of a symbol\",",
          "surroundingLines": [
            "description: \"Find all usages of a symbol\","
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "📊 Analyze Changes",
          "type": "string",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 100,
            "column": 16
          },
          "context": "title:       \"📊 Analyze Changes\",",
          "surroundingLines": [
            "title:       \"📊 Analyze Changes\","
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "Impact analysis of uncommitted changes",
          "type": "string",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 101,
            "column": 16
          },
          "context": "description: \"Impact analysis of uncommitted changes\",",
          "surroundingLines": [
            "description: \"Impact analysis of uncommitted changes\","
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "🤖 Claude Batch Mode",
          "type": "string",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 105,
            "column": 16
          },
          "context": "title:       \"🤖 Claude Batch Mode\",",
          "surroundingLines": [
            "title:       \"🤖 Claude Batch Mode\","
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "Comprehensive multi-search for exploration",
          "type": "string",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 106,
            "column": 16
          },
          "context": "description: \"Comprehensive multi-search for exploration\",",
          "surroundingLines": [
            "description: \"Comprehensive multi-search for exploration\","
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "mainMenu",
          "type": "variable",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 112,
            "column": 0
          },
          "context": "mainMenu := list.New(items, list.NewDefaultDelegate(), 0, 0)",
          "surroundingLines": [
            "",
            "// Create list",
            "mainMenu := list.New(items, list.NewDefaultDelegate(), 0, 0)",
            "mainMenu.Title = \"SmartGrep - Semantic Search\"",
            "mainMenu.SetShowStatusBar(false)"
          ],
          "relatedTerms": [
            "mainMenu",
            "list",
            "New",
            "items",
            "NewDefaultDelegate"
          ],
          "language": "go"
        },
        {
          "term": "SmartGrep - Semantic Search",
          "type": "string",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 113,
            "column": 18
          },
          "context": "mainMenu.Title = \"SmartGrep - Semantic Search\"",
          "surroundingLines": [
            "mainMenu.Title = \"SmartGrep - Semantic Search\""
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "searchInput",
          "type": "variable",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 118,
            "column": 0
          },
          "context": "searchInput := textinput.New()",
          "surroundingLines": [
            "",
            "// Search input",
            "searchInput := textinput.New()",
            "searchInput.Placeholder = \"Enter search pattern...\"",
            "searchInput.CharLimit = 200"
          ],
          "relatedTerms": [
            "searchInput",
            "textinput",
            "New"
          ],
          "language": "go"
        },
        {
          "term": "Enter search pattern...",
          "type": "string",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 119,
            "column": 27
          },
          "context": "searchInput.Placeholder = \"Enter search pattern...\"",
          "surroundingLines": [
            "searchInput.Placeholder = \"Enter search pattern...\""
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "model.Init",
          "type": "function",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 131,
            "column": 0
          },
          "context": "func (m model) Init() tea.Cmd {",
          "surroundingLines": [
            "}",
            "",
            "func (m model) Init() tea.Cmd {",
            "return nil",
            "}"
          ],
          "relatedTerms": [
            "model",
            "Init",
            "tea",
            "Cmd"
          ],
          "language": "go"
        },
        {
          "term": "model.Update",
          "type": "function",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 135,
            "column": 0
          },
          "context": "func (m model) Update(msg tea.Msg) (tea.Model, tea.Cmd) {",
          "surroundingLines": [
            "}",
            "",
            "func (m model) Update(msg tea.Msg) (tea.Model, tea.Cmd) {",
            "switch msg := msg.(type) {",
            "case tea.WindowSizeMsg:"
          ],
          "relatedTerms": [
            "model",
            "Update",
            "msg",
            "tea",
            "Msg",
            "Model",
            "Cmd"
          ],
          "language": "go"
        },
        {
          "term": "selected",
          "type": "variable",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 149,
            "column": 0
          },
          "context": "selected := m.mainMenu.SelectedItem().(menuItem)",
          "surroundingLines": [
            "return m, tea.Quit",
            "case key.Matches(msg, keys.Select):",
            "selected := m.mainMenu.SelectedItem().(menuItem)",
            "m.mode = selected.action",
            "if m.mode == \"pattern\" || m.mode == \"refs\" {"
          ],
          "relatedTerms": [
            "selected",
            "mainMenu",
            "SelectedItem",
            "menuItem"
          ],
          "language": "go"
        },
        {
          "term": "model.View",
          "type": "function",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 208,
            "column": 0
          },
          "context": "func (m model) View() string {",
          "surroundingLines": [
            "}",
            "",
            "func (m model) View() string {",
            "if m.err != nil {",
            "return fmt.Sprintf(\"Error: %v\\n\\nPress 'q' to quit.\", m.err)"
          ],
          "relatedTerms": [
            "model",
            "View"
          ],
          "language": "go"
        },
        {
          "term": "Error: %v\\n\\nPress 'q' to quit.",
          "type": "string",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 210,
            "column": 21
          },
          "context": "return fmt.Sprintf(\"Error: %v\\n\\nPress 'q' to quit.\", m.err)",
          "surroundingLines": [
            "return fmt.Sprintf(\"Error: %v\\n\\nPress 'q' to quit.\", m.err)"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "🔍 SmartGrep TUI",
          "type": "string",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 215,
            "column": 27
          },
          "context": "return titleStyle.Render(\"🔍 SmartGrep TUI\") + \"\\n\\n\" + m.mainMenu.View()",
          "surroundingLines": [
            "return titleStyle.Render(\"🔍 SmartGrep TUI\") + \"\\n\\n\" + m.mainMenu.View()"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "Pattern Search",
          "type": "string",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 218,
            "column": 27
          },
          "context": "return titleStyle.Render(\"Pattern Search\") + \"\\n\\n\" +",
          "surroundingLines": [
            "return titleStyle.Render(\"Pattern Search\") + \"\\n\\n\" +"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "Enter search pattern (use | for OR, & for AND, ! for NOT):\\n\\n",
          "type": "string",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 219,
            "column": 3
          },
          "context": "\"Enter search pattern (use | for OR, & for AND, ! for NOT):\\n\\n\" +",
          "surroundingLines": [
            "\"Enter search pattern (use | for OR, & for AND, ! for NOT):\\n\\n\" +"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "Press Enter to search, Esc to go back",
          "type": "string",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 221,
            "column": 3
          },
          "context": "\"Press Enter to search, Esc to go back\"",
          "surroundingLines": [
            "\"Press Enter to search, Esc to go back\""
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "Find References",
          "type": "string",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 224,
            "column": 27
          },
          "context": "return titleStyle.Render(\"Find References\") + \"\\n\\n\" +",
          "surroundingLines": [
            "return titleStyle.Render(\"Find References\") + \"\\n\\n\" +"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "Enter symbol name:\\n\\n",
          "type": "string",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 225,
            "column": 3
          },
          "context": "\"Enter symbol name:\\n\\n\" +",
          "surroundingLines": [
            "\"Enter symbol name:\\n\\n\" +"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "Press Enter to search, Esc to go back",
          "type": "string",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 227,
            "column": 3
          },
          "context": "\"Press Enter to search, Esc to go back\"",
          "surroundingLines": [
            "\"Press Enter to search, Esc to go back\""
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "Search Results",
          "type": "string",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 230,
            "column": 27
          },
          "context": "return titleStyle.Render(\"Search Results\") + \"\\n\\n\" +",
          "surroundingLines": [
            "return titleStyle.Render(\"Search Results\") + \"\\n\\n\" +"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "Press Esc to go back, q to quit",
          "type": "string",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 232,
            "column": 3
          },
          "context": "\"Press Esc to go back, q to quit\"",
          "surroundingLines": [
            "\"Press Esc to go back, q to quit\""
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "Loading...",
          "type": "string",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 235,
            "column": 9
          },
          "context": "return \"Loading...\"",
          "surroundingLines": [
            "return \"Loading...\""
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "searchResultMsg",
          "type": "class",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 240,
            "column": 0
          },
          "context": "type searchResultMsg string",
          "surroundingLines": [
            "",
            "// Commands",
            "type searchResultMsg string",
            "type errMsg error",
            ""
          ],
          "relatedTerms": [
            "searchResultMsg"
          ],
          "language": "go"
        },
        {
          "term": "errMsg",
          "type": "class",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 241,
            "column": 0
          },
          "context": "type errMsg error",
          "surroundingLines": [
            "// Commands",
            "type searchResultMsg string",
            "type errMsg error",
            "",
            "func (m model) executeSearch() tea.Cmd {"
          ],
          "relatedTerms": [
            "errMsg"
          ],
          "language": "go"
        },
        {
          "term": "model.executeSearch",
          "type": "function",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 243,
            "column": 0
          },
          "context": "func (m model) executeSearch() tea.Cmd {",
          "surroundingLines": [
            "type errMsg error",
            "",
            "func (m model) executeSearch() tea.Cmd {",
            "return func() tea.Msg {",
            "var cmdArgs []string"
          ],
          "relatedTerms": [
            "model",
            "executeSearch",
            "tea",
            "Cmd"
          ],
          "language": "go"
        },
        {
          "term": "search pattern required",
          "type": "string",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 250,
            "column": 29
          },
          "context": "return errMsg(fmt.Errorf(\"search pattern required\"))",
          "surroundingLines": [
            "return errMsg(fmt.Errorf(\"search pattern required\"))"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "../../src/tools/smartgrep/cli.ts",
          "type": "string",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 252,
            "column": 29
          },
          "context": "cmdArgs = []string{\"run\", \"../../src/tools/smartgrep/cli.ts\", m.searchInput.Value()}",
          "surroundingLines": [
            "cmdArgs = []string{\"run\", \"../../src/tools/smartgrep/cli.ts\", m.searchInput.Value()}"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "symbol name required",
          "type": "string",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 256,
            "column": 29
          },
          "context": "return errMsg(fmt.Errorf(\"symbol name required\"))",
          "surroundingLines": [
            "return errMsg(fmt.Errorf(\"symbol name required\"))"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "../../src/tools/smartgrep/cli.ts",
          "type": "string",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 258,
            "column": 29
          },
          "context": "cmdArgs = []string{\"run\", \"../../src/tools/smartgrep/cli.ts\", \"refs\", m.searchInput.Value()}",
          "surroundingLines": [
            "cmdArgs = []string{\"run\", \"../../src/tools/smartgrep/cli.ts\", \"refs\", m.searchInput.Value()}"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "../../src/tools/smartgrep/cli.ts",
          "type": "string",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 262,
            "column": 29
          },
          "context": "cmdArgs = []string{\"run\", \"../../src/tools/smartgrep/cli.ts\", \"group\", \"list\"}",
          "surroundingLines": [
            "cmdArgs = []string{\"run\", \"../../src/tools/smartgrep/cli.ts\", \"group\", \"list\"}"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "../../src/tools/smartgrep/cli.ts",
          "type": "string",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 265,
            "column": 29
          },
          "context": "cmdArgs = []string{\"run\", \"../../src/tools/smartgrep/cli.ts\", \"changes\"}",
          "surroundingLines": [
            "cmdArgs = []string{\"run\", \"../../src/tools/smartgrep/cli.ts\", \"changes\"}"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "topic",
          "type": "variable",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 269,
            "column": 0
          },
          "context": "topic := \"general\"",
          "surroundingLines": [
            "case \"claude\":",
            "// Special handling for Claude batch mode",
            "topic := \"general\"",
            "if m.searchInput.Value() != \"\" {",
            "topic = m.searchInput.Value()"
          ],
          "relatedTerms": [
            "topic",
            "general"
          ],
          "language": "go"
        },
        {
          "term": "Claude Batch Mode for topic: %s\\n\\nThis would run multiple searches and create a comprehensive report.\\n(Full implementation pending)",
          "type": "string",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 273,
            "column": 38
          },
          "context": "return searchResultMsg(fmt.Sprintf(\"Claude Batch Mode for topic: %s\\n\\nThis would run multiple searches and create a comprehensive report.\\n(Full implementation pending)\", topic))",
          "surroundingLines": [
            "return searchResultMsg(fmt.Sprintf(\"Claude Batch Mode for topic: %s\\n\\nThis would run multiple searches and create a comprehensive report.\\n(Full implementation pending)\", topic))"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "cmd",
          "type": "variable",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 277,
            "column": 0
          },
          "context": "cmd := exec.Command(\"bun\", cmdArgs...)",
          "surroundingLines": [
            "",
            "// Execute command",
            "cmd := exec.Command(\"bun\", cmdArgs...)",
            "output, err := cmd.CombinedOutput()",
            "if err != nil {"
          ],
          "relatedTerms": [
            "cmd",
            "exec",
            "Command",
            "bun",
            "cmdArgs"
          ],
          "language": "go"
        },
        {
          "term": "command failed: %w\\n%s",
          "type": "string",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 280,
            "column": 28
          },
          "context": "return errMsg(fmt.Errorf(\"command failed: %w\\n%s\", err, string(output)))",
          "surroundingLines": [
            "return errMsg(fmt.Errorf(\"command failed: %w\\n%s\", err, string(output)))"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "RunTUI",
          "type": "function",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 288,
            "column": 0
          },
          "context": "func RunTUI() error {",
          "surroundingLines": [
            "",
            "// RunTUI launches the main TUI",
            "func RunTUI() error {",
            "p := tea.NewProgram(initialModel(), tea.WithAltScreen())",
            "_, err := p.Run()"
          ],
          "relatedTerms": [
            "RunTUI"
          ],
          "language": "go"
        },
        {
          "term": "p",
          "type": "variable",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 289,
            "column": 0
          },
          "context": "p := tea.NewProgram(initialModel(), tea.WithAltScreen())",
          "surroundingLines": [
            "// RunTUI launches the main TUI",
            "func RunTUI() error {",
            "p := tea.NewProgram(initialModel(), tea.WithAltScreen())",
            "_, err := p.Run()",
            "return err"
          ],
          "relatedTerms": [
            "tea",
            "NewProgram",
            "initialModel",
            "WithAltScreen"
          ],
          "language": "go"
        },
        {
          "term": "RunGroupTUI",
          "type": "function",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 295,
            "column": 0
          },
          "context": "func RunGroupTUI() error {",
          "surroundingLines": [
            "",
            "// RunGroupTUI launches group-specific TUI",
            "func RunGroupTUI() error {",
            "// For now, redirect to main TUI",
            "return RunTUI()"
          ],
          "relatedTerms": [
            "RunGroupTUI"
          ],
          "language": "go"
        },
        {
          "term": "RunRefsTUI",
          "type": "function",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 301,
            "column": 0
          },
          "context": "func RunRefsTUI() error {",
          "surroundingLines": [
            "",
            "// RunRefsTUI launches refs-specific TUI",
            "func RunRefsTUI() error {",
            "// For now, redirect to main TUI",
            "return RunTUI()"
          ],
          "relatedTerms": [
            "RunRefsTUI"
          ],
          "language": "go"
        },
        {
          "term": "RunChangesTUI",
          "type": "function",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 307,
            "column": 0
          },
          "context": "func RunChangesTUI() error {",
          "surroundingLines": [
            "",
            "// RunChangesTUI launches changes-specific TUI",
            "func RunChangesTUI() error {",
            "// For now, redirect to main TUI",
            "return RunTUI()"
          ],
          "relatedTerms": [
            "RunChangesTUI"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "internal/config/config.go",
      [
        {
          "term": "config",
          "type": "module",
          "location": {
            "file": "internal/config/config.go",
            "line": 1,
            "column": 0
          },
          "context": "package config",
          "surroundingLines": [
            "package config"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "path/filepath",
          "type": "string",
          "location": {
            "file": "internal/config/config.go",
            "line": 5,
            "column": 1
          },
          "context": "\"path/filepath\"",
          "surroundingLines": [
            "\"path/filepath\""
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "GetSmartgrepPath",
          "type": "function",
          "location": {
            "file": "internal/config/config.go",
            "line": 9,
            "column": 0
          },
          "context": "func GetSmartgrepPath() string {",
          "surroundingLines": [
            "",
            "// GetSmartgrepPath returns the path to the smartgrep CLI",
            "func GetSmartgrepPath() string {",
            "// Check for environment variable first (for custom installations)",
            "if path := os.Getenv(\"SMARTGREP_CLI_PATH\"); path != \"\" {"
          ],
          "relatedTerms": [
            "GetSmartgrepPath"
          ],
          "language": "go"
        },
        {
          "term": "SMARTGREP_CLI_PATH",
          "type": "string",
          "location": {
            "file": "internal/config/config.go",
            "line": 11,
            "column": 22
          },
          "context": "if path := os.Getenv(\"SMARTGREP_CLI_PATH\"); path != \"\" {",
          "surroundingLines": [
            "if path := os.Getenv(\"SMARTGREP_CLI_PATH\"); path != \"\" {"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "dir",
          "type": "variable",
          "location": {
            "file": "internal/config/config.go",
            "line": 18,
            "column": 0
          },
          "context": "dir := filepath.Dir(execPath)",
          "surroundingLines": [
            "if execPath, err := os.Executable(); err == nil {",
            "// Check if TypeScript version exists relative to executable",
            "dir := filepath.Dir(execPath)",
            "",
            "// Development paths (when running from build/bin/)"
          ],
          "relatedTerms": [
            "dir",
            "filepath",
            "Dir",
            "execPath"
          ],
          "language": "go"
        },
        {
          "term": "devPaths",
          "type": "variable",
          "location": {
            "file": "internal/config/config.go",
            "line": 21,
            "column": 0
          },
          "context": "devPaths := []string{",
          "surroundingLines": [
            "",
            "// Development paths (when running from build/bin/)",
            "devPaths := []string{",
            "filepath.Join(dir, \"..\", \"..\", \"..\", \"..\", \"src\", \"tools\", \"smartgrep\", \"cli.ts\"),",
            "filepath.Join(dir, \"..\", \"..\", \"src\", \"tools\", \"smartgrep\", \"cli.ts\"),"
          ],
          "relatedTerms": [
            "devPaths"
          ],
          "language": "go"
        },
        {
          "term": "cli.ts",
          "type": "string",
          "location": {
            "file": "internal/config/config.go",
            "line": 22,
            "column": 75
          },
          "context": "filepath.Join(dir, \"..\", \"..\", \"..\", \"..\", \"src\", \"tools\", \"smartgrep\", \"cli.ts\"),",
          "surroundingLines": [
            "filepath.Join(dir, \"..\", \"..\", \"..\", \"..\", \"src\", \"tools\", \"smartgrep\", \"cli.ts\"),"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "cli.ts",
          "type": "string",
          "location": {
            "file": "internal/config/config.go",
            "line": 23,
            "column": 63
          },
          "context": "filepath.Join(dir, \"..\", \"..\", \"src\", \"tools\", \"smartgrep\", \"cli.ts\"),",
          "surroundingLines": [
            "filepath.Join(dir, \"..\", \"..\", \"src\", \"tools\", \"smartgrep\", \"cli.ts\"),"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "GetCuratorPath",
          "type": "function",
          "location": {
            "file": "internal/config/config.go",
            "line": 38,
            "column": 0
          },
          "context": "func GetCuratorPath() string {",
          "surroundingLines": [
            "",
            "// GetCuratorPath returns the path to the curator CLI",
            "func GetCuratorPath() string {",
            "// Check for environment variable first",
            "if path := os.Getenv(\"CURATOR_CLI_PATH\"); path != \"\" {"
          ],
          "relatedTerms": [
            "GetCuratorPath"
          ],
          "language": "go"
        },
        {
          "term": "CURATOR_CLI_PATH",
          "type": "string",
          "location": {
            "file": "internal/config/config.go",
            "line": 40,
            "column": 22
          },
          "context": "if path := os.Getenv(\"CURATOR_CLI_PATH\"); path != \"\" {",
          "surroundingLines": [
            "if path := os.Getenv(\"CURATOR_CLI_PATH\"); path != \"\" {"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "dir",
          "type": "variable",
          "location": {
            "file": "internal/config/config.go",
            "line": 46,
            "column": 0
          },
          "context": "dir := filepath.Dir(execPath)",
          "surroundingLines": [
            "// Check if we're in development mode",
            "if execPath, err := os.Executable(); err == nil {",
            "dir := filepath.Dir(execPath)",
            "",
            "devPaths := []string{"
          ],
          "relatedTerms": [
            "dir",
            "filepath",
            "Dir",
            "execPath"
          ],
          "language": "go"
        },
        {
          "term": "devPaths",
          "type": "variable",
          "location": {
            "file": "internal/config/config.go",
            "line": 48,
            "column": 0
          },
          "context": "devPaths := []string{",
          "surroundingLines": [
            "dir := filepath.Dir(execPath)",
            "",
            "devPaths := []string{",
            "filepath.Join(dir, \"..\", \"..\", \"..\", \"..\", \"src\", \"tools\", \"curator-cli\", \"cli.ts\"),",
            "filepath.Join(dir, \"..\", \"..\", \"src\", \"tools\", \"curator-cli\", \"cli.ts\"),"
          ],
          "relatedTerms": [
            "devPaths"
          ],
          "language": "go"
        },
        {
          "term": "curator-cli",
          "type": "string",
          "location": {
            "file": "internal/config/config.go",
            "line": 49,
            "column": 62
          },
          "context": "filepath.Join(dir, \"..\", \"..\", \"..\", \"..\", \"src\", \"tools\", \"curator-cli\", \"cli.ts\"),",
          "surroundingLines": [
            "filepath.Join(dir, \"..\", \"..\", \"..\", \"..\", \"src\", \"tools\", \"curator-cli\", \"cli.ts\"),"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "cli.ts",
          "type": "string",
          "location": {
            "file": "internal/config/config.go",
            "line": 49,
            "column": 77
          },
          "context": "filepath.Join(dir, \"..\", \"..\", \"..\", \"..\", \"src\", \"tools\", \"curator-cli\", \"cli.ts\"),",
          "surroundingLines": [
            "filepath.Join(dir, \"..\", \"..\", \"..\", \"..\", \"src\", \"tools\", \"curator-cli\", \"cli.ts\"),"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "curator-cli",
          "type": "string",
          "location": {
            "file": "internal/config/config.go",
            "line": 50,
            "column": 50
          },
          "context": "filepath.Join(dir, \"..\", \"..\", \"src\", \"tools\", \"curator-cli\", \"cli.ts\"),",
          "surroundingLines": [
            "filepath.Join(dir, \"..\", \"..\", \"src\", \"tools\", \"curator-cli\", \"cli.ts\"),"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "cli.ts",
          "type": "string",
          "location": {
            "file": "internal/config/config.go",
            "line": 50,
            "column": 65
          },
          "context": "filepath.Join(dir, \"..\", \"..\", \"src\", \"tools\", \"curator-cli\", \"cli.ts\"),",
          "surroundingLines": [
            "filepath.Join(dir, \"..\", \"..\", \"src\", \"tools\", \"curator-cli\", \"cli.ts\"),"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "GetMonitorPath",
          "type": "function",
          "location": {
            "file": "internal/config/config.go",
            "line": 65,
            "column": 0
          },
          "context": "func GetMonitorPath() string {",
          "surroundingLines": [
            "",
            "// GetMonitorPath returns the path to the monitor CLI",
            "func GetMonitorPath() string {",
            "// Check for environment variable first",
            "if path := os.Getenv(\"MONITOR_CLI_PATH\"); path != \"\" {"
          ],
          "relatedTerms": [
            "GetMonitorPath"
          ],
          "language": "go"
        },
        {
          "term": "MONITOR_CLI_PATH",
          "type": "string",
          "location": {
            "file": "internal/config/config.go",
            "line": 67,
            "column": 22
          },
          "context": "if path := os.Getenv(\"MONITOR_CLI_PATH\"); path != \"\" {",
          "surroundingLines": [
            "if path := os.Getenv(\"MONITOR_CLI_PATH\"); path != \"\" {"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "dir",
          "type": "variable",
          "location": {
            "file": "internal/config/config.go",
            "line": 73,
            "column": 0
          },
          "context": "dir := filepath.Dir(execPath)",
          "surroundingLines": [
            "// Check if we're in development mode",
            "if execPath, err := os.Executable(); err == nil {",
            "dir := filepath.Dir(execPath)",
            "",
            "devPaths := []string{"
          ],
          "relatedTerms": [
            "dir",
            "filepath",
            "Dir",
            "execPath"
          ],
          "language": "go"
        },
        {
          "term": "devPaths",
          "type": "variable",
          "location": {
            "file": "internal/config/config.go",
            "line": 75,
            "column": 0
          },
          "context": "devPaths := []string{",
          "surroundingLines": [
            "dir := filepath.Dir(execPath)",
            "",
            "devPaths := []string{",
            "filepath.Join(dir, \"..\", \"..\", \"..\", \"..\", \"src\", \"tools\", \"monitor\", \"cli.ts\"),",
            "filepath.Join(dir, \"..\", \"..\", \"src\", \"tools\", \"monitor\", \"cli.ts\"),"
          ],
          "relatedTerms": [
            "devPaths"
          ],
          "language": "go"
        },
        {
          "term": "cli.ts",
          "type": "string",
          "location": {
            "file": "internal/config/config.go",
            "line": 76,
            "column": 73
          },
          "context": "filepath.Join(dir, \"..\", \"..\", \"..\", \"..\", \"src\", \"tools\", \"monitor\", \"cli.ts\"),",
          "surroundingLines": [
            "filepath.Join(dir, \"..\", \"..\", \"..\", \"..\", \"src\", \"tools\", \"monitor\", \"cli.ts\"),"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "cli.ts",
          "type": "string",
          "location": {
            "file": "internal/config/config.go",
            "line": 77,
            "column": 61
          },
          "context": "filepath.Join(dir, \"..\", \"..\", \"src\", \"tools\", \"monitor\", \"cli.ts\"),",
          "surroundingLines": [
            "filepath.Join(dir, \"..\", \"..\", \"src\", \"tools\", \"monitor\", \"cli.ts\"),"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "IsDevMode",
          "type": "function",
          "location": {
            "file": "internal/config/config.go",
            "line": 92,
            "column": 0
          },
          "context": "func IsDevMode() bool {",
          "surroundingLines": [
            "",
            "// IsDevMode returns true if running in development mode (with .ts files)",
            "func IsDevMode() bool {",
            "// Check if any of the TypeScript files exist",
            "if execPath, err := os.Executable(); err == nil {"
          ],
          "relatedTerms": [
            "IsDevMode"
          ],
          "language": "go"
        },
        {
          "term": "dir",
          "type": "variable",
          "location": {
            "file": "internal/config/config.go",
            "line": 95,
            "column": 0
          },
          "context": "dir := filepath.Dir(execPath)",
          "surroundingLines": [
            "// Check if any of the TypeScript files exist",
            "if execPath, err := os.Executable(); err == nil {",
            "dir := filepath.Dir(execPath)",
            "devPath := filepath.Join(dir, \"..\", \"..\", \"..\", \"..\", \"src\", \"tools\", \"smartgrep\", \"cli.ts\")",
            "if _, err := os.Stat(devPath); err == nil {"
          ],
          "relatedTerms": [
            "dir",
            "filepath",
            "Dir",
            "execPath"
          ],
          "language": "go"
        },
        {
          "term": "devPath",
          "type": "variable",
          "location": {
            "file": "internal/config/config.go",
            "line": 96,
            "column": 0
          },
          "context": "devPath := filepath.Join(dir, \"..\", \"..\", \"..\", \"..\", \"src\", \"tools\", \"smartgrep\", \"cli.ts\")",
          "surroundingLines": [
            "if execPath, err := os.Executable(); err == nil {",
            "dir := filepath.Dir(execPath)",
            "devPath := filepath.Join(dir, \"..\", \"..\", \"..\", \"..\", \"src\", \"tools\", \"smartgrep\", \"cli.ts\")",
            "if _, err := os.Stat(devPath); err == nil {",
            "return true"
          ],
          "relatedTerms": [
            "devPath",
            "filepath",
            "Join",
            "dir",
            "src",
            "tools",
            "smartgrep",
            "cli"
          ],
          "language": "go"
        },
        {
          "term": "cli.ts",
          "type": "string",
          "location": {
            "file": "internal/config/config.go",
            "line": 96,
            "column": 85
          },
          "context": "devPath := filepath.Join(dir, \"..\", \"..\", \"..\", \"..\", \"src\", \"tools\", \"smartgrep\", \"cli.ts\")",
          "surroundingLines": [
            "devPath := filepath.Join(dir, \"..\", \"..\", \"..\", \"..\", \"src\", \"tools\", \"smartgrep\", \"cli.ts\")"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "GetExecutor",
          "type": "function",
          "location": {
            "file": "internal/config/config.go",
            "line": 105,
            "column": 0
          },
          "context": "func GetExecutor() string {",
          "surroundingLines": [
            "",
            "// GetExecutor returns the command executor (bun for dev, direct for prod)",
            "func GetExecutor() string {",
            "if IsDevMode() {",
            "return \"bun\""
          ],
          "relatedTerms": [
            "GetExecutor"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "internal/monitor/tui.go",
      [
        {
          "term": "monitor",
          "type": "module",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 1,
            "column": 0
          },
          "context": "package monitor",
          "surroundingLines": [
            "package monitor"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "os/exec",
          "type": "string",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 5,
            "column": 1
          },
          "context": "\"os/exec\"",
          "surroundingLines": [
            "\"os/exec\""
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "github.com/charmbracelet/bubbles/progress",
          "type": "string",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 9,
            "column": 1
          },
          "context": "\"github.com/charmbracelet/bubbles/progress\"",
          "surroundingLines": [
            "\"github.com/charmbracelet/bubbles/progress\""
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "github.com/charmbracelet/bubbles/viewport",
          "type": "string",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 10,
            "column": 1
          },
          "context": "\"github.com/charmbracelet/bubbles/viewport\"",
          "surroundingLines": [
            "\"github.com/charmbracelet/bubbles/viewport\""
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "github.com/charmbracelet/bubbletea",
          "type": "string",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 11,
            "column": 5
          },
          "context": "tea \"github.com/charmbracelet/bubbletea\"",
          "surroundingLines": [
            "tea \"github.com/charmbracelet/bubbletea\""
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "github.com/charmbracelet/lipgloss",
          "type": "string",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 12,
            "column": 1
          },
          "context": "\"github.com/charmbracelet/lipgloss\"",
          "surroundingLines": [
            "\"github.com/charmbracelet/lipgloss\""
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "tickMsg",
          "type": "class",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 45,
            "column": 0
          },
          "context": "type tickMsg time.Time",
          "surroundingLines": [
            "",
            "// Messages",
            "type tickMsg time.Time",
            "type monitorOutputMsg string",
            "type statusMsg struct {"
          ],
          "relatedTerms": [
            "tickMsg",
            "time",
            "Time"
          ],
          "language": "go"
        },
        {
          "term": "monitorOutputMsg",
          "type": "class",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 46,
            "column": 0
          },
          "context": "type monitorOutputMsg string",
          "surroundingLines": [
            "// Messages",
            "type tickMsg time.Time",
            "type monitorOutputMsg string",
            "type statusMsg struct {",
            "filesIndexed int"
          ],
          "relatedTerms": [
            "monitorOutputMsg"
          ],
          "language": "go"
        },
        {
          "term": "statusMsg",
          "type": "class",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 47,
            "column": 0
          },
          "context": "type statusMsg struct {",
          "surroundingLines": [
            "type tickMsg time.Time",
            "type monitorOutputMsg string",
            "type statusMsg struct {",
            "filesIndexed int",
            "lastUpdate   time.Time"
          ],
          "relatedTerms": [
            "statusMsg"
          ],
          "language": "go"
        },
        {
          "term": "statusMsg.filesIndexed",
          "type": "variable",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 48,
            "column": 0
          },
          "context": "filesIndexed int",
          "surroundingLines": [
            "filesIndexed int"
          ],
          "relatedTerms": [
            "int"
          ],
          "language": "go"
        },
        {
          "term": "statusMsg.lastUpdate",
          "type": "variable",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 49,
            "column": 0
          },
          "context": "lastUpdate   time.Time",
          "surroundingLines": [
            "lastUpdate   time.Time"
          ],
          "relatedTerms": [
            "time"
          ],
          "language": "go"
        },
        {
          "term": "statusMsg.healthy",
          "type": "variable",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 50,
            "column": 0
          },
          "context": "healthy      bool",
          "surroundingLines": [
            "healthy      bool"
          ],
          "relatedTerms": [
            "bool"
          ],
          "language": "go"
        },
        {
          "term": "model",
          "type": "class",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 54,
            "column": 0
          },
          "context": "type model struct {",
          "surroundingLines": [
            "",
            "// Main model",
            "type model struct {",
            "mode         string",
            "viewport     viewport.Model"
          ],
          "relatedTerms": [
            "model"
          ],
          "language": "go"
        },
        {
          "term": "model.mode",
          "type": "variable",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 55,
            "column": 0
          },
          "context": "mode         string",
          "surroundingLines": [
            "mode         string"
          ],
          "relatedTerms": [
            "string"
          ],
          "language": "go"
        },
        {
          "term": "model.viewport",
          "type": "variable",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 56,
            "column": 0
          },
          "context": "viewport     viewport.Model",
          "surroundingLines": [
            "viewport     viewport.Model"
          ],
          "relatedTerms": [
            "viewport"
          ],
          "language": "go"
        },
        {
          "term": "model.progress",
          "type": "variable",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 57,
            "column": 0
          },
          "context": "progress     progress.Model",
          "surroundingLines": [
            "progress     progress.Model"
          ],
          "relatedTerms": [
            "progress"
          ],
          "language": "go"
        },
        {
          "term": "model.events",
          "type": "variable",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 58,
            "column": 0
          },
          "context": "events       []string",
          "surroundingLines": [
            "events       []string"
          ],
          "relatedTerms": [
            "[]string"
          ],
          "language": "go"
        },
        {
          "term": "model.stats",
          "type": "variable",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 59,
            "column": 0
          },
          "context": "stats        statusMsg",
          "surroundingLines": [
            "stats        statusMsg"
          ],
          "relatedTerms": [
            "statusMsg"
          ],
          "language": "go"
        },
        {
          "term": "model.width",
          "type": "variable",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 60,
            "column": 0
          },
          "context": "width        int",
          "surroundingLines": [
            "width        int"
          ],
          "relatedTerms": [
            "int"
          ],
          "language": "go"
        },
        {
          "term": "model.height",
          "type": "variable",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 61,
            "column": 0
          },
          "context": "height       int",
          "surroundingLines": [
            "height       int"
          ],
          "relatedTerms": [
            "int"
          ],
          "language": "go"
        },
        {
          "term": "model.showOverview",
          "type": "variable",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 62,
            "column": 0
          },
          "context": "showOverview bool",
          "surroundingLines": [
            "showOverview bool"
          ],
          "relatedTerms": [
            "bool"
          ],
          "language": "go"
        },
        {
          "term": "model.err",
          "type": "variable",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 63,
            "column": 0
          },
          "context": "err          error",
          "surroundingLines": [
            "err          error"
          ],
          "relatedTerms": [
            "error"
          ],
          "language": "go"
        },
        {
          "term": "initialModel",
          "type": "function",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 66,
            "column": 0
          },
          "context": "func initialModel(mode string, showOverview bool) model {",
          "surroundingLines": [
            "}",
            "",
            "func initialModel(mode string, showOverview bool) model {",
            "vp := viewport.New(80, 20)",
            "prog := progress.New(progress.WithDefaultGradient())"
          ],
          "relatedTerms": [
            "initialModel",
            "mode",
            "showOverview",
            "model"
          ],
          "language": "go"
        },
        {
          "term": "vp",
          "type": "variable",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 67,
            "column": 0
          },
          "context": "vp := viewport.New(80, 20)",
          "surroundingLines": [
            "",
            "func initialModel(mode string, showOverview bool) model {",
            "vp := viewport.New(80, 20)",
            "prog := progress.New(progress.WithDefaultGradient())",
            ""
          ],
          "relatedTerms": [
            "viewport",
            "New"
          ],
          "language": "go"
        },
        {
          "term": "prog",
          "type": "variable",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 68,
            "column": 0
          },
          "context": "prog := progress.New(progress.WithDefaultGradient())",
          "surroundingLines": [
            "func initialModel(mode string, showOverview bool) model {",
            "vp := viewport.New(80, 20)",
            "prog := progress.New(progress.WithDefaultGradient())",
            "",
            "return model{"
          ],
          "relatedTerms": [
            "prog",
            "progress",
            "New",
            "WithDefaultGradient"
          ],
          "language": "go"
        },
        {
          "term": "model.Init",
          "type": "function",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 79,
            "column": 0
          },
          "context": "func (m model) Init() tea.Cmd {",
          "surroundingLines": [
            "}",
            "",
            "func (m model) Init() tea.Cmd {",
            "return tea.Batch(",
            "tickCmd(),"
          ],
          "relatedTerms": [
            "model",
            "Init",
            "tea",
            "Cmd"
          ],
          "language": "go"
        },
        {
          "term": "tickCmd",
          "type": "function",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 86,
            "column": 0
          },
          "context": "func tickCmd() tea.Cmd {",
          "surroundingLines": [
            "}",
            "",
            "func tickCmd() tea.Cmd {",
            "return tea.Tick(time.Second, func(t time.Time) tea.Msg {",
            "return tickMsg(t)"
          ],
          "relatedTerms": [
            "tickCmd",
            "tea",
            "Cmd"
          ],
          "language": "go"
        },
        {
          "term": "model.startMonitoring",
          "type": "function",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 92,
            "column": 0
          },
          "context": "func (m model) startMonitoring() tea.Cmd {",
          "surroundingLines": [
            "}",
            "",
            "func (m model) startMonitoring() tea.Cmd {",
            "return func() tea.Msg {",
            "switch m.mode {"
          ],
          "relatedTerms": [
            "model",
            "startMonitoring",
            "tea",
            "Cmd"
          ],
          "language": "go"
        },
        {
          "term": "cmdArgs",
          "type": "variable",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 97,
            "column": 0
          },
          "context": "cmdArgs := []string{\"run\", \"../../src/tools/monitor/cli.ts\", \"watch\"}",
          "surroundingLines": [
            "case \"watch\":",
            "// Start file watcher",
            "cmdArgs := []string{\"run\", \"../../src/tools/monitor/cli.ts\", \"watch\"}",
            "if m.showOverview {",
            "cmdArgs = append(cmdArgs, \"--overview\")"
          ],
          "relatedTerms": [
            "cmdArgs",
            "run",
            "src",
            "tools",
            "monitor",
            "cli",
            "watch"
          ],
          "language": "go"
        },
        {
          "term": "../../src/tools/monitor/cli.ts",
          "type": "string",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 97,
            "column": 30
          },
          "context": "cmdArgs := []string{\"run\", \"../../src/tools/monitor/cli.ts\", \"watch\"}",
          "surroundingLines": [
            "cmdArgs := []string{\"run\", \"../../src/tools/monitor/cli.ts\", \"watch\"}"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "cmd",
          "type": "variable",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 102,
            "column": 0
          },
          "context": "cmd := exec.Command(\"bun\", cmdArgs...)",
          "surroundingLines": [
            "}",
            "",
            "cmd := exec.Command(\"bun\", cmdArgs...)",
            "output, err := cmd.CombinedOutput()",
            "if err != nil {"
          ],
          "relatedTerms": [
            "cmd",
            "exec",
            "Command",
            "bun",
            "cmdArgs"
          ],
          "language": "go"
        },
        {
          "term": "cmd",
          "type": "variable",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 111,
            "column": 0
          },
          "context": "cmd := exec.Command(\"bun\", \"run\", \"../../src/tools/monitor/cli.ts\", \"status\")",
          "surroundingLines": [
            "case \"status\":",
            "// Get status",
            "cmd := exec.Command(\"bun\", \"run\", \"../../src/tools/monitor/cli.ts\", \"status\")",
            "output, err := cmd.CombinedOutput()",
            "if err != nil {"
          ],
          "relatedTerms": [
            "cmd",
            "exec",
            "Command",
            "bun",
            "run",
            "src",
            "tools",
            "monitor",
            "cli",
            "status"
          ],
          "language": "go"
        },
        {
          "term": "../../src/tools/monitor/cli.ts",
          "type": "string",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 111,
            "column": 37
          },
          "context": "cmd := exec.Command(\"bun\", \"run\", \"../../src/tools/monitor/cli.ts\", \"status\")",
          "surroundingLines": [
            "cmd := exec.Command(\"bun\", \"run\", \"../../src/tools/monitor/cli.ts\", \"status\")"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "lines",
          "type": "variable",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 118,
            "column": 0
          },
          "context": "lines := strings.Split(string(output), \"\\n\")",
          "surroundingLines": [
            "",
            "// Parse status (simplified)",
            "lines := strings.Split(string(output), \"\\n\")",
            "status := statusMsg{",
            "filesIndexed: len(lines),"
          ],
          "relatedTerms": [
            "lines",
            "strings",
            "Split",
            "output"
          ],
          "language": "go"
        },
        {
          "term": "status",
          "type": "variable",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 119,
            "column": 0
          },
          "context": "status := statusMsg{",
          "surroundingLines": [
            "// Parse status (simplified)",
            "lines := strings.Split(string(output), \"\\n\")",
            "status := statusMsg{",
            "filesIndexed: len(lines),",
            "lastUpdate:   time.Now(),"
          ],
          "relatedTerms": [
            "status",
            "statusMsg"
          ],
          "language": "go"
        },
        {
          "term": "model.Update",
          "type": "function",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 132,
            "column": 0
          },
          "context": "func (m model) Update(msg tea.Msg) (tea.Model, tea.Cmd) {",
          "surroundingLines": [
            "}",
            "",
            "func (m model) Update(msg tea.Msg) (tea.Model, tea.Cmd) {",
            "switch msg := msg.(type) {",
            "case tea.WindowSizeMsg:"
          ],
          "relatedTerms": [
            "model",
            "Update",
            "msg",
            "tea",
            "Msg",
            "Model",
            "Cmd"
          ],
          "language": "go"
        },
        {
          "term": "lines",
          "type": "variable",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 160,
            "column": 0
          },
          "context": "lines := strings.Split(string(msg), \"\\n\")",
          "surroundingLines": [
            "case monitorOutputMsg:",
            "// Parse and add events",
            "lines := strings.Split(string(msg), \"\\n\")",
            "for _, line := range lines {",
            "if line != \"\" {"
          ],
          "relatedTerms": [
            "lines",
            "strings",
            "Split",
            "msg"
          ],
          "language": "go"
        },
        {
          "term": "[%s] %s",
          "type": "string",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 163,
            "column": 44
          },
          "context": "m.events = append(m.events, fmt.Sprintf(\"[%s] %s\",",
          "surroundingLines": [
            "m.events = append(m.events, fmt.Sprintf(\"[%s] %s\","
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "model.renderEvents",
          "type": "function",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 189,
            "column": 0
          },
          "context": "func (m model) renderEvents() string {",
          "surroundingLines": [
            "}",
            "",
            "func (m model) renderEvents() string {",
            "var sb strings.Builder",
            ""
          ],
          "relatedTerms": [
            "model",
            "renderEvents"
          ],
          "language": "go"
        },
        {
          "term": "styled",
          "type": "variable",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 193,
            "column": 0
          },
          "context": "styled := event",
          "surroundingLines": [
            "",
            "for _, event := range m.events {",
            "styled := event",
            "if strings.Contains(event, \"added\") {",
            "styled = addedStyle.Render(event)"
          ],
          "relatedTerms": [
            "styled",
            "event"
          ],
          "language": "go"
        },
        {
          "term": "model.View",
          "type": "function",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 207,
            "column": 0
          },
          "context": "func (m model) View() string {",
          "surroundingLines": [
            "}",
            "",
            "func (m model) View() string {",
            "if m.err != nil {",
            "return fmt.Sprintf(\"Error: %v\\n\\nPress 'q' to quit.\", m.err)"
          ],
          "relatedTerms": [
            "model",
            "View"
          ],
          "language": "go"
        },
        {
          "term": "Error: %v\\n\\nPress 'q' to quit.",
          "type": "string",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 209,
            "column": 21
          },
          "context": "return fmt.Sprintf(\"Error: %v\\n\\nPress 'q' to quit.\", m.err)",
          "surroundingLines": [
            "return fmt.Sprintf(\"Error: %v\\n\\nPress 'q' to quit.\", m.err)"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "title",
          "type": "variable",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 213,
            "column": 0
          },
          "context": "title := titleStyle.Render(\"📊 Monitor Dashboard\")",
          "surroundingLines": [
            "",
            "// Title",
            "title := titleStyle.Render(\"📊 Monitor Dashboard\")",
            "",
            "// Stats box"
          ],
          "relatedTerms": [
            "title",
            "titleStyle",
            "Render",
            "Monitor",
            "Dashboard"
          ],
          "language": "go"
        },
        {
          "term": "📊 Monitor Dashboard",
          "type": "string",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 213,
            "column": 28
          },
          "context": "title := titleStyle.Render(\"📊 Monitor Dashboard\")",
          "surroundingLines": [
            "title := titleStyle.Render(\"📊 Monitor Dashboard\")"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "stats",
          "type": "variable",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 216,
            "column": 0
          },
          "context": "stats := statsStyle.Render(fmt.Sprintf(",
          "surroundingLines": [
            "",
            "// Stats box",
            "stats := statsStyle.Render(fmt.Sprintf(",
            "\"%s\\n\\n\"+",
            "\"Files Indexed: %d\\n\"+"
          ],
          "relatedTerms": [
            "stats",
            "statsStyle",
            "Render",
            "fmt",
            "Sprintf"
          ],
          "language": "go"
        },
        {
          "term": "Files Indexed: %d\\n",
          "type": "string",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 218,
            "column": 2
          },
          "context": "\"Files Indexed: %d\\n\"+",
          "surroundingLines": [
            "\"Files Indexed: %d\\n\"+"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "Last Update: %s\\n",
          "type": "string",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 219,
            "column": 2
          },
          "context": "\"Last Update: %s\\n\"+",
          "surroundingLines": [
            "\"Last Update: %s\\n\"+"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "Status: %s",
          "type": "string",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 220,
            "column": 2
          },
          "context": "\"Status: %s\",",
          "surroundingLines": [
            "\"Status: %s\","
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "✓ Healthy",
          "type": "string",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 226,
            "column": 29
          },
          "context": "return addedStyle.Render(\"✓ Healthy\")",
          "surroundingLines": [
            "return addedStyle.Render(\"✓ Healthy\")"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "✗ Issues",
          "type": "string",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 228,
            "column": 30
          },
          "context": "return deletedStyle.Render(\"✗ Issues\")",
          "surroundingLines": [
            "return deletedStyle.Render(\"✗ Issues\")"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "content",
          "type": "variable",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 233,
            "column": 0
          },
          "context": "content := m.viewport.View()",
          "surroundingLines": [
            "",
            "// Main content",
            "content := m.viewport.View()",
            "",
            "// Help"
          ],
          "relatedTerms": [
            "content",
            "viewport",
            "View"
          ],
          "language": "go"
        },
        {
          "term": "help",
          "type": "variable",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 236,
            "column": 0
          },
          "context": "help := lipgloss.NewStyle().Faint(true).Render(",
          "surroundingLines": [
            "",
            "// Help",
            "help := lipgloss.NewStyle().Faint(true).Render(",
            "\"q: quit • c: clear • ↑/↓: scroll\")",
            ""
          ],
          "relatedTerms": [
            "help",
            "lipgloss",
            "NewStyle",
            "Faint",
            "Render"
          ],
          "language": "go"
        },
        {
          "term": "q: quit • c: clear • ↑/↓: scroll",
          "type": "string",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 237,
            "column": 2
          },
          "context": "\"q: quit • c: clear • ↑/↓: scroll\")",
          "surroundingLines": [
            "\"q: quit • c: clear • ↑/↓: scroll\")"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "RunTUI",
          "type": "function",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 250,
            "column": 0
          },
          "context": "func RunTUI() error {",
          "surroundingLines": [
            "",
            "// RunTUI launches the main monitor TUI",
            "func RunTUI() error {",
            "// Default to watch mode",
            "return RunWatchTUI(false)"
          ],
          "relatedTerms": [
            "RunTUI"
          ],
          "language": "go"
        },
        {
          "term": "RunWatchTUI",
          "type": "function",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 256,
            "column": 0
          },
          "context": "func RunWatchTUI(withOverview bool) error {",
          "surroundingLines": [
            "",
            "// RunWatchTUI launches watch mode TUI",
            "func RunWatchTUI(withOverview bool) error {",
            "p := tea.NewProgram(",
            "initialModel(\"watch\", withOverview),"
          ],
          "relatedTerms": [
            "RunWatchTUI",
            "withOverview"
          ],
          "language": "go"
        },
        {
          "term": "p",
          "type": "variable",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 257,
            "column": 0
          },
          "context": "p := tea.NewProgram(",
          "surroundingLines": [
            "// RunWatchTUI launches watch mode TUI",
            "func RunWatchTUI(withOverview bool) error {",
            "p := tea.NewProgram(",
            "initialModel(\"watch\", withOverview),",
            "tea.WithAltScreen(),"
          ],
          "relatedTerms": [
            "tea",
            "NewProgram"
          ],
          "language": "go"
        },
        {
          "term": "overviewModel",
          "type": "class",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 266,
            "column": 0
          },
          "context": "type overviewModel struct {",
          "surroundingLines": [
            "",
            "// Simple overview model",
            "type overviewModel struct {",
            "viewport viewport.Model",
            "ready    bool"
          ],
          "relatedTerms": [
            "overviewModel"
          ],
          "language": "go"
        },
        {
          "term": "overviewModel.viewport",
          "type": "variable",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 267,
            "column": 0
          },
          "context": "viewport viewport.Model",
          "surroundingLines": [
            "viewport viewport.Model"
          ],
          "relatedTerms": [
            "viewport"
          ],
          "language": "go"
        },
        {
          "term": "overviewModel.ready",
          "type": "variable",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 268,
            "column": 0
          },
          "context": "ready    bool",
          "surroundingLines": [
            "ready    bool"
          ],
          "relatedTerms": [
            "bool"
          ],
          "language": "go"
        },
        {
          "term": "overviewModel.Init",
          "type": "function",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 271,
            "column": 0
          },
          "context": "func (m overviewModel) Init() tea.Cmd {",
          "surroundingLines": [
            "}",
            "",
            "func (m overviewModel) Init() tea.Cmd {",
            "return nil",
            "}"
          ],
          "relatedTerms": [
            "overviewModel",
            "Init",
            "tea",
            "Cmd"
          ],
          "language": "go"
        },
        {
          "term": "overviewModel.Update",
          "type": "function",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 275,
            "column": 0
          },
          "context": "func (m overviewModel) Update(msg tea.Msg) (tea.Model, tea.Cmd) {",
          "surroundingLines": [
            "}",
            "",
            "func (m overviewModel) Update(msg tea.Msg) (tea.Model, tea.Cmd) {",
            "switch msg := msg.(type) {",
            "case tea.WindowSizeMsg:"
          ],
          "relatedTerms": [
            "overviewModel",
            "Update",
            "msg",
            "tea",
            "Msg",
            "Model",
            "Cmd"
          ],
          "language": "go"
        },
        {
          "term": "overviewModel.View",
          "type": "function",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 295,
            "column": 0
          },
          "context": "func (m overviewModel) View() string {",
          "surroundingLines": [
            "}",
            "",
            "func (m overviewModel) View() string {",
            "if !m.ready {",
            "return \"Loading...\""
          ],
          "relatedTerms": [
            "overviewModel",
            "View"
          ],
          "language": "go"
        },
        {
          "term": "Loading...",
          "type": "string",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 297,
            "column": 9
          },
          "context": "return \"Loading...\"",
          "surroundingLines": [
            "return \"Loading...\""
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "Press q to quit",
          "type": "string",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 299,
            "column": 76
          },
          "context": "return m.viewport.View() + \"\\n\\n\" + lipgloss.NewStyle().Faint(true).Render(\"Press q to quit\")",
          "surroundingLines": [
            "return m.viewport.View() + \"\\n\\n\" + lipgloss.NewStyle().Faint(true).Render(\"Press q to quit\")"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "RunOverviewTUI",
          "type": "function",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 303,
            "column": 0
          },
          "context": "func RunOverviewTUI() error {",
          "surroundingLines": [
            "",
            "// RunOverviewTUI launches overview TUI",
            "func RunOverviewTUI() error {",
            "// For overview, we'll use a simpler display",
            "cmd := exec.Command(\"bun\", \"run\", \"../../src/tools/monitor/cli.ts\", \"overview\")"
          ],
          "relatedTerms": [
            "RunOverviewTUI"
          ],
          "language": "go"
        },
        {
          "term": "cmd",
          "type": "variable",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 305,
            "column": 0
          },
          "context": "cmd := exec.Command(\"bun\", \"run\", \"../../src/tools/monitor/cli.ts\", \"overview\")",
          "surroundingLines": [
            "func RunOverviewTUI() error {",
            "// For overview, we'll use a simpler display",
            "cmd := exec.Command(\"bun\", \"run\", \"../../src/tools/monitor/cli.ts\", \"overview\")",
            "output, err := cmd.CombinedOutput()",
            "if err != nil {"
          ],
          "relatedTerms": [
            "cmd",
            "exec",
            "Command",
            "bun",
            "run",
            "src",
            "tools",
            "monitor",
            "cli",
            "overview"
          ],
          "language": "go"
        },
        {
          "term": "../../src/tools/monitor/cli.ts",
          "type": "string",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 305,
            "column": 35
          },
          "context": "cmd := exec.Command(\"bun\", \"run\", \"../../src/tools/monitor/cli.ts\", \"overview\")",
          "surroundingLines": [
            "cmd := exec.Command(\"bun\", \"run\", \"../../src/tools/monitor/cli.ts\", \"overview\")"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "vp",
          "type": "variable",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 312,
            "column": 0
          },
          "context": "vp := viewport.New(80, 30)",
          "surroundingLines": [
            "",
            "// Create a simple pager view",
            "vp := viewport.New(80, 30)",
            "vp.SetContent(string(output))",
            ""
          ],
          "relatedTerms": [
            "viewport",
            "New"
          ],
          "language": "go"
        },
        {
          "term": "p",
          "type": "variable",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 315,
            "column": 0
          },
          "context": "p := tea.NewProgram(overviewModel{viewport: vp}, tea.WithAltScreen())",
          "surroundingLines": [
            "vp.SetContent(string(output))",
            "",
            "p := tea.NewProgram(overviewModel{viewport: vp}, tea.WithAltScreen())",
            "_, err = p.Run()",
            "return err"
          ],
          "relatedTerms": [
            "tea",
            "NewProgram",
            "overviewModel",
            "viewport",
            "WithAltScreen"
          ],
          "language": "go"
        },
        {
          "term": "RunStatusTUI",
          "type": "function",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 321,
            "column": 0
          },
          "context": "func RunStatusTUI() error {",
          "surroundingLines": [
            "",
            "// RunStatusTUI launches status TUI",
            "func RunStatusTUI() error {",
            "p := tea.NewProgram(",
            "initialModel(\"status\", false),"
          ],
          "relatedTerms": [
            "RunStatusTUI"
          ],
          "language": "go"
        },
        {
          "term": "p",
          "type": "variable",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 322,
            "column": 0
          },
          "context": "p := tea.NewProgram(",
          "surroundingLines": [
            "// RunStatusTUI launches status TUI",
            "func RunStatusTUI() error {",
            "p := tea.NewProgram(",
            "initialModel(\"status\", false),",
            "tea.WithAltScreen(),"
          ],
          "relatedTerms": [
            "tea",
            "NewProgram"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "cmd/curator/main.go",
      [
        {
          "term": "main",
          "type": "module",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 1,
            "column": 0
          },
          "context": "package main",
          "surroundingLines": [
            "package main"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "os/exec",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 6,
            "column": 1
          },
          "context": "\"os/exec\"",
          "surroundingLines": [
            "\"os/exec\""
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "github.com/RLabs-Inc/codebase-curator/charm-tui/internal/curator",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 8,
            "column": 1
          },
          "context": "\"github.com/RLabs-Inc/codebase-curator/charm-tui/internal/curator\"",
          "surroundingLines": [
            "\"github.com/RLabs-Inc/codebase-curator/charm-tui/internal/curator\""
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "github.com/spf13/cobra",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 9,
            "column": 1
          },
          "context": "\"github.com/spf13/cobra\"",
          "surroundingLines": [
            "\"github.com/spf13/cobra\""
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "rootCmd",
          "type": "variable",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 18,
            "column": 0
          },
          "context": "var rootCmd = &cobra.Command{",
          "surroundingLines": [
            ")",
            "",
            "var rootCmd = &cobra.Command{",
            "Use:   \"curator [command]\",",
            "Short: \"AI-powered codebase intelligence\","
          ],
          "relatedTerms": [
            "rootCmd",
            "cobra",
            "Command"
          ],
          "language": "go"
        },
        {
          "term": "curator [command]",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 19,
            "column": 8
          },
          "context": "Use:   \"curator [command]\",",
          "surroundingLines": [
            "Use:   \"curator [command]\","
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "AI-powered codebase intelligence",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 20,
            "column": 8
          },
          "context": "Short: \"AI-powered codebase intelligence\",",
          "surroundingLines": [
            "Short: \"AI-powered codebase intelligence\","
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "overviewCmd",
          "type": "variable",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 36,
            "column": 0
          },
          "context": "var overviewCmd = &cobra.Command{",
          "surroundingLines": [
            "}",
            "",
            "var overviewCmd = &cobra.Command{",
            "Use:   \"overview [project-path]\",",
            "Short: \"Get comprehensive codebase overview\","
          ],
          "relatedTerms": [
            "overviewCmd",
            "cobra",
            "Command"
          ],
          "language": "go"
        },
        {
          "term": "overview [project-path]",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 37,
            "column": 8
          },
          "context": "Use:   \"overview [project-path]\",",
          "surroundingLines": [
            "Use:   \"overview [project-path]\","
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "Get comprehensive codebase overview",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 38,
            "column": 8
          },
          "context": "Short: \"Get comprehensive codebase overview\",",
          "surroundingLines": [
            "Short: \"Get comprehensive codebase overview\","
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "path",
          "type": "variable",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 41,
            "column": 0
          },
          "context": "path := projectPath",
          "surroundingLines": [
            "Args:  cobra.MaximumNArgs(1),",
            "RunE: func(cmd *cobra.Command, args []string) error {",
            "path := projectPath",
            "if len(args) > 0 {",
            "path = args[0]"
          ],
          "relatedTerms": [
            "path",
            "projectPath"
          ],
          "language": "go"
        },
        {
          "term": "cmdArgs",
          "type": "variable",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 51,
            "column": 0
          },
          "context": "cmdArgs := []string{\"run\", \"../../src/tools/curator-cli/cli.ts\", \"overview\"}",
          "surroundingLines": [
            "",
            "// Pass through to TypeScript implementation",
            "cmdArgs := []string{\"run\", \"../../src/tools/curator-cli/cli.ts\", \"overview\"}",
            "if path != \"\" {",
            "cmdArgs = append(cmdArgs, path)"
          ],
          "relatedTerms": [
            "cmdArgs",
            "run",
            "src",
            "tools",
            "curator",
            "cli",
            "overview"
          ],
          "language": "go"
        },
        {
          "term": "../../src/tools/curator-cli/cli.ts",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 51,
            "column": 29
          },
          "context": "cmdArgs := []string{\"run\", \"../../src/tools/curator-cli/cli.ts\", \"overview\"}",
          "surroundingLines": [
            "cmdArgs := []string{\"run\", \"../../src/tools/curator-cli/cli.ts\", \"overview\"}"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "--new-session",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 56,
            "column": 29
          },
          "context": "cmdArgs = append(cmdArgs, \"--new-session\")",
          "surroundingLines": [
            "cmdArgs = append(cmdArgs, \"--new-session\")"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "execCmd",
          "type": "variable",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 59,
            "column": 0
          },
          "context": "execCmd := exec.Command(\"bun\", cmdArgs...)",
          "surroundingLines": [
            "}",
            "",
            "execCmd := exec.Command(\"bun\", cmdArgs...)",
            "execCmd.Stdout = os.Stdout",
            "execCmd.Stderr = os.Stderr"
          ],
          "relatedTerms": [
            "execCmd",
            "exec",
            "Command",
            "bun",
            "cmdArgs"
          ],
          "language": "go"
        },
        {
          "term": "askCmd",
          "type": "variable",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 68,
            "column": 0
          },
          "context": "var askCmd = &cobra.Command{",
          "surroundingLines": [
            "}",
            "",
            "var askCmd = &cobra.Command{",
            "Use:   \"ask [project-path] [question]\",",
            "Short: \"Ask questions about the codebase\","
          ],
          "relatedTerms": [
            "askCmd",
            "cobra",
            "Command"
          ],
          "language": "go"
        },
        {
          "term": "ask [project-path] [question]",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 69,
            "column": 8
          },
          "context": "Use:   \"ask [project-path] [question]\",",
          "surroundingLines": [
            "Use:   \"ask [project-path] [question]\","
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "Ask questions about the codebase",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 70,
            "column": 8
          },
          "context": "Short: \"Ask questions about the codebase\",",
          "surroundingLines": [
            "Short: \"Ask questions about the codebase\","
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "cmdArgs",
          "type": "variable",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 90,
            "column": 0
          },
          "context": "cmdArgs := []string{\"run\", \"../../src/tools/curator-cli/cli.ts\", \"ask\"}",
          "surroundingLines": [
            "",
            "// Pass through to TypeScript implementation",
            "cmdArgs := []string{\"run\", \"../../src/tools/curator-cli/cli.ts\", \"ask\"}",
            "if path != \"\" {",
            "cmdArgs = append(cmdArgs, path)"
          ],
          "relatedTerms": [
            "cmdArgs",
            "run",
            "src",
            "tools",
            "curator",
            "cli",
            "ask"
          ],
          "language": "go"
        },
        {
          "term": "../../src/tools/curator-cli/cli.ts",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 90,
            "column": 29
          },
          "context": "cmdArgs := []string{\"run\", \"../../src/tools/curator-cli/cli.ts\", \"ask\"}",
          "surroundingLines": [
            "cmdArgs := []string{\"run\", \"../../src/tools/curator-cli/cli.ts\", \"ask\"}"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "execCmd",
          "type": "variable",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 96,
            "column": 0
          },
          "context": "execCmd := exec.Command(\"bun\", cmdArgs...)",
          "surroundingLines": [
            "cmdArgs = append(cmdArgs, question)",
            "",
            "execCmd := exec.Command(\"bun\", cmdArgs...)",
            "execCmd.Stdout = os.Stdout",
            "execCmd.Stderr = os.Stderr"
          ],
          "relatedTerms": [
            "execCmd",
            "exec",
            "Command",
            "bun",
            "cmdArgs"
          ],
          "language": "go"
        },
        {
          "term": "chatCmd",
          "type": "variable",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 105,
            "column": 0
          },
          "context": "var chatCmd = &cobra.Command{",
          "surroundingLines": [
            "}",
            "",
            "var chatCmd = &cobra.Command{",
            "Use:   \"chat [project-path]\",",
            "Short: \"Start interactive chat session\","
          ],
          "relatedTerms": [
            "chatCmd",
            "cobra",
            "Command"
          ],
          "language": "go"
        },
        {
          "term": "chat [project-path]",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 106,
            "column": 8
          },
          "context": "Use:   \"chat [project-path]\",",
          "surroundingLines": [
            "Use:   \"chat [project-path]\","
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "Start interactive chat session",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 107,
            "column": 8
          },
          "context": "Short: \"Start interactive chat session\",",
          "surroundingLines": [
            "Short: \"Start interactive chat session\","
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "path",
          "type": "variable",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 110,
            "column": 0
          },
          "context": "path := projectPath",
          "surroundingLines": [
            "Args:  cobra.MaximumNArgs(1),",
            "RunE: func(cmd *cobra.Command, args []string) error {",
            "path := projectPath",
            "if len(args) > 0 {",
            "path = args[0]"
          ],
          "relatedTerms": [
            "path",
            "projectPath"
          ],
          "language": "go"
        },
        {
          "term": "featureCmd",
          "type": "variable",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 120,
            "column": 0
          },
          "context": "var featureCmd = &cobra.Command{",
          "surroundingLines": [
            "}",
            "",
            "var featureCmd = &cobra.Command{",
            "Use:   \"feature [project-path] [description]\",",
            "Short: \"Get implementation guidance for new features\","
          ],
          "relatedTerms": [
            "featureCmd",
            "cobra",
            "Command"
          ],
          "language": "go"
        },
        {
          "term": "feature [project-path] [description]",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 121,
            "column": 8
          },
          "context": "Use:   \"feature [project-path] [description]\",",
          "surroundingLines": [
            "Use:   \"feature [project-path] [description]\","
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "Get implementation guidance for new features",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 122,
            "column": 8
          },
          "context": "Short: \"Get implementation guidance for new features\",",
          "surroundingLines": [
            "Short: \"Get implementation guidance for new features\","
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "cmdArgs",
          "type": "variable",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 140,
            "column": 0
          },
          "context": "cmdArgs := []string{\"run\", \"../../src/tools/curator-cli/cli.ts\", \"feature\"}",
          "surroundingLines": [
            "",
            "// Pass through to TypeScript implementation",
            "cmdArgs := []string{\"run\", \"../../src/tools/curator-cli/cli.ts\", \"feature\"}",
            "if path != \"\" {",
            "cmdArgs = append(cmdArgs, path)"
          ],
          "relatedTerms": [
            "cmdArgs",
            "run",
            "src",
            "tools",
            "curator",
            "cli",
            "feature"
          ],
          "language": "go"
        },
        {
          "term": "../../src/tools/curator-cli/cli.ts",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 140,
            "column": 29
          },
          "context": "cmdArgs := []string{\"run\", \"../../src/tools/curator-cli/cli.ts\", \"feature\"}",
          "surroundingLines": [
            "cmdArgs := []string{\"run\", \"../../src/tools/curator-cli/cli.ts\", \"feature\"}"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "execCmd",
          "type": "variable",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 146,
            "column": 0
          },
          "context": "execCmd := exec.Command(\"bun\", cmdArgs...)",
          "surroundingLines": [
            "cmdArgs = append(cmdArgs, description)",
            "",
            "execCmd := exec.Command(\"bun\", cmdArgs...)",
            "execCmd.Stdout = os.Stdout",
            "execCmd.Stderr = os.Stderr"
          ],
          "relatedTerms": [
            "execCmd",
            "exec",
            "Command",
            "bun",
            "cmdArgs"
          ],
          "language": "go"
        },
        {
          "term": "changeCmd",
          "type": "variable",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 155,
            "column": 0
          },
          "context": "var changeCmd = &cobra.Command{",
          "surroundingLines": [
            "}",
            "",
            "var changeCmd = &cobra.Command{",
            "Use:   \"change [project-path] [description]\",",
            "Short: \"Understand impact and risks of changes\","
          ],
          "relatedTerms": [
            "changeCmd",
            "cobra",
            "Command"
          ],
          "language": "go"
        },
        {
          "term": "change [project-path] [description]",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 156,
            "column": 8
          },
          "context": "Use:   \"change [project-path] [description]\",",
          "surroundingLines": [
            "Use:   \"change [project-path] [description]\","
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "Understand impact and risks of changes",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 157,
            "column": 8
          },
          "context": "Short: \"Understand impact and risks of changes\",",
          "surroundingLines": [
            "Short: \"Understand impact and risks of changes\","
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "cmdArgs",
          "type": "variable",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 175,
            "column": 0
          },
          "context": "cmdArgs := []string{\"run\", \"../../src/tools/curator-cli/cli.ts\", \"change\"}",
          "surroundingLines": [
            "",
            "// Pass through to TypeScript implementation",
            "cmdArgs := []string{\"run\", \"../../src/tools/curator-cli/cli.ts\", \"change\"}",
            "if path != \"\" {",
            "cmdArgs = append(cmdArgs, path)"
          ],
          "relatedTerms": [
            "cmdArgs",
            "run",
            "src",
            "tools",
            "curator",
            "cli",
            "change"
          ],
          "language": "go"
        },
        {
          "term": "../../src/tools/curator-cli/cli.ts",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 175,
            "column": 29
          },
          "context": "cmdArgs := []string{\"run\", \"../../src/tools/curator-cli/cli.ts\", \"change\"}",
          "surroundingLines": [
            "cmdArgs := []string{\"run\", \"../../src/tools/curator-cli/cli.ts\", \"change\"}"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "execCmd",
          "type": "variable",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 181,
            "column": 0
          },
          "context": "execCmd := exec.Command(\"bun\", cmdArgs...)",
          "surroundingLines": [
            "cmdArgs = append(cmdArgs, description)",
            "",
            "execCmd := exec.Command(\"bun\", cmdArgs...)",
            "execCmd.Stdout = os.Stdout",
            "execCmd.Stderr = os.Stderr"
          ],
          "relatedTerms": [
            "execCmd",
            "exec",
            "Command",
            "bun",
            "cmdArgs"
          ],
          "language": "go"
        },
        {
          "term": "memoryCmd",
          "type": "variable",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 190,
            "column": 0
          },
          "context": "var memoryCmd = &cobra.Command{",
          "surroundingLines": [
            "}",
            "",
            "var memoryCmd = &cobra.Command{",
            "Use:   \"memory [project-path]\",",
            "Short: \"View curator's memory about the codebase\","
          ],
          "relatedTerms": [
            "memoryCmd",
            "cobra",
            "Command"
          ],
          "language": "go"
        },
        {
          "term": "memory [project-path]",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 191,
            "column": 8
          },
          "context": "Use:   \"memory [project-path]\",",
          "surroundingLines": [
            "Use:   \"memory [project-path]\","
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "View curator's memory about the codebase",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 192,
            "column": 8
          },
          "context": "Short: \"View curator's memory about the codebase\",",
          "surroundingLines": [
            "Short: \"View curator's memory about the codebase\","
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "path",
          "type": "variable",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 195,
            "column": 0
          },
          "context": "path := projectPath",
          "surroundingLines": [
            "Args:  cobra.MaximumNArgs(1),",
            "RunE: func(cmd *cobra.Command, args []string) error {",
            "path := projectPath",
            "if len(args) > 0 {",
            "path = args[0]"
          ],
          "relatedTerms": [
            "path",
            "projectPath"
          ],
          "language": "go"
        },
        {
          "term": "cmdArgs",
          "type": "variable",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 205,
            "column": 0
          },
          "context": "cmdArgs := []string{\"run\", \"../../src/tools/curator-cli/cli.ts\", \"memory\"}",
          "surroundingLines": [
            "",
            "// Pass through to TypeScript implementation",
            "cmdArgs := []string{\"run\", \"../../src/tools/curator-cli/cli.ts\", \"memory\"}",
            "if path != \"\" {",
            "cmdArgs = append(cmdArgs, path)"
          ],
          "relatedTerms": [
            "cmdArgs",
            "run",
            "src",
            "tools",
            "curator",
            "cli",
            "memory"
          ],
          "language": "go"
        },
        {
          "term": "../../src/tools/curator-cli/cli.ts",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 205,
            "column": 29
          },
          "context": "cmdArgs := []string{\"run\", \"../../src/tools/curator-cli/cli.ts\", \"memory\"}",
          "surroundingLines": [
            "cmdArgs := []string{\"run\", \"../../src/tools/curator-cli/cli.ts\", \"memory\"}"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "execCmd",
          "type": "variable",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 210,
            "column": 0
          },
          "context": "execCmd := exec.Command(\"bun\", cmdArgs...)",
          "surroundingLines": [
            "}",
            "",
            "execCmd := exec.Command(\"bun\", cmdArgs...)",
            "execCmd.Stdout = os.Stdout",
            "execCmd.Stderr = os.Stderr"
          ],
          "relatedTerms": [
            "execCmd",
            "exec",
            "Command",
            "bun",
            "cmdArgs"
          ],
          "language": "go"
        },
        {
          "term": "clearCmd",
          "type": "variable",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 219,
            "column": 0
          },
          "context": "var clearCmd = &cobra.Command{",
          "surroundingLines": [
            "}",
            "",
            "var clearCmd = &cobra.Command{",
            "Use:   \"clear [project-path]\",",
            "Short: \"Clear curator's memory\","
          ],
          "relatedTerms": [
            "clearCmd",
            "cobra",
            "Command"
          ],
          "language": "go"
        },
        {
          "term": "clear [project-path]",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 220,
            "column": 8
          },
          "context": "Use:   \"clear [project-path]\",",
          "surroundingLines": [
            "Use:   \"clear [project-path]\","
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "Clear curator's memory",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 221,
            "column": 8
          },
          "context": "Short: \"Clear curator's memory\",",
          "surroundingLines": [
            "Short: \"Clear curator's memory\","
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "path",
          "type": "variable",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 224,
            "column": 0
          },
          "context": "path := projectPath",
          "surroundingLines": [
            "Args:  cobra.MaximumNArgs(1),",
            "RunE: func(cmd *cobra.Command, args []string) error {",
            "path := projectPath",
            "if len(args) > 0 {",
            "path = args[0]"
          ],
          "relatedTerms": [
            "path",
            "projectPath"
          ],
          "language": "go"
        },
        {
          "term": "cmdArgs",
          "type": "variable",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 230,
            "column": 0
          },
          "context": "cmdArgs := []string{\"run\", \"../../src/tools/curator-cli/cli.ts\", \"clear\"}",
          "surroundingLines": [
            "",
            "// Pass through to TypeScript implementation",
            "cmdArgs := []string{\"run\", \"../../src/tools/curator-cli/cli.ts\", \"clear\"}",
            "if path != \"\" {",
            "cmdArgs = append(cmdArgs, path)"
          ],
          "relatedTerms": [
            "cmdArgs",
            "run",
            "src",
            "tools",
            "curator",
            "cli",
            "clear"
          ],
          "language": "go"
        },
        {
          "term": "../../src/tools/curator-cli/cli.ts",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 230,
            "column": 29
          },
          "context": "cmdArgs := []string{\"run\", \"../../src/tools/curator-cli/cli.ts\", \"clear\"}",
          "surroundingLines": [
            "cmdArgs := []string{\"run\", \"../../src/tools/curator-cli/cli.ts\", \"clear\"}"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "execCmd",
          "type": "variable",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 235,
            "column": 0
          },
          "context": "execCmd := exec.Command(\"bun\", cmdArgs...)",
          "surroundingLines": [
            "}",
            "",
            "execCmd := exec.Command(\"bun\", cmdArgs...)",
            "execCmd.Stdout = os.Stdout",
            "execCmd.Stderr = os.Stderr"
          ],
          "relatedTerms": [
            "execCmd",
            "exec",
            "Command",
            "bun",
            "cmdArgs"
          ],
          "language": "go"
        },
        {
          "term": "init",
          "type": "function",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 244,
            "column": 0
          },
          "context": "func init() {",
          "surroundingLines": [
            "}",
            "",
            "func init() {",
            "// Global flags",
            "rootCmd.PersistentFlags().BoolVar(&tuiMode, \"tui\", false, \"Launch interactive TUI mode\")"
          ],
          "relatedTerms": [
            "init"
          ],
          "language": "go"
        },
        {
          "term": ", false, ",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 246,
            "column": 49
          },
          "context": "rootCmd.PersistentFlags().BoolVar(&tuiMode, \"tui\", false, \"Launch interactive TUI mode\")",
          "surroundingLines": [
            "rootCmd.PersistentFlags().BoolVar(&tuiMode, \"tui\", false, \"Launch interactive TUI mode\")"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "Project path (defaults to current directory)",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 247,
            "column": 72
          },
          "context": "rootCmd.PersistentFlags().StringVarP(&projectPath, \"project\", \"p\", \"\", \"Project path (defaults to current directory)\")",
          "surroundingLines": [
            "rootCmd.PersistentFlags().StringVarP(&projectPath, \"project\", \"p\", \"\", \"Project path (defaults to current directory)\")"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "new-session",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 250,
            "column": 42
          },
          "context": "overviewCmd.Flags().BoolVar(&newSession, \"new-session\", false, \"Start fresh analysis session\")",
          "surroundingLines": [
            "overviewCmd.Flags().BoolVar(&newSession, \"new-session\", false, \"Start fresh analysis session\")"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "Start fresh analysis session",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 250,
            "column": 64
          },
          "context": "overviewCmd.Flags().BoolVar(&newSession, \"new-session\", false, \"Start fresh analysis session\")",
          "surroundingLines": [
            "overviewCmd.Flags().BoolVar(&newSession, \"new-session\", false, \"Start fresh analysis session\")"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "main",
          "type": "function",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 262,
            "column": 0
          },
          "context": "func main() {",
          "surroundingLines": [
            "}",
            "",
            "func main() {",
            "if err := rootCmd.Execute(); err != nil {",
            "fmt.Fprintln(os.Stderr, err)"
          ],
          "relatedTerms": [
            "main"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "cmd/monitor/main.go",
      [
        {
          "term": "main",
          "type": "module",
          "location": {
            "file": "cmd/monitor/main.go",
            "line": 1,
            "column": 0
          },
          "context": "package main",
          "surroundingLines": [
            "package main"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "os/exec",
          "type": "string",
          "location": {
            "file": "cmd/monitor/main.go",
            "line": 6,
            "column": 1
          },
          "context": "\"os/exec\"",
          "surroundingLines": [
            "\"os/exec\""
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "github.com/RLabs-Inc/codebase-curator/charm-tui/internal/monitor",
          "type": "string",
          "location": {
            "file": "cmd/monitor/main.go",
            "line": 8,
            "column": 1
          },
          "context": "\"github.com/RLabs-Inc/codebase-curator/charm-tui/internal/monitor\"",
          "surroundingLines": [
            "\"github.com/RLabs-Inc/codebase-curator/charm-tui/internal/monitor\""
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "github.com/spf13/cobra",
          "type": "string",
          "location": {
            "file": "cmd/monitor/main.go",
            "line": 9,
            "column": 1
          },
          "context": "\"github.com/spf13/cobra\"",
          "surroundingLines": [
            "\"github.com/spf13/cobra\""
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "rootCmd",
          "type": "variable",
          "location": {
            "file": "cmd/monitor/main.go",
            "line": 17,
            "column": 0
          },
          "context": "var rootCmd = &cobra.Command{",
          "surroundingLines": [
            ")",
            "",
            "var rootCmd = &cobra.Command{",
            "Use:   \"monitor [command]\",",
            "Short: \"Live codebase monitoring dashboard\","
          ],
          "relatedTerms": [
            "rootCmd",
            "cobra",
            "Command"
          ],
          "language": "go"
        },
        {
          "term": "monitor [command]",
          "type": "string",
          "location": {
            "file": "cmd/monitor/main.go",
            "line": 18,
            "column": 8
          },
          "context": "Use:   \"monitor [command]\",",
          "surroundingLines": [
            "Use:   \"monitor [command]\","
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "Live codebase monitoring dashboard",
          "type": "string",
          "location": {
            "file": "cmd/monitor/main.go",
            "line": 19,
            "column": 8
          },
          "context": "Short: \"Live codebase monitoring dashboard\",",
          "surroundingLines": [
            "Short: \"Live codebase monitoring dashboard\","
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "watchCmd",
          "type": "variable",
          "location": {
            "file": "cmd/monitor/main.go",
            "line": 35,
            "column": 0
          },
          "context": "var watchCmd = &cobra.Command{",
          "surroundingLines": [
            "}",
            "",
            "var watchCmd = &cobra.Command{",
            "Use:   \"watch\",",
            "Short: \"Start live file monitoring\","
          ],
          "relatedTerms": [
            "watchCmd",
            "cobra",
            "Command"
          ],
          "language": "go"
        },
        {
          "term": "Start live file monitoring",
          "type": "string",
          "location": {
            "file": "cmd/monitor/main.go",
            "line": 37,
            "column": 8
          },
          "context": "Short: \"Start live file monitoring\",",
          "surroundingLines": [
            "Short: \"Start live file monitoring\","
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "cmdArgs",
          "type": "variable",
          "location": {
            "file": "cmd/monitor/main.go",
            "line": 44,
            "column": 0
          },
          "context": "cmdArgs := []string{\"run\", \"../../src/tools/monitor/cli.ts\", \"watch\"}",
          "surroundingLines": [
            "",
            "// Pass through to TypeScript implementation",
            "cmdArgs := []string{\"run\", \"../../src/tools/monitor/cli.ts\", \"watch\"}",
            "if withOverview {",
            "cmdArgs = append(cmdArgs, \"--overview\")"
          ],
          "relatedTerms": [
            "cmdArgs",
            "run",
            "src",
            "tools",
            "monitor",
            "cli",
            "watch"
          ],
          "language": "go"
        },
        {
          "term": "../../src/tools/monitor/cli.ts",
          "type": "string",
          "location": {
            "file": "cmd/monitor/main.go",
            "line": 44,
            "column": 29
          },
          "context": "cmdArgs := []string{\"run\", \"../../src/tools/monitor/cli.ts\", \"watch\"}",
          "surroundingLines": [
            "cmdArgs := []string{\"run\", \"../../src/tools/monitor/cli.ts\", \"watch\"}"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "execCmd",
          "type": "variable",
          "location": {
            "file": "cmd/monitor/main.go",
            "line": 49,
            "column": 0
          },
          "context": "execCmd := exec.Command(\"bun\", cmdArgs...)",
          "surroundingLines": [
            "}",
            "",
            "execCmd := exec.Command(\"bun\", cmdArgs...)",
            "execCmd.Stdout = os.Stdout",
            "execCmd.Stderr = os.Stderr"
          ],
          "relatedTerms": [
            "execCmd",
            "exec",
            "Command",
            "bun",
            "cmdArgs"
          ],
          "language": "go"
        },
        {
          "term": "overviewCmd",
          "type": "variable",
          "location": {
            "file": "cmd/monitor/main.go",
            "line": 58,
            "column": 0
          },
          "context": "var overviewCmd = &cobra.Command{",
          "surroundingLines": [
            "}",
            "",
            "var overviewCmd = &cobra.Command{",
            "Use:   \"overview\",",
            "Short: \"Show static codebase overview\","
          ],
          "relatedTerms": [
            "overviewCmd",
            "cobra",
            "Command"
          ],
          "language": "go"
        },
        {
          "term": "Show static codebase overview",
          "type": "string",
          "location": {
            "file": "cmd/monitor/main.go",
            "line": 60,
            "column": 8
          },
          "context": "Short: \"Show static codebase overview\",",
          "surroundingLines": [
            "Short: \"Show static codebase overview\","
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "cmdArgs",
          "type": "variable",
          "location": {
            "file": "cmd/monitor/main.go",
            "line": 67,
            "column": 0
          },
          "context": "cmdArgs := []string{\"run\", \"../../src/tools/monitor/cli.ts\", \"overview\"}",
          "surroundingLines": [
            "",
            "// Pass through to TypeScript implementation",
            "cmdArgs := []string{\"run\", \"../../src/tools/monitor/cli.ts\", \"overview\"}",
            "",
            "execCmd := exec.Command(\"bun\", cmdArgs...)"
          ],
          "relatedTerms": [
            "cmdArgs",
            "run",
            "src",
            "tools",
            "monitor",
            "cli",
            "overview"
          ],
          "language": "go"
        },
        {
          "term": "../../src/tools/monitor/cli.ts",
          "type": "string",
          "location": {
            "file": "cmd/monitor/main.go",
            "line": 67,
            "column": 29
          },
          "context": "cmdArgs := []string{\"run\", \"../../src/tools/monitor/cli.ts\", \"overview\"}",
          "surroundingLines": [
            "cmdArgs := []string{\"run\", \"../../src/tools/monitor/cli.ts\", \"overview\"}"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "execCmd",
          "type": "variable",
          "location": {
            "file": "cmd/monitor/main.go",
            "line": 69,
            "column": 0
          },
          "context": "execCmd := exec.Command(\"bun\", cmdArgs...)",
          "surroundingLines": [
            "cmdArgs := []string{\"run\", \"../../src/tools/monitor/cli.ts\", \"overview\"}",
            "",
            "execCmd := exec.Command(\"bun\", cmdArgs...)",
            "execCmd.Stdout = os.Stdout",
            "execCmd.Stderr = os.Stderr"
          ],
          "relatedTerms": [
            "execCmd",
            "exec",
            "Command",
            "bun",
            "cmdArgs"
          ],
          "language": "go"
        },
        {
          "term": "statusCmd",
          "type": "variable",
          "location": {
            "file": "cmd/monitor/main.go",
            "line": 78,
            "column": 0
          },
          "context": "var statusCmd = &cobra.Command{",
          "surroundingLines": [
            "}",
            "",
            "var statusCmd = &cobra.Command{",
            "Use:   \"status\",",
            "Short: \"Check index status and health\","
          ],
          "relatedTerms": [
            "statusCmd",
            "cobra",
            "Command"
          ],
          "language": "go"
        },
        {
          "term": "Check index status and health",
          "type": "string",
          "location": {
            "file": "cmd/monitor/main.go",
            "line": 80,
            "column": 8
          },
          "context": "Short: \"Check index status and health\",",
          "surroundingLines": [
            "Short: \"Check index status and health\","
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "cmdArgs",
          "type": "variable",
          "location": {
            "file": "cmd/monitor/main.go",
            "line": 87,
            "column": 0
          },
          "context": "cmdArgs := []string{\"run\", \"../../src/tools/monitor/cli.ts\", \"status\"}",
          "surroundingLines": [
            "",
            "// Pass through to TypeScript implementation",
            "cmdArgs := []string{\"run\", \"../../src/tools/monitor/cli.ts\", \"status\"}",
            "",
            "execCmd := exec.Command(\"bun\", cmdArgs...)"
          ],
          "relatedTerms": [
            "cmdArgs",
            "run",
            "src",
            "tools",
            "monitor",
            "cli",
            "status"
          ],
          "language": "go"
        },
        {
          "term": "../../src/tools/monitor/cli.ts",
          "type": "string",
          "location": {
            "file": "cmd/monitor/main.go",
            "line": 87,
            "column": 29
          },
          "context": "cmdArgs := []string{\"run\", \"../../src/tools/monitor/cli.ts\", \"status\"}",
          "surroundingLines": [
            "cmdArgs := []string{\"run\", \"../../src/tools/monitor/cli.ts\", \"status\"}"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "execCmd",
          "type": "variable",
          "location": {
            "file": "cmd/monitor/main.go",
            "line": 89,
            "column": 0
          },
          "context": "execCmd := exec.Command(\"bun\", cmdArgs...)",
          "surroundingLines": [
            "cmdArgs := []string{\"run\", \"../../src/tools/monitor/cli.ts\", \"status\"}",
            "",
            "execCmd := exec.Command(\"bun\", cmdArgs...)",
            "execCmd.Stdout = os.Stdout",
            "execCmd.Stderr = os.Stderr"
          ],
          "relatedTerms": [
            "execCmd",
            "exec",
            "Command",
            "bun",
            "cmdArgs"
          ],
          "language": "go"
        },
        {
          "term": "init",
          "type": "function",
          "location": {
            "file": "cmd/monitor/main.go",
            "line": 98,
            "column": 0
          },
          "context": "func init() {",
          "surroundingLines": [
            "}",
            "",
            "func init() {",
            "// Root flags",
            "rootCmd.PersistentFlags().BoolVar(&tuiMode, \"tui\", false, \"Launch interactive TUI mode\")"
          ],
          "relatedTerms": [
            "init"
          ],
          "language": "go"
        },
        {
          "term": ", false, ",
          "type": "string",
          "location": {
            "file": "cmd/monitor/main.go",
            "line": 100,
            "column": 49
          },
          "context": "rootCmd.PersistentFlags().BoolVar(&tuiMode, \"tui\", false, \"Launch interactive TUI mode\")",
          "surroundingLines": [
            "rootCmd.PersistentFlags().BoolVar(&tuiMode, \"tui\", false, \"Launch interactive TUI mode\")"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "Include codebase overview in dashboard",
          "type": "string",
          "location": {
            "file": "cmd/monitor/main.go",
            "line": 103,
            "column": 60
          },
          "context": "watchCmd.Flags().BoolVar(&withOverview, \"overview\", false, \"Include codebase overview in dashboard\")",
          "surroundingLines": [
            "watchCmd.Flags().BoolVar(&withOverview, \"overview\", false, \"Include codebase overview in dashboard\")"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "main",
          "type": "function",
          "location": {
            "file": "cmd/monitor/main.go",
            "line": 111,
            "column": 0
          },
          "context": "func main() {",
          "surroundingLines": [
            "}",
            "",
            "func main() {",
            "if err := rootCmd.Execute(); err != nil {",
            "fmt.Fprintln(os.Stderr, err)"
          ],
          "relatedTerms": [
            "main"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "cmd/smartgrep/main.go",
      [
        {
          "term": "main",
          "type": "module",
          "location": {
            "file": "cmd/smartgrep/main.go",
            "line": 1,
            "column": 0
          },
          "context": "package main",
          "surroundingLines": [
            "package main"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "os/exec",
          "type": "string",
          "location": {
            "file": "cmd/smartgrep/main.go",
            "line": 6,
            "column": 1
          },
          "context": "\"os/exec\"",
          "surroundingLines": [
            "\"os/exec\""
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "github.com/RLabs-Inc/codebase-curator/charm-tui/internal/config",
          "type": "string",
          "location": {
            "file": "cmd/smartgrep/main.go",
            "line": 8,
            "column": 1
          },
          "context": "\"github.com/RLabs-Inc/codebase-curator/charm-tui/internal/config\"",
          "surroundingLines": [
            "\"github.com/RLabs-Inc/codebase-curator/charm-tui/internal/config\""
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "github.com/RLabs-Inc/codebase-curator/charm-tui/internal/smartgrep",
          "type": "string",
          "location": {
            "file": "cmd/smartgrep/main.go",
            "line": 9,
            "column": 1
          },
          "context": "\"github.com/RLabs-Inc/codebase-curator/charm-tui/internal/smartgrep\"",
          "surroundingLines": [
            "\"github.com/RLabs-Inc/codebase-curator/charm-tui/internal/smartgrep\""
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "github.com/spf13/cobra",
          "type": "string",
          "location": {
            "file": "cmd/smartgrep/main.go",
            "line": 10,
            "column": 1
          },
          "context": "\"github.com/spf13/cobra\"",
          "surroundingLines": [
            "\"github.com/spf13/cobra\""
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "rootCmd",
          "type": "variable",
          "location": {
            "file": "cmd/smartgrep/main.go",
            "line": 22,
            "column": 0
          },
          "context": "var rootCmd = &cobra.Command{",
          "surroundingLines": [
            ")",
            "",
            "var rootCmd = &cobra.Command{",
            "Use:   \"smartgrep [pattern]\",",
            "Short: \"Semantic code search optimized for Claude\","
          ],
          "relatedTerms": [
            "rootCmd",
            "cobra",
            "Command"
          ],
          "language": "go"
        },
        {
          "term": "smartgrep [pattern]",
          "type": "string",
          "location": {
            "file": "cmd/smartgrep/main.go",
            "line": 23,
            "column": 8
          },
          "context": "Use:   \"smartgrep [pattern]\",",
          "surroundingLines": [
            "Use:   \"smartgrep [pattern]\","
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "Semantic code search optimized for Claude",
          "type": "string",
          "location": {
            "file": "cmd/smartgrep/main.go",
            "line": 24,
            "column": 8
          },
          "context": "Short: \"Semantic code search optimized for Claude\",",
          "surroundingLines": [
            "Short: \"Semantic code search optimized for Claude\","
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "init",
          "type": "function",
          "location": {
            "file": "cmd/smartgrep/main.go",
            "line": 41,
            "column": 0
          },
          "context": "func init() {",
          "surroundingLines": [
            "}",
            "",
            "func init() {",
            "rootCmd.Flags().BoolVar(&tuiMode, \"tui\", false, \"Launch interactive TUI mode\")",
            "rootCmd.Flags().StringVar(&typeFilter, \"type\", \"\", \"Filter by type (function,class,variable,etc)\")"
          ],
          "relatedTerms": [
            "init"
          ],
          "language": "go"
        },
        {
          "term": ", false, ",
          "type": "string",
          "location": {
            "file": "cmd/smartgrep/main.go",
            "line": 42,
            "column": 39
          },
          "context": "rootCmd.Flags().BoolVar(&tuiMode, \"tui\", false, \"Launch interactive TUI mode\")",
          "surroundingLines": [
            "rootCmd.Flags().BoolVar(&tuiMode, \"tui\", false, \"Launch interactive TUI mode\")"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "Filter by type (function,class,variable,etc)",
          "type": "string",
          "location": {
            "file": "cmd/smartgrep/main.go",
            "line": 43,
            "column": 52
          },
          "context": "rootCmd.Flags().StringVar(&typeFilter, \"type\", \"\", \"Filter by type (function,class,variable,etc)\")",
          "surroundingLines": [
            "rootCmd.Flags().StringVar(&typeFilter, \"type\", \"\", \"Filter by type (function,class,variable,etc)\")"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": ", 50, ",
          "type": "string",
          "location": {
            "file": "cmd/smartgrep/main.go",
            "line": 44,
            "column": 41
          },
          "context": "rootCmd.Flags().IntVar(&maxResults, \"max\", 50, \"Maximum results to show\")",
          "surroundingLines": [
            "rootCmd.Flags().IntVar(&maxResults, \"max\", 50, \"Maximum results to show\")"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "Sort by: relevance, usage, name, file",
          "type": "string",
          "location": {
            "file": "cmd/smartgrep/main.go",
            "line": 45,
            "column": 57
          },
          "context": "rootCmd.Flags().StringVar(&sortBy, \"sort\", \"relevance\", \"Sort by: relevance, usage, name, file\")",
          "surroundingLines": [
            "rootCmd.Flags().StringVar(&sortBy, \"sort\", \"relevance\", \"Sort by: relevance, usage, name, file\")"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "Compact output format",
          "type": "string",
          "location": {
            "file": "cmd/smartgrep/main.go",
            "line": 46,
            "column": 57
          },
          "context": "rootCmd.Flags().BoolVar(&compactMode, \"compact\", false, \"Compact output format\")",
          "surroundingLines": [
            "rootCmd.Flags().BoolVar(&compactMode, \"compact\", false, \"Compact output format\")"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "Rebuild the semantic index",
          "type": "string",
          "location": {
            "file": "cmd/smartgrep/main.go",
            "line": 47,
            "column": 56
          },
          "context": "rootCmd.Flags().BoolVar(&rebuildIndex, \"index\", false, \"Rebuild the semantic index\")",
          "surroundingLines": [
            "rootCmd.Flags().BoolVar(&rebuildIndex, \"index\", false, \"Rebuild the semantic index\")"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "executeCommand",
          "type": "function",
          "location": {
            "file": "cmd/smartgrep/main.go",
            "line": 51,
            "column": 0
          },
          "context": "func executeCommand(subcommand string, args []string, flags map[string]interface{}) error {",
          "surroundingLines": [
            "",
            "// Helper to execute CLI commands",
            "func executeCommand(subcommand string, args []string, flags map[string]interface{}) error {",
            "executor := config.GetExecutor()",
            "cliPath := config.GetSmartgrepPath()"
          ],
          "relatedTerms": [
            "executeCommand",
            "subcommand",
            "args",
            "flags"
          ],
          "language": "go"
        },
        {
          "term": "executor",
          "type": "variable",
          "location": {
            "file": "cmd/smartgrep/main.go",
            "line": 52,
            "column": 0
          },
          "context": "executor := config.GetExecutor()",
          "surroundingLines": [
            "// Helper to execute CLI commands",
            "func executeCommand(subcommand string, args []string, flags map[string]interface{}) error {",
            "executor := config.GetExecutor()",
            "cliPath := config.GetSmartgrepPath()",
            ""
          ],
          "relatedTerms": [
            "executor",
            "config",
            "GetExecutor"
          ],
          "language": "go"
        },
        {
          "term": "cliPath",
          "type": "variable",
          "location": {
            "file": "cmd/smartgrep/main.go",
            "line": 53,
            "column": 0
          },
          "context": "cliPath := config.GetSmartgrepPath()",
          "surroundingLines": [
            "func executeCommand(subcommand string, args []string, flags map[string]interface{}) error {",
            "executor := config.GetExecutor()",
            "cliPath := config.GetSmartgrepPath()",
            "",
            "var cmd *exec.Cmd"
          ],
          "relatedTerms": [
            "cliPath",
            "config",
            "GetSmartgrepPath"
          ],
          "language": "go"
        },
        {
          "term": "+flag, fmt.Sprintf(",
          "type": "string",
          "location": {
            "file": "cmd/smartgrep/main.go",
            "line": 73,
            "column": 33
          },
          "context": "cmdArgs = append(cmdArgs, \"--\"+flag, fmt.Sprintf(\"%d\", intVal))",
          "surroundingLines": [
            "cmdArgs = append(cmdArgs, \"--\"+flag, fmt.Sprintf(\"%d\", intVal))"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "+flag, fmt.Sprintf(",
          "type": "string",
          "location": {
            "file": "cmd/smartgrep/main.go",
            "line": 92,
            "column": 33
          },
          "context": "cmdArgs = append(cmdArgs, \"--\"+flag, fmt.Sprintf(\"%d\", intVal))",
          "surroundingLines": [
            "cmdArgs = append(cmdArgs, \"--\"+flag, fmt.Sprintf(\"%d\", intVal))"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "runCLIMode",
          "type": "function",
          "location": {
            "file": "cmd/smartgrep/main.go",
            "line": 106,
            "column": 0
          },
          "context": "func runCLIMode(args []string) error {",
          "surroundingLines": [
            "}",
            "",
            "func runCLIMode(args []string) error {",
            "// Build flags map",
            "flags := make(map[string]interface{})"
          ],
          "relatedTerms": [
            "runCLIMode",
            "args"
          ],
          "language": "go"
        },
        {
          "term": "flags",
          "type": "variable",
          "location": {
            "file": "cmd/smartgrep/main.go",
            "line": 108,
            "column": 0
          },
          "context": "flags := make(map[string]interface{})",
          "surroundingLines": [
            "func runCLIMode(args []string) error {",
            "// Build flags map",
            "flags := make(map[string]interface{})",
            "if rebuildIndex {",
            "flags[\"index\"] = true"
          ],
          "relatedTerms": [
            "flags"
          ],
          "language": "go"
        },
        {
          "term": "groupCmd",
          "type": "variable",
          "location": {
            "file": "cmd/smartgrep/main.go",
            "line": 129,
            "column": 0
          },
          "context": "var groupCmd = &cobra.Command{",
          "surroundingLines": [
            "",
            "// Subcommands",
            "var groupCmd = &cobra.Command{",
            "Use:   \"group [action] [name]\",",
            "Short: \"Manage concept groups\","
          ],
          "relatedTerms": [
            "groupCmd",
            "cobra",
            "Command"
          ],
          "language": "go"
        },
        {
          "term": "group [action] [name]",
          "type": "string",
          "location": {
            "file": "cmd/smartgrep/main.go",
            "line": 130,
            "column": 8
          },
          "context": "Use:   \"group [action] [name]\",",
          "surroundingLines": [
            "Use:   \"group [action] [name]\","
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "Manage concept groups",
          "type": "string",
          "location": {
            "file": "cmd/smartgrep/main.go",
            "line": 131,
            "column": 8
          },
          "context": "Short: \"Manage concept groups\",",
          "surroundingLines": [
            "Short: \"Manage concept groups\","
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "List, search, add, or remove concept groups for semantic search",
          "type": "string",
          "location": {
            "file": "cmd/smartgrep/main.go",
            "line": 132,
            "column": 8
          },
          "context": "Long:  \"List, search, add, or remove concept groups for semantic search\",",
          "surroundingLines": [
            "Long:  \"List, search, add, or remove concept groups for semantic search\","
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "refsCmd",
          "type": "variable",
          "location": {
            "file": "cmd/smartgrep/main.go",
            "line": 143,
            "column": 0
          },
          "context": "var refsCmd = &cobra.Command{",
          "surroundingLines": [
            "}",
            "",
            "var refsCmd = &cobra.Command{",
            "Use:   \"refs [symbol]\",",
            "Short: \"Find all references to a symbol\","
          ],
          "relatedTerms": [
            "refsCmd",
            "cobra",
            "Command"
          ],
          "language": "go"
        },
        {
          "term": "refs [symbol]",
          "type": "string",
          "location": {
            "file": "cmd/smartgrep/main.go",
            "line": 144,
            "column": 8
          },
          "context": "Use:   \"refs [symbol]\",",
          "surroundingLines": [
            "Use:   \"refs [symbol]\","
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "Find all references to a symbol",
          "type": "string",
          "location": {
            "file": "cmd/smartgrep/main.go",
            "line": 145,
            "column": 8
          },
          "context": "Short: \"Find all references to a symbol\",",
          "surroundingLines": [
            "Short: \"Find all references to a symbol\","
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "symbol name required",
          "type": "string",
          "location": {
            "file": "cmd/smartgrep/main.go",
            "line": 152,
            "column": 21
          },
          "context": "return fmt.Errorf(\"symbol name required\")",
          "surroundingLines": [
            "return fmt.Errorf(\"symbol name required\")"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "changesCmd",
          "type": "variable",
          "location": {
            "file": "cmd/smartgrep/main.go",
            "line": 160,
            "column": 0
          },
          "context": "var changesCmd = &cobra.Command{",
          "surroundingLines": [
            "}",
            "",
            "var changesCmd = &cobra.Command{",
            "Use:   \"changes\",",
            "Short: \"Analyze impact of uncommitted changes\","
          ],
          "relatedTerms": [
            "changesCmd",
            "cobra",
            "Command"
          ],
          "language": "go"
        },
        {
          "term": "Analyze impact of uncommitted changes",
          "type": "string",
          "location": {
            "file": "cmd/smartgrep/main.go",
            "line": 162,
            "column": 8
          },
          "context": "Short: \"Analyze impact of uncommitted changes\",",
          "surroundingLines": [
            "Short: \"Analyze impact of uncommitted changes\","
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "flags",
          "type": "variable",
          "location": {
            "file": "cmd/smartgrep/main.go",
            "line": 169,
            "column": 0
          },
          "context": "flags := make(map[string]interface{})",
          "surroundingLines": [
            "",
            "// Pass through to TypeScript implementation",
            "flags := make(map[string]interface{})",
            "if compactMode {",
            "flags[\"compact\"] = true"
          ],
          "relatedTerms": [
            "flags"
          ],
          "language": "go"
        },
        {
          "term": "main",
          "type": "function",
          "location": {
            "file": "cmd/smartgrep/main.go",
            "line": 177,
            "column": 0
          },
          "context": "func main() {",
          "surroundingLines": [
            "}",
            "",
            "func main() {",
            "// Add subcommands",
            "rootCmd.AddCommand(groupCmd)"
          ],
          "relatedTerms": [
            "main"
          ],
          "language": "go"
        },
        {
          "term": ", false, ",
          "type": "string",
          "location": {
            "file": "cmd/smartgrep/main.go",
            "line": 185,
            "column": 36
          },
          "context": "cmd.Flags().BoolVar(&tuiMode, \"tui\", false, \"Launch interactive TUI mode\")",
          "surroundingLines": [
            "cmd.Flags().BoolVar(&tuiMode, \"tui\", false, \"Launch interactive TUI mode\")"
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ]
  ],
  "termIndex": [
    [
      "demo script for charm tuis",
      [
        {
          "term": "Demo script for charm TUIs",
          "type": "comment",
          "location": {
            "file": "demo.sh",
            "line": 2,
            "column": 0
          },
          "context": "# Demo script for charm TUIs",
          "surroundingLines": [
            "# Demo script for charm TUIs"
          ],
          "relatedTerms": [],
          "language": "shell"
        }
      ]
    ],
    [
      "🎉 charm tui demo - phase 2 complete!",
      [
        {
          "term": "🎉 Charm TUI Demo - Phase 2 Complete!",
          "type": "string",
          "location": {
            "file": "demo.sh",
            "line": 4,
            "column": 5
          },
          "context": "echo \"🎉 Charm TUI Demo - Phase 2 Complete!\"",
          "surroundingLines": [
            "echo \"🎉 Charm TUI Demo - Phase 2 Complete!\""
          ],
          "relatedTerms": [],
          "language": "shell"
        }
      ]
    ],
    [
      "🎉 charm tui demo ",
      [
        {
          "term": "🎉 Charm TUI Demo - Phase 2 Complete!",
          "type": "string",
          "location": {
            "file": "demo.sh",
            "line": 4,
            "column": 5
          },
          "context": "echo \"🎉 Charm TUI Demo - Phase 2 Complete!\"",
          "surroundingLines": [
            "echo \"🎉 Charm TUI Demo - Phase 2 Complete!\""
          ],
          "relatedTerms": [],
          "language": "shell"
        }
      ]
    ],
    [
      " phase 2 complete!",
      [
        {
          "term": "🎉 Charm TUI Demo - Phase 2 Complete!",
          "type": "string",
          "location": {
            "file": "demo.sh",
            "line": 4,
            "column": 5
          },
          "context": "echo \"🎉 Charm TUI Demo - Phase 2 Complete!\"",
          "surroundingLines": [
            "echo \"🎉 Charm TUI Demo - Phase 2 Complete!\""
          ],
          "relatedTerms": [],
          "language": "shell"
        }
      ]
    ],
    [
      "we've successfully created go-based tuis with optional --tui flags.",
      [
        {
          "term": "We've successfully created Go-based TUIs with optional --tui flags.",
          "type": "string",
          "location": {
            "file": "demo.sh",
            "line": 6,
            "column": 5
          },
          "context": "echo \"We've successfully created Go-based TUIs with optional --tui flags.\"",
          "surroundingLines": [
            "echo \"We've successfully created Go-based TUIs with optional --tui flags.\""
          ],
          "relatedTerms": [],
          "language": "shell"
        }
      ]
    ],
    [
      "we've successfully created go",
      [
        {
          "term": "We've successfully created Go-based TUIs with optional --tui flags.",
          "type": "string",
          "location": {
            "file": "demo.sh",
            "line": 6,
            "column": 5
          },
          "context": "echo \"We've successfully created Go-based TUIs with optional --tui flags.\"",
          "surroundingLines": [
            "echo \"We've successfully created Go-based TUIs with optional --tui flags.\""
          ],
          "relatedTerms": [],
          "language": "shell"
        }
      ]
    ],
    [
      "based tuis with optional ",
      [
        {
          "term": "We've successfully created Go-based TUIs with optional --tui flags.",
          "type": "string",
          "location": {
            "file": "demo.sh",
            "line": 6,
            "column": 5
          },
          "context": "echo \"We've successfully created Go-based TUIs with optional --tui flags.\"",
          "surroundingLines": [
            "echo \"We've successfully created Go-based TUIs with optional --tui flags.\""
          ],
          "relatedTerms": [],
          "language": "shell"
        }
      ]
    ],
    [
      "tui flags.",
      [
        {
          "term": "We've successfully created Go-based TUIs with optional --tui flags.",
          "type": "string",
          "location": {
            "file": "demo.sh",
            "line": 6,
            "column": 5
          },
          "context": "echo \"We've successfully created Go-based TUIs with optional --tui flags.\"",
          "surroundingLines": [
            "echo \"We've successfully created Go-based TUIs with optional --tui flags.\""
          ],
          "relatedTerms": [],
          "language": "shell"
        }
      ]
    ],
    [
      "available commands:",
      [
        {
          "term": "Available commands:",
          "type": "string",
          "location": {
            "file": "demo.sh",
            "line": 8,
            "column": 5
          },
          "context": "echo \"Available commands:\"",
          "surroundingLines": [
            "echo \"Available commands:\""
          ],
          "relatedTerms": [],
          "language": "shell"
        }
      ]
    ],
    [
      "1. smartgrep (semantic search):",
      [
        {
          "term": "1. SmartGrep (Semantic Search):",
          "type": "string",
          "location": {
            "file": "demo.sh",
            "line": 10,
            "column": 5
          },
          "context": "echo \"1. SmartGrep (Semantic Search):\"",
          "surroundingLines": [
            "echo \"1. SmartGrep (Semantic Search):\""
          ],
          "relatedTerms": [],
          "language": "shell"
        }
      ]
    ],
    [
      "   ./build/bin/smartgrep --help           # show help",
      [
        {
          "term": "   ./build/bin/smartgrep --help           # Show help",
          "type": "string",
          "location": {
            "file": "demo.sh",
            "line": 11,
            "column": 5
          },
          "context": "echo \"   ./build/bin/smartgrep --help           # Show help\"",
          "surroundingLines": [
            "echo \"   ./build/bin/smartgrep --help           # Show help\""
          ],
          "relatedTerms": [],
          "language": "shell"
        }
      ]
    ],
    [
      "   ./build/bin/smartgrep ",
      [
        {
          "term": "   ./build/bin/smartgrep --help           # Show help",
          "type": "string",
          "location": {
            "file": "demo.sh",
            "line": 11,
            "column": 5
          },
          "context": "echo \"   ./build/bin/smartgrep --help           # Show help\"",
          "surroundingLines": [
            "echo \"   ./build/bin/smartgrep --help           # Show help\""
          ],
          "relatedTerms": [],
          "language": "shell"
        },
        {
          "term": "   ./build/bin/smartgrep --tui            # Interactive TUI mode",
          "type": "string",
          "location": {
            "file": "demo.sh",
            "line": 13,
            "column": 5
          },
          "context": "echo \"   ./build/bin/smartgrep --tui            # Interactive TUI mode\"",
          "surroundingLines": [
            "echo \"   ./build/bin/smartgrep --tui            # Interactive TUI mode\""
          ],
          "relatedTerms": [],
          "language": "shell"
        }
      ]
    ],
    [
      "help           # show help",
      [
        {
          "term": "   ./build/bin/smartgrep --help           # Show help",
          "type": "string",
          "location": {
            "file": "demo.sh",
            "line": 11,
            "column": 5
          },
          "context": "echo \"   ./build/bin/smartgrep --help           # Show help\"",
          "surroundingLines": [
            "echo \"   ./build/bin/smartgrep --help           # Show help\""
          ],
          "relatedTerms": [],
          "language": "shell"
        }
      ]
    ],
    [
      "   ./build/bin/smartgrep 'auth'           # cli mode (fast for claude)",
      [
        {
          "term": "   ./build/bin/smartgrep 'auth'           # CLI mode (fast for Claude)",
          "type": "string",
          "location": {
            "file": "demo.sh",
            "line": 12,
            "column": 5
          },
          "context": "echo \"   ./build/bin/smartgrep 'auth'           # CLI mode (fast for Claude)\"",
          "surroundingLines": [
            "echo \"   ./build/bin/smartgrep 'auth'           # CLI mode (fast for Claude)\""
          ],
          "relatedTerms": [],
          "language": "shell"
        }
      ]
    ],
    [
      "auth",
      [
        {
          "term": "auth",
          "type": "string",
          "location": {
            "file": "demo.sh",
            "line": 12,
            "column": 31
          },
          "context": "echo \"   ./build/bin/smartgrep 'auth'           # CLI mode (fast for Claude)\"",
          "surroundingLines": [
            "echo \"   ./build/bin/smartgrep 'auth'           # CLI mode (fast for Claude)\""
          ],
          "relatedTerms": [],
          "language": "shell"
        }
      ]
    ],
    [
      "   ./build/bin/smartgrep --tui            # interactive tui mode",
      [
        {
          "term": "   ./build/bin/smartgrep --tui            # Interactive TUI mode",
          "type": "string",
          "location": {
            "file": "demo.sh",
            "line": 13,
            "column": 5
          },
          "context": "echo \"   ./build/bin/smartgrep --tui            # Interactive TUI mode\"",
          "surroundingLines": [
            "echo \"   ./build/bin/smartgrep --tui            # Interactive TUI mode\""
          ],
          "relatedTerms": [],
          "language": "shell"
        }
      ]
    ],
    [
      "tui            # interactive tui mode",
      [
        {
          "term": "   ./build/bin/smartgrep --tui            # Interactive TUI mode",
          "type": "string",
          "location": {
            "file": "demo.sh",
            "line": 13,
            "column": 5
          },
          "context": "echo \"   ./build/bin/smartgrep --tui            # Interactive TUI mode\"",
          "surroundingLines": [
            "echo \"   ./build/bin/smartgrep --tui            # Interactive TUI mode\""
          ],
          "relatedTerms": [],
          "language": "shell"
        }
      ]
    ],
    [
      "2. curator (ai assistant):",
      [
        {
          "term": "2. Curator (AI Assistant):",
          "type": "string",
          "location": {
            "file": "demo.sh",
            "line": 15,
            "column": 5
          },
          "context": "echo \"2. Curator (AI Assistant):\"",
          "surroundingLines": [
            "echo \"2. Curator (AI Assistant):\""
          ],
          "relatedTerms": [],
          "language": "shell"
        }
      ]
    ],
    [
      "   ./build/bin/curator overview .         # cli mode",
      [
        {
          "term": "   ./build/bin/curator overview .         # CLI mode",
          "type": "string",
          "location": {
            "file": "demo.sh",
            "line": 16,
            "column": 5
          },
          "context": "echo \"   ./build/bin/curator overview .         # CLI mode\"",
          "surroundingLines": [
            "echo \"   ./build/bin/curator overview .         # CLI mode\""
          ],
          "relatedTerms": [],
          "language": "shell"
        }
      ]
    ],
    [
      "   ./build/bin/curator --tui              # interactive tui mode",
      [
        {
          "term": "   ./build/bin/curator --tui              # Interactive TUI mode",
          "type": "string",
          "location": {
            "file": "demo.sh",
            "line": 17,
            "column": 5
          },
          "context": "echo \"   ./build/bin/curator --tui              # Interactive TUI mode\"",
          "surroundingLines": [
            "echo \"   ./build/bin/curator --tui              # Interactive TUI mode\""
          ],
          "relatedTerms": [],
          "language": "shell"
        }
      ]
    ],
    [
      "   ./build/bin/curator ",
      [
        {
          "term": "   ./build/bin/curator --tui              # Interactive TUI mode",
          "type": "string",
          "location": {
            "file": "demo.sh",
            "line": 17,
            "column": 5
          },
          "context": "echo \"   ./build/bin/curator --tui              # Interactive TUI mode\"",
          "surroundingLines": [
            "echo \"   ./build/bin/curator --tui              # Interactive TUI mode\""
          ],
          "relatedTerms": [],
          "language": "shell"
        }
      ]
    ],
    [
      "tui              # interactive tui mode",
      [
        {
          "term": "   ./build/bin/curator --tui              # Interactive TUI mode",
          "type": "string",
          "location": {
            "file": "demo.sh",
            "line": 17,
            "column": 5
          },
          "context": "echo \"   ./build/bin/curator --tui              # Interactive TUI mode\"",
          "surroundingLines": [
            "echo \"   ./build/bin/curator --tui              # Interactive TUI mode\""
          ],
          "relatedTerms": [],
          "language": "shell"
        }
      ]
    ],
    [
      "   ./build/bin/curator chat --tui         # chat with markdown rendering",
      [
        {
          "term": "   ./build/bin/curator chat --tui         # Chat with markdown rendering",
          "type": "string",
          "location": {
            "file": "demo.sh",
            "line": 18,
            "column": 5
          },
          "context": "echo \"   ./build/bin/curator chat --tui         # Chat with markdown rendering\"",
          "surroundingLines": [
            "echo \"   ./build/bin/curator chat --tui         # Chat with markdown rendering\""
          ],
          "relatedTerms": [],
          "language": "shell"
        }
      ]
    ],
    [
      "   ./build/bin/curator chat ",
      [
        {
          "term": "   ./build/bin/curator chat --tui         # Chat with markdown rendering",
          "type": "string",
          "location": {
            "file": "demo.sh",
            "line": 18,
            "column": 5
          },
          "context": "echo \"   ./build/bin/curator chat --tui         # Chat with markdown rendering\"",
          "surroundingLines": [
            "echo \"   ./build/bin/curator chat --tui         # Chat with markdown rendering\""
          ],
          "relatedTerms": [],
          "language": "shell"
        }
      ]
    ],
    [
      "tui         # chat with markdown rendering",
      [
        {
          "term": "   ./build/bin/curator chat --tui         # Chat with markdown rendering",
          "type": "string",
          "location": {
            "file": "demo.sh",
            "line": 18,
            "column": 5
          },
          "context": "echo \"   ./build/bin/curator chat --tui         # Chat with markdown rendering\"",
          "surroundingLines": [
            "echo \"   ./build/bin/curator chat --tui         # Chat with markdown rendering\""
          ],
          "relatedTerms": [],
          "language": "shell"
        }
      ]
    ],
    [
      "3. monitor (live dashboard):",
      [
        {
          "term": "3. Monitor (Live Dashboard):",
          "type": "string",
          "location": {
            "file": "demo.sh",
            "line": 20,
            "column": 5
          },
          "context": "echo \"3. Monitor (Live Dashboard):\"",
          "surroundingLines": [
            "echo \"3. Monitor (Live Dashboard):\""
          ],
          "relatedTerms": [],
          "language": "shell"
        }
      ]
    ],
    [
      "   ./build/bin/monitor status             # cli mode",
      [
        {
          "term": "   ./build/bin/monitor status             # CLI mode",
          "type": "string",
          "location": {
            "file": "demo.sh",
            "line": 21,
            "column": 5
          },
          "context": "echo \"   ./build/bin/monitor status             # CLI mode\"",
          "surroundingLines": [
            "echo \"   ./build/bin/monitor status             # CLI mode\""
          ],
          "relatedTerms": [],
          "language": "shell"
        }
      ]
    ],
    [
      "   ./build/bin/monitor --tui              # interactive dashboard",
      [
        {
          "term": "   ./build/bin/monitor --tui              # Interactive dashboard",
          "type": "string",
          "location": {
            "file": "demo.sh",
            "line": 22,
            "column": 5
          },
          "context": "echo \"   ./build/bin/monitor --tui              # Interactive dashboard\"",
          "surroundingLines": [
            "echo \"   ./build/bin/monitor --tui              # Interactive dashboard\""
          ],
          "relatedTerms": [],
          "language": "shell"
        }
      ]
    ],
    [
      "   ./build/bin/monitor ",
      [
        {
          "term": "   ./build/bin/monitor --tui              # Interactive dashboard",
          "type": "string",
          "location": {
            "file": "demo.sh",
            "line": 22,
            "column": 5
          },
          "context": "echo \"   ./build/bin/monitor --tui              # Interactive dashboard\"",
          "surroundingLines": [
            "echo \"   ./build/bin/monitor --tui              # Interactive dashboard\""
          ],
          "relatedTerms": [],
          "language": "shell"
        }
      ]
    ],
    [
      "tui              # interactive dashboard",
      [
        {
          "term": "   ./build/bin/monitor --tui              # Interactive dashboard",
          "type": "string",
          "location": {
            "file": "demo.sh",
            "line": 22,
            "column": 5
          },
          "context": "echo \"   ./build/bin/monitor --tui              # Interactive dashboard\"",
          "surroundingLines": [
            "echo \"   ./build/bin/monitor --tui              # Interactive dashboard\""
          ],
          "relatedTerms": [],
          "language": "shell"
        }
      ]
    ],
    [
      "   ./build/bin/monitor watch --tui        # live monitoring",
      [
        {
          "term": "   ./build/bin/monitor watch --tui        # Live monitoring",
          "type": "string",
          "location": {
            "file": "demo.sh",
            "line": 23,
            "column": 5
          },
          "context": "echo \"   ./build/bin/monitor watch --tui        # Live monitoring\"",
          "surroundingLines": [
            "echo \"   ./build/bin/monitor watch --tui        # Live monitoring\""
          ],
          "relatedTerms": [],
          "language": "shell"
        }
      ]
    ],
    [
      "   ./build/bin/monitor watch ",
      [
        {
          "term": "   ./build/bin/monitor watch --tui        # Live monitoring",
          "type": "string",
          "location": {
            "file": "demo.sh",
            "line": 23,
            "column": 5
          },
          "context": "echo \"   ./build/bin/monitor watch --tui        # Live monitoring\"",
          "surroundingLines": [
            "echo \"   ./build/bin/monitor watch --tui        # Live monitoring\""
          ],
          "relatedTerms": [],
          "language": "shell"
        }
      ]
    ],
    [
      "tui        # live monitoring",
      [
        {
          "term": "   ./build/bin/monitor watch --tui        # Live monitoring",
          "type": "string",
          "location": {
            "file": "demo.sh",
            "line": 23,
            "column": 5
          },
          "context": "echo \"   ./build/bin/monitor watch --tui        # Live monitoring\"",
          "surroundingLines": [
            "echo \"   ./build/bin/monitor watch --tui        # Live monitoring\""
          ],
          "relatedTerms": [],
          "language": "shell"
        }
      ]
    ],
    [
      "key features:",
      [
        {
          "term": "Key features:",
          "type": "string",
          "location": {
            "file": "demo.sh",
            "line": 25,
            "column": 5
          },
          "context": "echo \"Key features:\"",
          "surroundingLines": [
            "echo \"Key features:\""
          ],
          "relatedTerms": [],
          "language": "shell"
        }
      ]
    ],
    [
      "- ✅ cli mode by default (claude-optimized)",
      [
        {
          "term": "- ✅ CLI mode by default (Claude-optimized)",
          "type": "string",
          "location": {
            "file": "demo.sh",
            "line": 26,
            "column": 5
          },
          "context": "echo \"- ✅ CLI mode by default (Claude-optimized)\"",
          "surroundingLines": [
            "echo \"- ✅ CLI mode by default (Claude-optimized)\""
          ],
          "relatedTerms": [],
          "language": "shell"
        }
      ]
    ],
    [
      " ✅ cli mode by default (claude",
      [
        {
          "term": "- ✅ CLI mode by default (Claude-optimized)",
          "type": "string",
          "location": {
            "file": "demo.sh",
            "line": 26,
            "column": 5
          },
          "context": "echo \"- ✅ CLI mode by default (Claude-optimized)\"",
          "surroundingLines": [
            "echo \"- ✅ CLI mode by default (Claude-optimized)\""
          ],
          "relatedTerms": [],
          "language": "shell"
        }
      ]
    ],
    [
      "optimized)",
      [
        {
          "term": "- ✅ CLI mode by default (Claude-optimized)",
          "type": "string",
          "location": {
            "file": "demo.sh",
            "line": 26,
            "column": 5
          },
          "context": "echo \"- ✅ CLI mode by default (Claude-optimized)\"",
          "surroundingLines": [
            "echo \"- ✅ CLI mode by default (Claude-optimized)\""
          ],
          "relatedTerms": [],
          "language": "shell"
        }
      ]
    ],
    [
      "- ✅ optional --tui flag for interactive mode",
      [
        {
          "term": "- ✅ Optional --tui flag for interactive mode",
          "type": "string",
          "location": {
            "file": "demo.sh",
            "line": 27,
            "column": 5
          },
          "context": "echo \"- ✅ Optional --tui flag for interactive mode\"",
          "surroundingLines": [
            "echo \"- ✅ Optional --tui flag for interactive mode\""
          ],
          "relatedTerms": [],
          "language": "shell"
        }
      ]
    ],
    [
      " ✅ optional ",
      [
        {
          "term": "- ✅ Optional --tui flag for interactive mode",
          "type": "string",
          "location": {
            "file": "demo.sh",
            "line": 27,
            "column": 5
          },
          "context": "echo \"- ✅ Optional --tui flag for interactive mode\"",
          "surroundingLines": [
            "echo \"- ✅ Optional --tui flag for interactive mode\""
          ],
          "relatedTerms": [],
          "language": "shell"
        }
      ]
    ],
    [
      "tui flag for interactive mode",
      [
        {
          "term": "- ✅ Optional --tui flag for interactive mode",
          "type": "string",
          "location": {
            "file": "demo.sh",
            "line": 27,
            "column": 5
          },
          "context": "echo \"- ✅ Optional --tui flag for interactive mode\"",
          "surroundingLines": [
            "echo \"- ✅ Optional --tui flag for interactive mode\""
          ],
          "relatedTerms": [],
          "language": "shell"
        }
      ]
    ],
    [
      "- ✅ beautiful rendering with charm libraries",
      [
        {
          "term": "- ✅ Beautiful rendering with Charm libraries",
          "type": "string",
          "location": {
            "file": "demo.sh",
            "line": 28,
            "column": 5
          },
          "context": "echo \"- ✅ Beautiful rendering with Charm libraries\"",
          "surroundingLines": [
            "echo \"- ✅ Beautiful rendering with Charm libraries\""
          ],
          "relatedTerms": [],
          "language": "shell"
        }
      ]
    ],
    [
      " ✅ beautiful rendering with charm libraries",
      [
        {
          "term": "- ✅ Beautiful rendering with Charm libraries",
          "type": "string",
          "location": {
            "file": "demo.sh",
            "line": 28,
            "column": 5
          },
          "context": "echo \"- ✅ Beautiful rendering with Charm libraries\"",
          "surroundingLines": [
            "echo \"- ✅ Beautiful rendering with Charm libraries\""
          ],
          "relatedTerms": [],
          "language": "shell"
        }
      ]
    ],
    [
      "- ✅ markdown support in curator",
      [
        {
          "term": "- ✅ Markdown support in Curator",
          "type": "string",
          "location": {
            "file": "demo.sh",
            "line": 29,
            "column": 5
          },
          "context": "echo \"- ✅ Markdown support in Curator\"",
          "surroundingLines": [
            "echo \"- ✅ Markdown support in Curator\""
          ],
          "relatedTerms": [],
          "language": "shell"
        }
      ]
    ],
    [
      " ✅ markdown support in curator",
      [
        {
          "term": "- ✅ Markdown support in Curator",
          "type": "string",
          "location": {
            "file": "demo.sh",
            "line": 29,
            "column": 5
          },
          "context": "echo \"- ✅ Markdown support in Curator\"",
          "surroundingLines": [
            "echo \"- ✅ Markdown support in Curator\""
          ],
          "relatedTerms": [],
          "language": "shell"
        }
      ]
    ],
    [
      "- ✅ real-time updates in monitor",
      [
        {
          "term": "- ✅ Real-time updates in Monitor",
          "type": "string",
          "location": {
            "file": "demo.sh",
            "line": 30,
            "column": 5
          },
          "context": "echo \"- ✅ Real-time updates in Monitor\"",
          "surroundingLines": [
            "echo \"- ✅ Real-time updates in Monitor\""
          ],
          "relatedTerms": [],
          "language": "shell"
        }
      ]
    ],
    [
      " ✅ real",
      [
        {
          "term": "- ✅ Real-time updates in Monitor",
          "type": "string",
          "location": {
            "file": "demo.sh",
            "line": 30,
            "column": 5
          },
          "context": "echo \"- ✅ Real-time updates in Monitor\"",
          "surroundingLines": [
            "echo \"- ✅ Real-time updates in Monitor\""
          ],
          "relatedTerms": [],
          "language": "shell"
        }
      ]
    ],
    [
      "time updates in monitor",
      [
        {
          "term": "- ✅ Real-time updates in Monitor",
          "type": "string",
          "location": {
            "file": "demo.sh",
            "line": 30,
            "column": 5
          },
          "context": "echo \"- ✅ Real-time updates in Monitor\"",
          "surroundingLines": [
            "echo \"- ✅ Real-time updates in Monitor\""
          ],
          "relatedTerms": [],
          "language": "shell"
        }
      ]
    ],
    [
      "- ✅ clean architecture with cmd/internal separation",
      [
        {
          "term": "- ✅ Clean architecture with cmd/internal separation",
          "type": "string",
          "location": {
            "file": "demo.sh",
            "line": 31,
            "column": 5
          },
          "context": "echo \"- ✅ Clean architecture with cmd/internal separation\"",
          "surroundingLines": [
            "echo \"- ✅ Clean architecture with cmd/internal separation\""
          ],
          "relatedTerms": [],
          "language": "shell"
        }
      ]
    ],
    [
      " ✅ clean architecture with cmd/internal separation",
      [
        {
          "term": "- ✅ Clean architecture with cmd/internal separation",
          "type": "string",
          "location": {
            "file": "demo.sh",
            "line": 31,
            "column": 5
          },
          "context": "echo \"- ✅ Clean architecture with cmd/internal separation\"",
          "surroundingLines": [
            "echo \"- ✅ Clean architecture with cmd/internal separation\""
          ],
          "relatedTerms": [],
          "language": "shell"
        }
      ]
    ],
    [
      "try it out:",
      [
        {
          "term": "Try it out:",
          "type": "string",
          "location": {
            "file": "demo.sh",
            "line": 33,
            "column": 5
          },
          "context": "echo \"Try it out:\"",
          "surroundingLines": [
            "echo \"Try it out:\""
          ],
          "relatedTerms": [],
          "language": "shell"
        }
      ]
    ],
    [
      "  cd charm-tui",
      [
        {
          "term": "  cd charm-tui",
          "type": "string",
          "location": {
            "file": "demo.sh",
            "line": 34,
            "column": 5
          },
          "context": "echo \"  cd charm-tui\"",
          "surroundingLines": [
            "echo \"  cd charm-tui\""
          ],
          "relatedTerms": [],
          "language": "shell"
        }
      ]
    ],
    [
      "  cd charm",
      [
        {
          "term": "  cd charm-tui",
          "type": "string",
          "location": {
            "file": "demo.sh",
            "line": 34,
            "column": 5
          },
          "context": "echo \"  cd charm-tui\"",
          "surroundingLines": [
            "echo \"  cd charm-tui\""
          ],
          "relatedTerms": [],
          "language": "shell"
        }
      ]
    ],
    [
      "tui",
      [
        {
          "term": "  cd charm-tui",
          "type": "string",
          "location": {
            "file": "demo.sh",
            "line": 34,
            "column": 5
          },
          "context": "echo \"  cd charm-tui\"",
          "surroundingLines": [
            "echo \"  cd charm-tui\""
          ],
          "relatedTerms": [],
          "language": "shell"
        },
        {
          "term": "  ./build/bin/smartgrep --tui",
          "type": "string",
          "location": {
            "file": "demo.sh",
            "line": 35,
            "column": 5
          },
          "context": "echo \"  ./build/bin/smartgrep --tui\"",
          "surroundingLines": [
            "echo \"  ./build/bin/smartgrep --tui\""
          ],
          "relatedTerms": [],
          "language": "shell"
        }
      ]
    ],
    [
      "  ./build/bin/smartgrep --tui",
      [
        {
          "term": "  ./build/bin/smartgrep --tui",
          "type": "string",
          "location": {
            "file": "demo.sh",
            "line": 35,
            "column": 5
          },
          "context": "echo \"  ./build/bin/smartgrep --tui\"",
          "surroundingLines": [
            "echo \"  ./build/bin/smartgrep --tui\""
          ],
          "relatedTerms": [],
          "language": "shell"
        }
      ]
    ],
    [
      "  ./build/bin/smartgrep ",
      [
        {
          "term": "  ./build/bin/smartgrep --tui",
          "type": "string",
          "location": {
            "file": "demo.sh",
            "line": 35,
            "column": 5
          },
          "context": "echo \"  ./build/bin/smartgrep --tui\"",
          "surroundingLines": [
            "echo \"  ./build/bin/smartgrep --tui\""
          ],
          "relatedTerms": [],
          "language": "shell"
        }
      ]
    ],
    [
      "build output directory",
      [
        {
          "term": "Build output directory",
          "type": "comment",
          "location": {
            "file": "Makefile",
            "line": 3,
            "column": 0
          },
          "context": "# Build output directory",
          "surroundingLines": [
            "# Build output directory"
          ],
          "relatedTerms": [],
          "language": "shell"
        }
      ]
    ],
    [
      "binary names",
      [
        {
          "term": "Binary names",
          "type": "comment",
          "location": {
            "file": "Makefile",
            "line": 7,
            "column": 0
          },
          "context": "# Binary names",
          "surroundingLines": [
            "# Binary names"
          ],
          "relatedTerms": [],
          "language": "shell"
        }
      ]
    ],
    [
      "default target",
      [
        {
          "term": "Default target",
          "type": "comment",
          "location": {
            "file": "Makefile",
            "line": 12,
            "column": 0
          },
          "context": "# Default target",
          "surroundingLines": [
            "# Default target"
          ],
          "relatedTerms": [],
          "language": "shell"
        }
      ]
    ],
    [
      "create directories",
      [
        {
          "term": "Create directories",
          "type": "comment",
          "location": {
            "file": "Makefile",
            "line": 15,
            "column": 0
          },
          "context": "# Create directories",
          "surroundingLines": [
            "# Create directories"
          ],
          "relatedTerms": [],
          "language": "shell"
        }
      ]
    ],
    [
      "build all binaries",
      [
        {
          "term": "Build all binaries",
          "type": "comment",
          "location": {
            "file": "Makefile",
            "line": 19,
            "column": 0
          },
          "context": "# Build all binaries",
          "surroundingLines": [
            "# Build all binaries"
          ],
          "relatedTerms": [],
          "language": "shell"
        }
      ]
    ],
    [
      "build individual binaries",
      [
        {
          "term": "Build individual binaries",
          "type": "comment",
          "location": {
            "file": "Makefile",
            "line": 22,
            "column": 0
          },
          "context": "# Build individual binaries",
          "surroundingLines": [
            "# Build individual binaries"
          ],
          "relatedTerms": [],
          "language": "shell"
        }
      ]
    ],
    [
      "install binaries to system",
      [
        {
          "term": "Install binaries to system",
          "type": "comment",
          "location": {
            "file": "Makefile",
            "line": 32,
            "column": 0
          },
          "context": "# Install binaries to system",
          "surroundingLines": [
            "# Install binaries to system"
          ],
          "relatedTerms": [],
          "language": "shell"
        }
      ]
    ],
    [
      "installing charm tui binaries...",
      [
        {
          "term": "Installing charm TUI binaries...",
          "type": "string",
          "location": {
            "file": "Makefile",
            "line": 34,
            "column": 7
          },
          "context": "@echo \"Installing charm TUI binaries...\"",
          "surroundingLines": [
            "@echo \"Installing charm TUI binaries...\""
          ],
          "relatedTerms": [],
          "language": "shell"
        }
      ]
    ],
    [
      "✅ installation complete!",
      [
        {
          "term": "✅ Installation complete!",
          "type": "string",
          "location": {
            "file": "Makefile",
            "line": 38,
            "column": 7
          },
          "context": "@echo \"✅ Installation complete!\"",
          "surroundingLines": [
            "@echo \"✅ Installation complete!\""
          ],
          "relatedTerms": [],
          "language": "shell"
        }
      ]
    ],
    [
      "you can now use:",
      [
        {
          "term": "You can now use:",
          "type": "string",
          "location": {
            "file": "Makefile",
            "line": 40,
            "column": 7
          },
          "context": "@echo \"You can now use:\"",
          "surroundingLines": [
            "@echo \"You can now use:\""
          ],
          "relatedTerms": [],
          "language": "shell"
        }
      ]
    ],
    [
      "  smartgrep-tui --tui    # interactive semantic search",
      [
        {
          "term": "  smartgrep-tui --tui    # Interactive semantic search",
          "type": "string",
          "location": {
            "file": "Makefile",
            "line": 41,
            "column": 7
          },
          "context": "@echo \"  smartgrep-tui --tui    # Interactive semantic search\"",
          "surroundingLines": [
            "@echo \"  smartgrep-tui --tui    # Interactive semantic search\""
          ],
          "relatedTerms": [],
          "language": "shell"
        }
      ]
    ],
    [
      "  smartgrep",
      [
        {
          "term": "  smartgrep-tui --tui    # Interactive semantic search",
          "type": "string",
          "location": {
            "file": "Makefile",
            "line": 41,
            "column": 7
          },
          "context": "@echo \"  smartgrep-tui --tui    # Interactive semantic search\"",
          "surroundingLines": [
            "@echo \"  smartgrep-tui --tui    # Interactive semantic search\""
          ],
          "relatedTerms": [],
          "language": "shell"
        }
      ]
    ],
    [
      "tui ",
      [
        {
          "term": "  smartgrep-tui --tui    # Interactive semantic search",
          "type": "string",
          "location": {
            "file": "Makefile",
            "line": 41,
            "column": 7
          },
          "context": "@echo \"  smartgrep-tui --tui    # Interactive semantic search\"",
          "surroundingLines": [
            "@echo \"  smartgrep-tui --tui    # Interactive semantic search\""
          ],
          "relatedTerms": [],
          "language": "shell"
        },
        {
          "term": "  curator-tui --tui      # Interactive AI assistant",
          "type": "string",
          "location": {
            "file": "Makefile",
            "line": 42,
            "column": 7
          },
          "context": "@echo \"  curator-tui --tui      # Interactive AI assistant\"",
          "surroundingLines": [
            "@echo \"  curator-tui --tui      # Interactive AI assistant\""
          ],
          "relatedTerms": [],
          "language": "shell"
        },
        {
          "term": "  monitor-tui --tui      # Interactive monitoring",
          "type": "string",
          "location": {
            "file": "Makefile",
            "line": 43,
            "column": 7
          },
          "context": "@echo \"  monitor-tui --tui      # Interactive monitoring\"",
          "surroundingLines": [
            "@echo \"  monitor-tui --tui      # Interactive monitoring\""
          ],
          "relatedTerms": [],
          "language": "shell"
        }
      ]
    ],
    [
      "tui    # interactive semantic search",
      [
        {
          "term": "  smartgrep-tui --tui    # Interactive semantic search",
          "type": "string",
          "location": {
            "file": "Makefile",
            "line": 41,
            "column": 7
          },
          "context": "@echo \"  smartgrep-tui --tui    # Interactive semantic search\"",
          "surroundingLines": [
            "@echo \"  smartgrep-tui --tui    # Interactive semantic search\""
          ],
          "relatedTerms": [],
          "language": "shell"
        }
      ]
    ],
    [
      "  curator-tui --tui      # interactive ai assistant",
      [
        {
          "term": "  curator-tui --tui      # Interactive AI assistant",
          "type": "string",
          "location": {
            "file": "Makefile",
            "line": 42,
            "column": 7
          },
          "context": "@echo \"  curator-tui --tui      # Interactive AI assistant\"",
          "surroundingLines": [
            "@echo \"  curator-tui --tui      # Interactive AI assistant\""
          ],
          "relatedTerms": [],
          "language": "shell"
        }
      ]
    ],
    [
      "  curator",
      [
        {
          "term": "  curator-tui --tui      # Interactive AI assistant",
          "type": "string",
          "location": {
            "file": "Makefile",
            "line": 42,
            "column": 7
          },
          "context": "@echo \"  curator-tui --tui      # Interactive AI assistant\"",
          "surroundingLines": [
            "@echo \"  curator-tui --tui      # Interactive AI assistant\""
          ],
          "relatedTerms": [],
          "language": "shell"
        }
      ]
    ],
    [
      "tui      # interactive ai assistant",
      [
        {
          "term": "  curator-tui --tui      # Interactive AI assistant",
          "type": "string",
          "location": {
            "file": "Makefile",
            "line": 42,
            "column": 7
          },
          "context": "@echo \"  curator-tui --tui      # Interactive AI assistant\"",
          "surroundingLines": [
            "@echo \"  curator-tui --tui      # Interactive AI assistant\""
          ],
          "relatedTerms": [],
          "language": "shell"
        }
      ]
    ],
    [
      "  monitor-tui --tui      # interactive monitoring",
      [
        {
          "term": "  monitor-tui --tui      # Interactive monitoring",
          "type": "string",
          "location": {
            "file": "Makefile",
            "line": 43,
            "column": 7
          },
          "context": "@echo \"  monitor-tui --tui      # Interactive monitoring\"",
          "surroundingLines": [
            "@echo \"  monitor-tui --tui      # Interactive monitoring\""
          ],
          "relatedTerms": [],
          "language": "shell"
        }
      ]
    ],
    [
      "  monitor",
      [
        {
          "term": "  monitor-tui --tui      # Interactive monitoring",
          "type": "string",
          "location": {
            "file": "Makefile",
            "line": 43,
            "column": 7
          },
          "context": "@echo \"  monitor-tui --tui      # Interactive monitoring\"",
          "surroundingLines": [
            "@echo \"  monitor-tui --tui      # Interactive monitoring\""
          ],
          "relatedTerms": [],
          "language": "shell"
        }
      ]
    ],
    [
      "tui      # interactive monitoring",
      [
        {
          "term": "  monitor-tui --tui      # Interactive monitoring",
          "type": "string",
          "location": {
            "file": "Makefile",
            "line": 43,
            "column": 7
          },
          "context": "@echo \"  monitor-tui --tui      # Interactive monitoring\"",
          "surroundingLines": [
            "@echo \"  monitor-tui --tui      # Interactive monitoring\""
          ],
          "relatedTerms": [],
          "language": "shell"
        }
      ]
    ],
    [
      "run tests",
      [
        {
          "term": "Run tests",
          "type": "comment",
          "location": {
            "file": "Makefile",
            "line": 45,
            "column": 0
          },
          "context": "# Run tests",
          "surroundingLines": [
            "# Run tests"
          ],
          "relatedTerms": [],
          "language": "shell"
        }
      ]
    ],
    [
      "clean build artifacts",
      [
        {
          "term": "Clean build artifacts",
          "type": "comment",
          "location": {
            "file": "Makefile",
            "line": 49,
            "column": 0
          },
          "context": "# Clean build artifacts",
          "surroundingLines": [
            "# Clean build artifacts"
          ],
          "relatedTerms": [],
          "language": "shell"
        }
      ]
    ],
    [
      "development shortcuts",
      [
        {
          "term": "Development shortcuts",
          "type": "comment",
          "location": {
            "file": "Makefile",
            "line": 53,
            "column": 0
          },
          "context": "# Development shortcuts",
          "surroundingLines": [
            "# Development shortcuts"
          ],
          "relatedTerms": [],
          "language": "shell"
        }
      ]
    ],
    [
      "download dependencies",
      [
        {
          "term": "Download dependencies",
          "type": "comment",
          "location": {
            "file": "Makefile",
            "line": 63,
            "column": 0
          },
          "context": "# Download dependencies",
          "surroundingLines": [
            "# Download dependencies"
          ],
          "relatedTerms": [],
          "language": "shell"
        }
      ]
    ],
    [
      "update dependencies",
      [
        {
          "term": "Update dependencies",
          "type": "comment",
          "location": {
            "file": "Makefile",
            "line": 68,
            "column": 0
          },
          "context": "# Update dependencies",
          "surroundingLines": [
            "# Update dependencies"
          ],
          "relatedTerms": [],
          "language": "shell"
        }
      ]
    ],
    [
      "curator",
      [
        {
          "term": "curator",
          "type": "module",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 1,
            "column": 0
          },
          "context": "package curator",
          "surroundingLines": [
            "package curator"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "CURATOR_CLI_PATH",
          "type": "string",
          "location": {
            "file": "internal/config/config.go",
            "line": 40,
            "column": 22
          },
          "context": "if path := os.Getenv(\"CURATOR_CLI_PATH\"); path != \"\" {",
          "surroundingLines": [
            "if path := os.Getenv(\"CURATOR_CLI_PATH\"); path != \"\" {"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "curator-cli",
          "type": "string",
          "location": {
            "file": "internal/config/config.go",
            "line": 49,
            "column": 62
          },
          "context": "filepath.Join(dir, \"..\", \"..\", \"..\", \"..\", \"src\", \"tools\", \"curator-cli\", \"cli.ts\"),",
          "surroundingLines": [
            "filepath.Join(dir, \"..\", \"..\", \"..\", \"..\", \"src\", \"tools\", \"curator-cli\", \"cli.ts\"),"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "curator-cli",
          "type": "string",
          "location": {
            "file": "internal/config/config.go",
            "line": 50,
            "column": 50
          },
          "context": "filepath.Join(dir, \"..\", \"..\", \"src\", \"tools\", \"curator-cli\", \"cli.ts\"),",
          "surroundingLines": [
            "filepath.Join(dir, \"..\", \"..\", \"src\", \"tools\", \"curator-cli\", \"cli.ts\"),"
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "os/exec",
      [
        {
          "term": "os/exec",
          "type": "string",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 6,
            "column": 1
          },
          "context": "\"os/exec\"",
          "surroundingLines": [
            "\"os/exec\""
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "os/exec",
          "type": "string",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 5,
            "column": 1
          },
          "context": "\"os/exec\"",
          "surroundingLines": [
            "\"os/exec\""
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "os/exec",
          "type": "string",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 5,
            "column": 1
          },
          "context": "\"os/exec\"",
          "surroundingLines": [
            "\"os/exec\""
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "os/exec",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 6,
            "column": 1
          },
          "context": "\"os/exec\"",
          "surroundingLines": [
            "\"os/exec\""
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "os/exec",
          "type": "string",
          "location": {
            "file": "cmd/monitor/main.go",
            "line": 6,
            "column": 1
          },
          "context": "\"os/exec\"",
          "surroundingLines": [
            "\"os/exec\""
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "os/exec",
          "type": "string",
          "location": {
            "file": "cmd/smartgrep/main.go",
            "line": 6,
            "column": 1
          },
          "context": "\"os/exec\"",
          "surroundingLines": [
            "\"os/exec\""
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "github.com/charmbracelet/bubbles/spinner",
      [
        {
          "term": "github.com/charmbracelet/bubbles/spinner",
          "type": "string",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 9,
            "column": 1
          },
          "context": "\"github.com/charmbracelet/bubbles/spinner\"",
          "surroundingLines": [
            "\"github.com/charmbracelet/bubbles/spinner\""
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "github.com/charmbracelet/bubbles/textarea",
      [
        {
          "term": "github.com/charmbracelet/bubbles/textarea",
          "type": "string",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 10,
            "column": 1
          },
          "context": "\"github.com/charmbracelet/bubbles/textarea\"",
          "surroundingLines": [
            "\"github.com/charmbracelet/bubbles/textarea\""
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "github.com/charmbracelet/bubbles/viewport",
      [
        {
          "term": "github.com/charmbracelet/bubbles/viewport",
          "type": "string",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 11,
            "column": 1
          },
          "context": "\"github.com/charmbracelet/bubbles/viewport\"",
          "surroundingLines": [
            "\"github.com/charmbracelet/bubbles/viewport\""
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "github.com/charmbracelet/bubbles/viewport",
          "type": "string",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 10,
            "column": 1
          },
          "context": "\"github.com/charmbracelet/bubbles/viewport\"",
          "surroundingLines": [
            "\"github.com/charmbracelet/bubbles/viewport\""
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "github.com/charmbracelet/bubbletea",
      [
        {
          "term": "github.com/charmbracelet/bubbletea",
          "type": "string",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 12,
            "column": 5
          },
          "context": "tea \"github.com/charmbracelet/bubbletea\"",
          "surroundingLines": [
            "tea \"github.com/charmbracelet/bubbletea\""
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "github.com/charmbracelet/bubbletea",
          "type": "string",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 10,
            "column": 5
          },
          "context": "tea \"github.com/charmbracelet/bubbletea\"",
          "surroundingLines": [
            "tea \"github.com/charmbracelet/bubbletea\""
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "github.com/charmbracelet/bubbletea",
          "type": "string",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 11,
            "column": 5
          },
          "context": "tea \"github.com/charmbracelet/bubbletea\"",
          "surroundingLines": [
            "tea \"github.com/charmbracelet/bubbletea\""
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "github.com/charmbracelet/glamour",
      [
        {
          "term": "github.com/charmbracelet/glamour",
          "type": "string",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 13,
            "column": 1
          },
          "context": "\"github.com/charmbracelet/glamour\"",
          "surroundingLines": [
            "\"github.com/charmbracelet/glamour\""
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "github.com/charmbracelet/lipgloss",
      [
        {
          "term": "github.com/charmbracelet/lipgloss",
          "type": "string",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 14,
            "column": 1
          },
          "context": "\"github.com/charmbracelet/lipgloss\"",
          "surroundingLines": [
            "\"github.com/charmbracelet/lipgloss\""
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "github.com/charmbracelet/lipgloss",
          "type": "string",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 11,
            "column": 1
          },
          "context": "\"github.com/charmbracelet/lipgloss\"",
          "surroundingLines": [
            "\"github.com/charmbracelet/lipgloss\""
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "github.com/charmbracelet/lipgloss",
          "type": "string",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 12,
            "column": 1
          },
          "context": "\"github.com/charmbracelet/lipgloss\"",
          "surroundingLines": [
            "\"github.com/charmbracelet/lipgloss\""
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "responsemsg",
      [
        {
          "term": "responseMsg",
          "type": "class",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 46,
            "column": 0
          },
          "context": "type responseMsg struct {",
          "surroundingLines": [
            "",
            "// Messages",
            "type responseMsg struct {",
            "content string",
            "isError bool"
          ],
          "relatedTerms": [
            "responseMsg"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "responsemsg.content",
      [
        {
          "term": "responseMsg.content",
          "type": "variable",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 47,
            "column": 0
          },
          "context": "content string",
          "surroundingLines": [
            "content string"
          ],
          "relatedTerms": [
            "string"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "responsemsg.iserror",
      [
        {
          "term": "responseMsg.isError",
          "type": "variable",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 48,
            "column": 0
          },
          "context": "isError bool",
          "surroundingLines": [
            "isError bool"
          ],
          "relatedTerms": [
            "bool"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "model",
      [
        {
          "term": "model",
          "type": "class",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 52,
            "column": 0
          },
          "context": "type model struct {",
          "surroundingLines": [
            "",
            "// Model",
            "type model struct {",
            "mode        string",
            "projectPath string"
          ],
          "relatedTerms": [
            "model"
          ],
          "language": "go"
        },
        {
          "term": "model",
          "type": "class",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 73,
            "column": 0
          },
          "context": "type model struct {",
          "surroundingLines": [
            "",
            "// Main model",
            "type model struct {",
            "mode        string",
            "mainMenu    list.Model"
          ],
          "relatedTerms": [
            "model"
          ],
          "language": "go"
        },
        {
          "term": "model",
          "type": "class",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 54,
            "column": 0
          },
          "context": "type model struct {",
          "surroundingLines": [
            "",
            "// Main model",
            "type model struct {",
            "mode         string",
            "viewport     viewport.Model"
          ],
          "relatedTerms": [
            "model"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "model.mode",
      [
        {
          "term": "model.mode",
          "type": "variable",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 53,
            "column": 0
          },
          "context": "mode        string",
          "surroundingLines": [
            "mode        string"
          ],
          "relatedTerms": [
            "string"
          ],
          "language": "go"
        },
        {
          "term": "model.mode",
          "type": "variable",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 74,
            "column": 0
          },
          "context": "mode        string",
          "surroundingLines": [
            "mode        string"
          ],
          "relatedTerms": [
            "string"
          ],
          "language": "go"
        },
        {
          "term": "model.mode",
          "type": "variable",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 55,
            "column": 0
          },
          "context": "mode         string",
          "surroundingLines": [
            "mode         string"
          ],
          "relatedTerms": [
            "string"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "model.projectpath",
      [
        {
          "term": "model.projectPath",
          "type": "variable",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 54,
            "column": 0
          },
          "context": "projectPath string",
          "surroundingLines": [
            "projectPath string"
          ],
          "relatedTerms": [
            "string"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "model.question",
      [
        {
          "term": "model.question",
          "type": "variable",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 55,
            "column": 0
          },
          "context": "question    string",
          "surroundingLines": [
            "question    string"
          ],
          "relatedTerms": [
            "string"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "model.viewport",
      [
        {
          "term": "model.viewport",
          "type": "variable",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 56,
            "column": 0
          },
          "context": "viewport    viewport.Model",
          "surroundingLines": [
            "viewport    viewport.Model"
          ],
          "relatedTerms": [
            "viewport"
          ],
          "language": "go"
        },
        {
          "term": "model.viewport",
          "type": "variable",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 56,
            "column": 0
          },
          "context": "viewport     viewport.Model",
          "surroundingLines": [
            "viewport     viewport.Model"
          ],
          "relatedTerms": [
            "viewport"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "model.textarea",
      [
        {
          "term": "model.textarea",
          "type": "variable",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 57,
            "column": 0
          },
          "context": "textarea    textarea.Model",
          "surroundingLines": [
            "textarea    textarea.Model"
          ],
          "relatedTerms": [
            "textarea"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "model.spinner",
      [
        {
          "term": "model.spinner",
          "type": "variable",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 58,
            "column": 0
          },
          "context": "spinner     spinner.Model",
          "surroundingLines": [
            "spinner     spinner.Model"
          ],
          "relatedTerms": [
            "spinner"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "model.messages",
      [
        {
          "term": "model.messages",
          "type": "variable",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 59,
            "column": 0
          },
          "context": "messages    []message",
          "surroundingLines": [
            "messages    []message"
          ],
          "relatedTerms": [
            "[]message"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "model.isloading",
      [
        {
          "term": "model.isLoading",
          "type": "variable",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 60,
            "column": 0
          },
          "context": "isLoading   bool",
          "surroundingLines": [
            "isLoading   bool"
          ],
          "relatedTerms": [
            "bool"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "model.width",
      [
        {
          "term": "model.width",
          "type": "variable",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 61,
            "column": 0
          },
          "context": "width       int",
          "surroundingLines": [
            "width       int"
          ],
          "relatedTerms": [
            "int"
          ],
          "language": "go"
        },
        {
          "term": "model.width",
          "type": "variable",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 60,
            "column": 0
          },
          "context": "width        int",
          "surroundingLines": [
            "width        int"
          ],
          "relatedTerms": [
            "int"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "model.height",
      [
        {
          "term": "model.height",
          "type": "variable",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 62,
            "column": 0
          },
          "context": "height      int",
          "surroundingLines": [
            "height      int"
          ],
          "relatedTerms": [
            "int"
          ],
          "language": "go"
        },
        {
          "term": "model.height",
          "type": "variable",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 61,
            "column": 0
          },
          "context": "height       int",
          "surroundingLines": [
            "height       int"
          ],
          "relatedTerms": [
            "int"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "model.err",
      [
        {
          "term": "model.err",
          "type": "variable",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 63,
            "column": 0
          },
          "context": "err         error",
          "surroundingLines": [
            "err         error"
          ],
          "relatedTerms": [
            "error"
          ],
          "language": "go"
        },
        {
          "term": "model.err",
          "type": "variable",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 78,
            "column": 0
          },
          "context": "err         error",
          "surroundingLines": [
            "err         error"
          ],
          "relatedTerms": [
            "error"
          ],
          "language": "go"
        },
        {
          "term": "model.err",
          "type": "variable",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 63,
            "column": 0
          },
          "context": "err          error",
          "surroundingLines": [
            "err          error"
          ],
          "relatedTerms": [
            "error"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "model.renderer",
      [
        {
          "term": "model.renderer",
          "type": "variable",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 64,
            "column": 0
          },
          "context": "renderer    *glamour.TermRenderer",
          "surroundingLines": [
            "renderer    *glamour.TermRenderer"
          ],
          "relatedTerms": [
            "*glamour"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "message",
      [
        {
          "term": "message",
          "type": "class",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 67,
            "column": 0
          },
          "context": "type message struct {",
          "surroundingLines": [
            "}",
            "",
            "type message struct {",
            "role    string // \"user\" or \"curator\"",
            "content string"
          ],
          "relatedTerms": [
            "message"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "message.role",
      [
        {
          "term": "message.role",
          "type": "variable",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 68,
            "column": 0
          },
          "context": "role    string // \"user\" or \"curator\"",
          "surroundingLines": [
            "role    string // \"user\" or \"curator\""
          ],
          "relatedTerms": [
            "string"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "message.content",
      [
        {
          "term": "message.content",
          "type": "variable",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 69,
            "column": 0
          },
          "context": "content string",
          "surroundingLines": [
            "content string"
          ],
          "relatedTerms": [
            "string"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "initialmodel",
      [
        {
          "term": "initialModel",
          "type": "function",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 72,
            "column": 0
          },
          "context": "func initialModel(mode, projectPath string) model {",
          "surroundingLines": [
            "}",
            "",
            "func initialModel(mode, projectPath string) model {",
            "// Create markdown renderer",
            "renderer, _ := glamour.NewTermRenderer("
          ],
          "relatedTerms": [
            "initialModel",
            "mode",
            "projectPath",
            "model"
          ],
          "language": "go"
        },
        {
          "term": "initialModel",
          "type": "function",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 81,
            "column": 0
          },
          "context": "func initialModel() model {",
          "surroundingLines": [
            "}",
            "",
            "func initialModel() model {",
            "// Main menu items",
            "items := []list.Item{"
          ],
          "relatedTerms": [
            "initialModel",
            "model"
          ],
          "language": "go"
        },
        {
          "term": "initialModel",
          "type": "function",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 66,
            "column": 0
          },
          "context": "func initialModel(mode string, showOverview bool) model {",
          "surroundingLines": [
            "}",
            "",
            "func initialModel(mode string, showOverview bool) model {",
            "vp := viewport.New(80, 20)",
            "prog := progress.New(progress.WithDefaultGradient())"
          ],
          "relatedTerms": [
            "initialModel",
            "mode",
            "showOverview",
            "model"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "vp",
      [
        {
          "term": "vp",
          "type": "variable",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 80,
            "column": 0
          },
          "context": "vp := viewport.New(80, 20)",
          "surroundingLines": [
            "",
            "// Create components",
            "vp := viewport.New(80, 20)",
            "ta := textarea.New()",
            "ta.Placeholder = \"Type your message...\""
          ],
          "relatedTerms": [
            "viewport",
            "New"
          ],
          "language": "go"
        },
        {
          "term": "vp",
          "type": "variable",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 67,
            "column": 0
          },
          "context": "vp := viewport.New(80, 20)",
          "surroundingLines": [
            "",
            "func initialModel(mode string, showOverview bool) model {",
            "vp := viewport.New(80, 20)",
            "prog := progress.New(progress.WithDefaultGradient())",
            ""
          ],
          "relatedTerms": [
            "viewport",
            "New"
          ],
          "language": "go"
        },
        {
          "term": "vp",
          "type": "variable",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 312,
            "column": 0
          },
          "context": "vp := viewport.New(80, 30)",
          "surroundingLines": [
            "",
            "// Create a simple pager view",
            "vp := viewport.New(80, 30)",
            "vp.SetContent(string(output))",
            ""
          ],
          "relatedTerms": [
            "viewport",
            "New"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "ta",
      [
        {
          "term": "ta",
          "type": "variable",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 81,
            "column": 0
          },
          "context": "ta := textarea.New()",
          "surroundingLines": [
            "// Create components",
            "vp := viewport.New(80, 20)",
            "ta := textarea.New()",
            "ta.Placeholder = \"Type your message...\"",
            "ta.CharLimit = 500"
          ],
          "relatedTerms": [
            "textarea",
            "New"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "type your message...",
      [
        {
          "term": "Type your message...",
          "type": "string",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 82,
            "column": 18
          },
          "context": "ta.Placeholder = \"Type your message...\"",
          "surroundingLines": [
            "ta.Placeholder = \"Type your message...\""
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "sp",
      [
        {
          "term": "sp",
          "type": "variable",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 89,
            "column": 0
          },
          "context": "sp := spinner.New()",
          "surroundingLines": [
            "ta.ShowLineNumbers = false",
            "",
            "sp := spinner.New()",
            "sp.Spinner = spinner.Dot",
            "sp.Style = lipgloss.NewStyle().Foreground(lipgloss.Color(\"212\"))"
          ],
          "relatedTerms": [
            "spinner",
            "New"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "model.init",
      [
        {
          "term": "model.Init",
          "type": "function",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 104,
            "column": 0
          },
          "context": "func (m model) Init() tea.Cmd {",
          "surroundingLines": [
            "}",
            "",
            "func (m model) Init() tea.Cmd {",
            "return tea.Batch(",
            "m.spinner.Tick,"
          ],
          "relatedTerms": [
            "model",
            "Init",
            "tea",
            "Cmd"
          ],
          "language": "go"
        },
        {
          "term": "model.Init",
          "type": "function",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 131,
            "column": 0
          },
          "context": "func (m model) Init() tea.Cmd {",
          "surroundingLines": [
            "}",
            "",
            "func (m model) Init() tea.Cmd {",
            "return nil",
            "}"
          ],
          "relatedTerms": [
            "model",
            "Init",
            "tea",
            "Cmd"
          ],
          "language": "go"
        },
        {
          "term": "model.Init",
          "type": "function",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 79,
            "column": 0
          },
          "context": "func (m model) Init() tea.Cmd {",
          "surroundingLines": [
            "}",
            "",
            "func (m model) Init() tea.Cmd {",
            "return tea.Batch(",
            "tickCmd(),"
          ],
          "relatedTerms": [
            "model",
            "Init",
            "tea",
            "Cmd"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "model.executeinitialcommand",
      [
        {
          "term": "model.executeInitialCommand",
          "type": "function",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 112,
            "column": 0
          },
          "context": "func (m model) executeInitialCommand() tea.Cmd {",
          "surroundingLines": [
            "}",
            "",
            "func (m model) executeInitialCommand() tea.Cmd {",
            "switch m.mode {",
            "case \"overview\":"
          ],
          "relatedTerms": [
            "model",
            "executeInitialCommand",
            "tea",
            "Cmd"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "model.runcuratorcommand",
      [
        {
          "term": "model.runCuratorCommand",
          "type": "function",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 130,
            "column": 0
          },
          "context": "func (m model) runCuratorCommand(command string, args ...string) tea.Cmd {",
          "surroundingLines": [
            "}",
            "",
            "func (m model) runCuratorCommand(command string, args ...string) tea.Cmd {",
            "return func() tea.Msg {",
            "cmdArgs := []string{\"run\", \"../../src/tools/curator-cli/cli.ts\", command}"
          ],
          "relatedTerms": [
            "model",
            "runCuratorCommand",
            "command",
            "args",
            "tea",
            "Cmd"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "cmdargs",
      [
        {
          "term": "cmdArgs",
          "type": "variable",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 132,
            "column": 0
          },
          "context": "cmdArgs := []string{\"run\", \"../../src/tools/curator-cli/cli.ts\", command}",
          "surroundingLines": [
            "func (m model) runCuratorCommand(command string, args ...string) tea.Cmd {",
            "return func() tea.Msg {",
            "cmdArgs := []string{\"run\", \"../../src/tools/curator-cli/cli.ts\", command}",
            "cmdArgs = append(cmdArgs, args...)",
            ""
          ],
          "relatedTerms": [
            "cmdArgs",
            "run",
            "src",
            "tools",
            "curator",
            "cli",
            "command"
          ],
          "language": "go"
        },
        {
          "term": "cmdArgs",
          "type": "variable",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 97,
            "column": 0
          },
          "context": "cmdArgs := []string{\"run\", \"../../src/tools/monitor/cli.ts\", \"watch\"}",
          "surroundingLines": [
            "case \"watch\":",
            "// Start file watcher",
            "cmdArgs := []string{\"run\", \"../../src/tools/monitor/cli.ts\", \"watch\"}",
            "if m.showOverview {",
            "cmdArgs = append(cmdArgs, \"--overview\")"
          ],
          "relatedTerms": [
            "cmdArgs",
            "run",
            "src",
            "tools",
            "monitor",
            "cli",
            "watch"
          ],
          "language": "go"
        },
        {
          "term": "cmdArgs",
          "type": "variable",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 51,
            "column": 0
          },
          "context": "cmdArgs := []string{\"run\", \"../../src/tools/curator-cli/cli.ts\", \"overview\"}",
          "surroundingLines": [
            "",
            "// Pass through to TypeScript implementation",
            "cmdArgs := []string{\"run\", \"../../src/tools/curator-cli/cli.ts\", \"overview\"}",
            "if path != \"\" {",
            "cmdArgs = append(cmdArgs, path)"
          ],
          "relatedTerms": [
            "cmdArgs",
            "run",
            "src",
            "tools",
            "curator",
            "cli",
            "overview"
          ],
          "language": "go"
        },
        {
          "term": "cmdArgs",
          "type": "variable",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 90,
            "column": 0
          },
          "context": "cmdArgs := []string{\"run\", \"../../src/tools/curator-cli/cli.ts\", \"ask\"}",
          "surroundingLines": [
            "",
            "// Pass through to TypeScript implementation",
            "cmdArgs := []string{\"run\", \"../../src/tools/curator-cli/cli.ts\", \"ask\"}",
            "if path != \"\" {",
            "cmdArgs = append(cmdArgs, path)"
          ],
          "relatedTerms": [
            "cmdArgs",
            "run",
            "src",
            "tools",
            "curator",
            "cli",
            "ask"
          ],
          "language": "go"
        },
        {
          "term": "cmdArgs",
          "type": "variable",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 140,
            "column": 0
          },
          "context": "cmdArgs := []string{\"run\", \"../../src/tools/curator-cli/cli.ts\", \"feature\"}",
          "surroundingLines": [
            "",
            "// Pass through to TypeScript implementation",
            "cmdArgs := []string{\"run\", \"../../src/tools/curator-cli/cli.ts\", \"feature\"}",
            "if path != \"\" {",
            "cmdArgs = append(cmdArgs, path)"
          ],
          "relatedTerms": [
            "cmdArgs",
            "run",
            "src",
            "tools",
            "curator",
            "cli",
            "feature"
          ],
          "language": "go"
        },
        {
          "term": "cmdArgs",
          "type": "variable",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 175,
            "column": 0
          },
          "context": "cmdArgs := []string{\"run\", \"../../src/tools/curator-cli/cli.ts\", \"change\"}",
          "surroundingLines": [
            "",
            "// Pass through to TypeScript implementation",
            "cmdArgs := []string{\"run\", \"../../src/tools/curator-cli/cli.ts\", \"change\"}",
            "if path != \"\" {",
            "cmdArgs = append(cmdArgs, path)"
          ],
          "relatedTerms": [
            "cmdArgs",
            "run",
            "src",
            "tools",
            "curator",
            "cli",
            "change"
          ],
          "language": "go"
        },
        {
          "term": "cmdArgs",
          "type": "variable",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 205,
            "column": 0
          },
          "context": "cmdArgs := []string{\"run\", \"../../src/tools/curator-cli/cli.ts\", \"memory\"}",
          "surroundingLines": [
            "",
            "// Pass through to TypeScript implementation",
            "cmdArgs := []string{\"run\", \"../../src/tools/curator-cli/cli.ts\", \"memory\"}",
            "if path != \"\" {",
            "cmdArgs = append(cmdArgs, path)"
          ],
          "relatedTerms": [
            "cmdArgs",
            "run",
            "src",
            "tools",
            "curator",
            "cli",
            "memory"
          ],
          "language": "go"
        },
        {
          "term": "cmdArgs",
          "type": "variable",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 230,
            "column": 0
          },
          "context": "cmdArgs := []string{\"run\", \"../../src/tools/curator-cli/cli.ts\", \"clear\"}",
          "surroundingLines": [
            "",
            "// Pass through to TypeScript implementation",
            "cmdArgs := []string{\"run\", \"../../src/tools/curator-cli/cli.ts\", \"clear\"}",
            "if path != \"\" {",
            "cmdArgs = append(cmdArgs, path)"
          ],
          "relatedTerms": [
            "cmdArgs",
            "run",
            "src",
            "tools",
            "curator",
            "cli",
            "clear"
          ],
          "language": "go"
        },
        {
          "term": "cmdArgs",
          "type": "variable",
          "location": {
            "file": "cmd/monitor/main.go",
            "line": 44,
            "column": 0
          },
          "context": "cmdArgs := []string{\"run\", \"../../src/tools/monitor/cli.ts\", \"watch\"}",
          "surroundingLines": [
            "",
            "// Pass through to TypeScript implementation",
            "cmdArgs := []string{\"run\", \"../../src/tools/monitor/cli.ts\", \"watch\"}",
            "if withOverview {",
            "cmdArgs = append(cmdArgs, \"--overview\")"
          ],
          "relatedTerms": [
            "cmdArgs",
            "run",
            "src",
            "tools",
            "monitor",
            "cli",
            "watch"
          ],
          "language": "go"
        },
        {
          "term": "cmdArgs",
          "type": "variable",
          "location": {
            "file": "cmd/monitor/main.go",
            "line": 67,
            "column": 0
          },
          "context": "cmdArgs := []string{\"run\", \"../../src/tools/monitor/cli.ts\", \"overview\"}",
          "surroundingLines": [
            "",
            "// Pass through to TypeScript implementation",
            "cmdArgs := []string{\"run\", \"../../src/tools/monitor/cli.ts\", \"overview\"}",
            "",
            "execCmd := exec.Command(\"bun\", cmdArgs...)"
          ],
          "relatedTerms": [
            "cmdArgs",
            "run",
            "src",
            "tools",
            "monitor",
            "cli",
            "overview"
          ],
          "language": "go"
        },
        {
          "term": "cmdArgs",
          "type": "variable",
          "location": {
            "file": "cmd/monitor/main.go",
            "line": 87,
            "column": 0
          },
          "context": "cmdArgs := []string{\"run\", \"../../src/tools/monitor/cli.ts\", \"status\"}",
          "surroundingLines": [
            "",
            "// Pass through to TypeScript implementation",
            "cmdArgs := []string{\"run\", \"../../src/tools/monitor/cli.ts\", \"status\"}",
            "",
            "execCmd := exec.Command(\"bun\", cmdArgs...)"
          ],
          "relatedTerms": [
            "cmdArgs",
            "run",
            "src",
            "tools",
            "monitor",
            "cli",
            "status"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "../../src/tools/curator-cli/cli.ts",
      [
        {
          "term": "../../src/tools/curator-cli/cli.ts",
          "type": "string",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 132,
            "column": 29
          },
          "context": "cmdArgs := []string{\"run\", \"../../src/tools/curator-cli/cli.ts\", command}",
          "surroundingLines": [
            "cmdArgs := []string{\"run\", \"../../src/tools/curator-cli/cli.ts\", command}"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "../../src/tools/curator-cli/cli.ts",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 51,
            "column": 29
          },
          "context": "cmdArgs := []string{\"run\", \"../../src/tools/curator-cli/cli.ts\", \"overview\"}",
          "surroundingLines": [
            "cmdArgs := []string{\"run\", \"../../src/tools/curator-cli/cli.ts\", \"overview\"}"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "../../src/tools/curator-cli/cli.ts",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 90,
            "column": 29
          },
          "context": "cmdArgs := []string{\"run\", \"../../src/tools/curator-cli/cli.ts\", \"ask\"}",
          "surroundingLines": [
            "cmdArgs := []string{\"run\", \"../../src/tools/curator-cli/cli.ts\", \"ask\"}"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "../../src/tools/curator-cli/cli.ts",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 140,
            "column": 29
          },
          "context": "cmdArgs := []string{\"run\", \"../../src/tools/curator-cli/cli.ts\", \"feature\"}",
          "surroundingLines": [
            "cmdArgs := []string{\"run\", \"../../src/tools/curator-cli/cli.ts\", \"feature\"}"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "../../src/tools/curator-cli/cli.ts",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 175,
            "column": 29
          },
          "context": "cmdArgs := []string{\"run\", \"../../src/tools/curator-cli/cli.ts\", \"change\"}",
          "surroundingLines": [
            "cmdArgs := []string{\"run\", \"../../src/tools/curator-cli/cli.ts\", \"change\"}"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "../../src/tools/curator-cli/cli.ts",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 205,
            "column": 29
          },
          "context": "cmdArgs := []string{\"run\", \"../../src/tools/curator-cli/cli.ts\", \"memory\"}",
          "surroundingLines": [
            "cmdArgs := []string{\"run\", \"../../src/tools/curator-cli/cli.ts\", \"memory\"}"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "../../src/tools/curator-cli/cli.ts",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 230,
            "column": 29
          },
          "context": "cmdArgs := []string{\"run\", \"../../src/tools/curator-cli/cli.ts\", \"clear\"}",
          "surroundingLines": [
            "cmdArgs := []string{\"run\", \"../../src/tools/curator-cli/cli.ts\", \"clear\"}"
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "../../src/tools/curator",
      [
        {
          "term": "../../src/tools/curator-cli/cli.ts",
          "type": "string",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 132,
            "column": 29
          },
          "context": "cmdArgs := []string{\"run\", \"../../src/tools/curator-cli/cli.ts\", command}",
          "surroundingLines": [
            "cmdArgs := []string{\"run\", \"../../src/tools/curator-cli/cli.ts\", command}"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "../../src/tools/curator-cli/cli.ts",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 51,
            "column": 29
          },
          "context": "cmdArgs := []string{\"run\", \"../../src/tools/curator-cli/cli.ts\", \"overview\"}",
          "surroundingLines": [
            "cmdArgs := []string{\"run\", \"../../src/tools/curator-cli/cli.ts\", \"overview\"}"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "../../src/tools/curator-cli/cli.ts",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 90,
            "column": 29
          },
          "context": "cmdArgs := []string{\"run\", \"../../src/tools/curator-cli/cli.ts\", \"ask\"}",
          "surroundingLines": [
            "cmdArgs := []string{\"run\", \"../../src/tools/curator-cli/cli.ts\", \"ask\"}"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "../../src/tools/curator-cli/cli.ts",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 140,
            "column": 29
          },
          "context": "cmdArgs := []string{\"run\", \"../../src/tools/curator-cli/cli.ts\", \"feature\"}",
          "surroundingLines": [
            "cmdArgs := []string{\"run\", \"../../src/tools/curator-cli/cli.ts\", \"feature\"}"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "../../src/tools/curator-cli/cli.ts",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 175,
            "column": 29
          },
          "context": "cmdArgs := []string{\"run\", \"../../src/tools/curator-cli/cli.ts\", \"change\"}",
          "surroundingLines": [
            "cmdArgs := []string{\"run\", \"../../src/tools/curator-cli/cli.ts\", \"change\"}"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "../../src/tools/curator-cli/cli.ts",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 205,
            "column": 29
          },
          "context": "cmdArgs := []string{\"run\", \"../../src/tools/curator-cli/cli.ts\", \"memory\"}",
          "surroundingLines": [
            "cmdArgs := []string{\"run\", \"../../src/tools/curator-cli/cli.ts\", \"memory\"}"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "../../src/tools/curator-cli/cli.ts",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 230,
            "column": 29
          },
          "context": "cmdArgs := []string{\"run\", \"../../src/tools/curator-cli/cli.ts\", \"clear\"}",
          "surroundingLines": [
            "cmdArgs := []string{\"run\", \"../../src/tools/curator-cli/cli.ts\", \"clear\"}"
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "cli/cli.ts",
      [
        {
          "term": "../../src/tools/curator-cli/cli.ts",
          "type": "string",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 132,
            "column": 29
          },
          "context": "cmdArgs := []string{\"run\", \"../../src/tools/curator-cli/cli.ts\", command}",
          "surroundingLines": [
            "cmdArgs := []string{\"run\", \"../../src/tools/curator-cli/cli.ts\", command}"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "../../src/tools/curator-cli/cli.ts",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 51,
            "column": 29
          },
          "context": "cmdArgs := []string{\"run\", \"../../src/tools/curator-cli/cli.ts\", \"overview\"}",
          "surroundingLines": [
            "cmdArgs := []string{\"run\", \"../../src/tools/curator-cli/cli.ts\", \"overview\"}"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "../../src/tools/curator-cli/cli.ts",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 90,
            "column": 29
          },
          "context": "cmdArgs := []string{\"run\", \"../../src/tools/curator-cli/cli.ts\", \"ask\"}",
          "surroundingLines": [
            "cmdArgs := []string{\"run\", \"../../src/tools/curator-cli/cli.ts\", \"ask\"}"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "../../src/tools/curator-cli/cli.ts",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 140,
            "column": 29
          },
          "context": "cmdArgs := []string{\"run\", \"../../src/tools/curator-cli/cli.ts\", \"feature\"}",
          "surroundingLines": [
            "cmdArgs := []string{\"run\", \"../../src/tools/curator-cli/cli.ts\", \"feature\"}"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "../../src/tools/curator-cli/cli.ts",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 175,
            "column": 29
          },
          "context": "cmdArgs := []string{\"run\", \"../../src/tools/curator-cli/cli.ts\", \"change\"}",
          "surroundingLines": [
            "cmdArgs := []string{\"run\", \"../../src/tools/curator-cli/cli.ts\", \"change\"}"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "../../src/tools/curator-cli/cli.ts",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 205,
            "column": 29
          },
          "context": "cmdArgs := []string{\"run\", \"../../src/tools/curator-cli/cli.ts\", \"memory\"}",
          "surroundingLines": [
            "cmdArgs := []string{\"run\", \"../../src/tools/curator-cli/cli.ts\", \"memory\"}"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "../../src/tools/curator-cli/cli.ts",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 230,
            "column": 29
          },
          "context": "cmdArgs := []string{\"run\", \"../../src/tools/curator-cli/cli.ts\", \"clear\"}",
          "surroundingLines": [
            "cmdArgs := []string{\"run\", \"../../src/tools/curator-cli/cli.ts\", \"clear\"}"
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "cmd",
      [
        {
          "term": "cmd",
          "type": "variable",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 135,
            "column": 0
          },
          "context": "cmd := exec.Command(\"bun\", cmdArgs...)",
          "surroundingLines": [
            "cmdArgs = append(cmdArgs, args...)",
            "",
            "cmd := exec.Command(\"bun\", cmdArgs...)",
            "output, err := cmd.CombinedOutput()",
            ""
          ],
          "relatedTerms": [
            "cmd",
            "exec",
            "Command",
            "bun",
            "cmdArgs"
          ],
          "language": "go"
        },
        {
          "term": "cmd",
          "type": "variable",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 277,
            "column": 0
          },
          "context": "cmd := exec.Command(\"bun\", cmdArgs...)",
          "surroundingLines": [
            "",
            "// Execute command",
            "cmd := exec.Command(\"bun\", cmdArgs...)",
            "output, err := cmd.CombinedOutput()",
            "if err != nil {"
          ],
          "relatedTerms": [
            "cmd",
            "exec",
            "Command",
            "bun",
            "cmdArgs"
          ],
          "language": "go"
        },
        {
          "term": "cmd",
          "type": "variable",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 102,
            "column": 0
          },
          "context": "cmd := exec.Command(\"bun\", cmdArgs...)",
          "surroundingLines": [
            "}",
            "",
            "cmd := exec.Command(\"bun\", cmdArgs...)",
            "output, err := cmd.CombinedOutput()",
            "if err != nil {"
          ],
          "relatedTerms": [
            "cmd",
            "exec",
            "Command",
            "bun",
            "cmdArgs"
          ],
          "language": "go"
        },
        {
          "term": "cmd",
          "type": "variable",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 111,
            "column": 0
          },
          "context": "cmd := exec.Command(\"bun\", \"run\", \"../../src/tools/monitor/cli.ts\", \"status\")",
          "surroundingLines": [
            "case \"status\":",
            "// Get status",
            "cmd := exec.Command(\"bun\", \"run\", \"../../src/tools/monitor/cli.ts\", \"status\")",
            "output, err := cmd.CombinedOutput()",
            "if err != nil {"
          ],
          "relatedTerms": [
            "cmd",
            "exec",
            "Command",
            "bun",
            "run",
            "src",
            "tools",
            "monitor",
            "cli",
            "status"
          ],
          "language": "go"
        },
        {
          "term": "cmd",
          "type": "variable",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 305,
            "column": 0
          },
          "context": "cmd := exec.Command(\"bun\", \"run\", \"../../src/tools/monitor/cli.ts\", \"overview\")",
          "surroundingLines": [
            "func RunOverviewTUI() error {",
            "// For overview, we'll use a simpler display",
            "cmd := exec.Command(\"bun\", \"run\", \"../../src/tools/monitor/cli.ts\", \"overview\")",
            "output, err := cmd.CombinedOutput()",
            "if err != nil {"
          ],
          "relatedTerms": [
            "cmd",
            "exec",
            "Command",
            "bun",
            "run",
            "src",
            "tools",
            "monitor",
            "cli",
            "overview"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "error: %v\\n%s",
      [
        {
          "term": "Error: %v\\n%s",
          "type": "string",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 140,
            "column": 25
          },
          "context": "content: fmt.Sprintf(\"Error: %v\\n%s\", err, string(output)),",
          "surroundingLines": [
            "content: fmt.Sprintf(\"Error: %v\\n%s\", err, string(output)),"
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "model.update",
      [
        {
          "term": "model.Update",
          "type": "function",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 152,
            "column": 0
          },
          "context": "func (m model) Update(msg tea.Msg) (tea.Model, tea.Cmd) {",
          "surroundingLines": [
            "}",
            "",
            "func (m model) Update(msg tea.Msg) (tea.Model, tea.Cmd) {",
            "switch msg := msg.(type) {",
            "case tea.WindowSizeMsg:"
          ],
          "relatedTerms": [
            "model",
            "Update",
            "msg",
            "tea",
            "Msg",
            "Model",
            "Cmd"
          ],
          "language": "go"
        },
        {
          "term": "model.Update",
          "type": "function",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 135,
            "column": 0
          },
          "context": "func (m model) Update(msg tea.Msg) (tea.Model, tea.Cmd) {",
          "surroundingLines": [
            "}",
            "",
            "func (m model) Update(msg tea.Msg) (tea.Model, tea.Cmd) {",
            "switch msg := msg.(type) {",
            "case tea.WindowSizeMsg:"
          ],
          "relatedTerms": [
            "model",
            "Update",
            "msg",
            "tea",
            "Msg",
            "Model",
            "Cmd"
          ],
          "language": "go"
        },
        {
          "term": "model.Update",
          "type": "function",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 132,
            "column": 0
          },
          "context": "func (m model) Update(msg tea.Msg) (tea.Model, tea.Cmd) {",
          "surroundingLines": [
            "}",
            "",
            "func (m model) Update(msg tea.Msg) (tea.Model, tea.Cmd) {",
            "switch msg := msg.(type) {",
            "case tea.WindowSizeMsg:"
          ],
          "relatedTerms": [
            "model",
            "Update",
            "msg",
            "tea",
            "Msg",
            "Model",
            "Cmd"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "headerheight",
      [
        {
          "term": "headerHeight",
          "type": "variable",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 159,
            "column": 0
          },
          "context": "headerHeight := 8",
          "surroundingLines": [
            "",
            "// Update viewport size",
            "headerHeight := 8",
            "footerHeight := 8",
            "m.viewport.Width = msg.Width - 4"
          ],
          "relatedTerms": [
            "headerHeight"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "footerheight",
      [
        {
          "term": "footerHeight",
          "type": "variable",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 160,
            "column": 0
          },
          "context": "footerHeight := 8",
          "surroundingLines": [
            "// Update viewport size",
            "headerHeight := 8",
            "footerHeight := 8",
            "m.viewport.Width = msg.Width - 4",
            "m.viewport.Height = msg.Height - headerHeight - footerHeight"
          ],
          "relatedTerms": [
            "footerHeight"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "usermsg",
      [
        {
          "term": "userMsg",
          "type": "variable",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 180,
            "column": 0
          },
          "context": "userMsg := m.textarea.Value()",
          "surroundingLines": [
            "if m.mode == \"chat\" && !m.isLoading && m.textarea.Value() != \"\" {",
            "// Send message",
            "userMsg := m.textarea.Value()",
            "m.messages = append(m.messages, message{",
            "role:    \"user\","
          ],
          "relatedTerms": [
            "userMsg",
            "textarea",
            "Value"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "model.updateviewport",
      [
        {
          "term": "model.updateViewport",
          "type": "function",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 234,
            "column": 0
          },
          "context": "func (m *model) updateViewport() {",
          "surroundingLines": [
            "}",
            "",
            "func (m *model) updateViewport() {",
            "var content strings.Builder",
            ""
          ],
          "relatedTerms": [
            "model",
            "updateViewport"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "🧑 you:",
      [
        {
          "term": "🧑 You:",
          "type": "string",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 240,
            "column": 40
          },
          "context": "content.WriteString(userStyle.Render(\"🧑 You:\") + \"\\n\")",
          "surroundingLines": [
            "content.WriteString(userStyle.Render(\"🧑 You:\") + \"\\n\")"
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "🤖 curator:",
      [
        {
          "term": "🤖 Curator:",
          "type": "string",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 243,
            "column": 43
          },
          "context": "content.WriteString(curatorStyle.Render(\"🤖 Curator:\") + \"\\n\")",
          "surroundingLines": [
            "content.WriteString(curatorStyle.Render(\"🤖 Curator:\") + \"\\n\")"
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "model.view",
      [
        {
          "term": "model.View",
          "type": "function",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 258,
            "column": 0
          },
          "context": "func (m model) View() string {",
          "surroundingLines": [
            "}",
            "",
            "func (m model) View() string {",
            "if m.err != nil {",
            "return fmt.Sprintf(\"Error: %v\\n\\nPress Ctrl+C to quit.\", m.err)"
          ],
          "relatedTerms": [
            "model",
            "View"
          ],
          "language": "go"
        },
        {
          "term": "model.View",
          "type": "function",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 208,
            "column": 0
          },
          "context": "func (m model) View() string {",
          "surroundingLines": [
            "}",
            "",
            "func (m model) View() string {",
            "if m.err != nil {",
            "return fmt.Sprintf(\"Error: %v\\n\\nPress 'q' to quit.\", m.err)"
          ],
          "relatedTerms": [
            "model",
            "View"
          ],
          "language": "go"
        },
        {
          "term": "model.View",
          "type": "function",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 207,
            "column": 0
          },
          "context": "func (m model) View() string {",
          "surroundingLines": [
            "}",
            "",
            "func (m model) View() string {",
            "if m.err != nil {",
            "return fmt.Sprintf(\"Error: %v\\n\\nPress 'q' to quit.\", m.err)"
          ],
          "relatedTerms": [
            "model",
            "View"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "error: %v\\n\\npress ctrl+c to quit.",
      [
        {
          "term": "Error: %v\\n\\nPress Ctrl+C to quit.",
          "type": "string",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 260,
            "column": 21
          },
          "context": "return fmt.Sprintf(\"Error: %v\\n\\nPress Ctrl+C to quit.\", m.err)",
          "surroundingLines": [
            "return fmt.Sprintf(\"Error: %v\\n\\nPress Ctrl+C to quit.\", m.err)"
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "title",
      [
        {
          "term": "title",
          "type": "variable",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 264,
            "column": 0
          },
          "context": "title := titleStyle.Render(\"🤖 Curator - AI Codebase Assistant\")",
          "surroundingLines": [
            "",
            "// Title",
            "title := titleStyle.Render(\"🤖 Curator - AI Codebase Assistant\")",
            "",
            "// Main content area"
          ],
          "relatedTerms": [
            "title",
            "titleStyle",
            "Render",
            "Curator",
            "Codebase",
            "Assistant"
          ],
          "language": "go"
        },
        {
          "term": "title",
          "type": "variable",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 213,
            "column": 0
          },
          "context": "title := titleStyle.Render(\"📊 Monitor Dashboard\")",
          "surroundingLines": [
            "",
            "// Title",
            "title := titleStyle.Render(\"📊 Monitor Dashboard\")",
            "",
            "// Stats box"
          ],
          "relatedTerms": [
            "title",
            "titleStyle",
            "Render",
            "Monitor",
            "Dashboard"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "🤖 curator - ai codebase assistant",
      [
        {
          "term": "🤖 Curator - AI Codebase Assistant",
          "type": "string",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 264,
            "column": 28
          },
          "context": "title := titleStyle.Render(\"🤖 Curator - AI Codebase Assistant\")",
          "surroundingLines": [
            "title := titleStyle.Render(\"🤖 Curator - AI Codebase Assistant\")"
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "🤖 curator ",
      [
        {
          "term": "🤖 Curator - AI Codebase Assistant",
          "type": "string",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 264,
            "column": 28
          },
          "context": "title := titleStyle.Render(\"🤖 Curator - AI Codebase Assistant\")",
          "surroundingLines": [
            "title := titleStyle.Render(\"🤖 Curator - AI Codebase Assistant\")"
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      " ai codebase assistant",
      [
        {
          "term": "🤖 Curator - AI Codebase Assistant",
          "type": "string",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 264,
            "column": 28
          },
          "context": "title := titleStyle.Render(\"🤖 Curator - AI Codebase Assistant\")",
          "surroundingLines": [
            "title := titleStyle.Render(\"🤖 Curator - AI Codebase Assistant\")"
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      " thinking...",
      [
        {
          "term": " Thinking...",
          "type": "string",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 271,
            "column": 23
          },
          "context": "m.spinner.View() + \" Thinking...\",",
          "surroundingLines": [
            "m.spinner.View() + \" Thinking...\","
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "enter: send • esc: quit • ↑/↓: scroll",
      [
        {
          "term": "Enter: send • Esc: quit • ↑/↓: scroll",
          "type": "string",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 287,
            "column": 26
          },
          "context": "help = helpStyle.Render(\"Enter: send • Esc: quit • ↑/↓: scroll\")",
          "surroundingLines": [
            "help = helpStyle.Render(\"Enter: send • Esc: quit • ↑/↓: scroll\")"
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "↑/↓: scroll • ctrl+c: quit",
      [
        {
          "term": "↑/↓: scroll • Ctrl+C: quit",
          "type": "string",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 289,
            "column": 26
          },
          "context": "help = helpStyle.Render(\"↑/↓: scroll • Ctrl+C: quit\")",
          "surroundingLines": [
            "help = helpStyle.Render(\"↑/↓: scroll • Ctrl+C: quit\")"
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "runtui",
      [
        {
          "term": "RunTUI",
          "type": "function",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 304,
            "column": 0
          },
          "context": "func RunTUI(projectPath string) error {",
          "surroundingLines": [
            "// Public functions for different modes",
            "",
            "func RunTUI(projectPath string) error {",
            "if projectPath == \"\" {",
            "projectPath, _ = os.Getwd()"
          ],
          "relatedTerms": [
            "RunTUI",
            "projectPath"
          ],
          "language": "go"
        },
        {
          "term": "RunTUI",
          "type": "function",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 288,
            "column": 0
          },
          "context": "func RunTUI() error {",
          "surroundingLines": [
            "",
            "// RunTUI launches the main TUI",
            "func RunTUI() error {",
            "p := tea.NewProgram(initialModel(), tea.WithAltScreen())",
            "_, err := p.Run()"
          ],
          "relatedTerms": [
            "RunTUI"
          ],
          "language": "go"
        },
        {
          "term": "RunTUI",
          "type": "function",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 250,
            "column": 0
          },
          "context": "func RunTUI() error {",
          "surroundingLines": [
            "",
            "// RunTUI launches the main monitor TUI",
            "func RunTUI() error {",
            "// Default to watch mode",
            "return RunWatchTUI(false)"
          ],
          "relatedTerms": [
            "RunTUI"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "runoverviewtui",
      [
        {
          "term": "RunOverviewTUI",
          "type": "function",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 311,
            "column": 0
          },
          "context": "func RunOverviewTUI(projectPath string, newSession bool) error {",
          "surroundingLines": [
            "}",
            "",
            "func RunOverviewTUI(projectPath string, newSession bool) error {",
            "if projectPath == \"\" {",
            "projectPath, _ = os.Getwd()"
          ],
          "relatedTerms": [
            "RunOverviewTUI",
            "projectPath",
            "newSession"
          ],
          "language": "go"
        },
        {
          "term": "RunOverviewTUI",
          "type": "function",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 303,
            "column": 0
          },
          "context": "func RunOverviewTUI() error {",
          "surroundingLines": [
            "",
            "// RunOverviewTUI launches overview TUI",
            "func RunOverviewTUI() error {",
            "// For overview, we'll use a simpler display",
            "cmd := exec.Command(\"bun\", \"run\", \"../../src/tools/monitor/cli.ts\", \"overview\")"
          ],
          "relatedTerms": [
            "RunOverviewTUI"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "m",
      [
        {
          "term": "m",
          "type": "variable",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 316,
            "column": 0
          },
          "context": "m := initialModel(\"overview\", projectPath)",
          "surroundingLines": [
            "}",
            "",
            "m := initialModel(\"overview\", projectPath)",
            "p := tea.NewProgram(m, tea.WithAltScreen())",
            "_, err := p.Run()"
          ],
          "relatedTerms": [
            "initialModel",
            "overview",
            "projectPath"
          ],
          "language": "go"
        },
        {
          "term": "m",
          "type": "variable",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 327,
            "column": 0
          },
          "context": "m := initialModel(\"ask\", projectPath)",
          "surroundingLines": [
            "}",
            "",
            "m := initialModel(\"ask\", projectPath)",
            "m.question = question",
            "p := tea.NewProgram(m, tea.WithAltScreen())"
          ],
          "relatedTerms": [
            "initialModel",
            "ask",
            "projectPath"
          ],
          "language": "go"
        },
        {
          "term": "m",
          "type": "variable",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 339,
            "column": 0
          },
          "context": "m := initialModel(\"chat\", projectPath)",
          "surroundingLines": [
            "}",
            "",
            "m := initialModel(\"chat\", projectPath)",
            "m.textarea.Focus()",
            ""
          ],
          "relatedTerms": [
            "initialModel",
            "chat",
            "projectPath"
          ],
          "language": "go"
        },
        {
          "term": "m",
          "type": "variable",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 359,
            "column": 0
          },
          "context": "m := initialModel(\"feature\", projectPath)",
          "surroundingLines": [
            "}",
            "",
            "m := initialModel(\"feature\", projectPath)",
            "m.question = description",
            "m.isLoading = true"
          ],
          "relatedTerms": [
            "initialModel",
            "feature",
            "projectPath"
          ],
          "language": "go"
        },
        {
          "term": "m",
          "type": "variable",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 379,
            "column": 0
          },
          "context": "m := initialModel(\"change\", projectPath)",
          "surroundingLines": [
            "}",
            "",
            "m := initialModel(\"change\", projectPath)",
            "m.question = description",
            "m.isLoading = true"
          ],
          "relatedTerms": [
            "initialModel",
            "change",
            "projectPath"
          ],
          "language": "go"
        },
        {
          "term": "m",
          "type": "variable",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 399,
            "column": 0
          },
          "context": "m := initialModel(\"memory\", projectPath)",
          "surroundingLines": [
            "}",
            "",
            "m := initialModel(\"memory\", projectPath)",
            "m.isLoading = true",
            ""
          ],
          "relatedTerms": [
            "initialModel",
            "memory",
            "projectPath"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "p",
      [
        {
          "term": "p",
          "type": "variable",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 317,
            "column": 0
          },
          "context": "p := tea.NewProgram(m, tea.WithAltScreen())",
          "surroundingLines": [
            "",
            "m := initialModel(\"overview\", projectPath)",
            "p := tea.NewProgram(m, tea.WithAltScreen())",
            "_, err := p.Run()",
            "return err"
          ],
          "relatedTerms": [
            "tea",
            "NewProgram",
            "WithAltScreen"
          ],
          "language": "go"
        },
        {
          "term": "p",
          "type": "variable",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 329,
            "column": 0
          },
          "context": "p := tea.NewProgram(m, tea.WithAltScreen())",
          "surroundingLines": [
            "m := initialModel(\"ask\", projectPath)",
            "m.question = question",
            "p := tea.NewProgram(m, tea.WithAltScreen())",
            "_, err := p.Run()",
            "return err"
          ],
          "relatedTerms": [
            "tea",
            "NewProgram",
            "WithAltScreen"
          ],
          "language": "go"
        },
        {
          "term": "p",
          "type": "variable",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 349,
            "column": 0
          },
          "context": "p := tea.NewProgram(m, tea.WithAltScreen())",
          "surroundingLines": [
            "m.updateViewport()",
            "",
            "p := tea.NewProgram(m, tea.WithAltScreen())",
            "_, err := p.Run()",
            "return err"
          ],
          "relatedTerms": [
            "tea",
            "NewProgram",
            "WithAltScreen"
          ],
          "language": "go"
        },
        {
          "term": "p",
          "type": "variable",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 369,
            "column": 0
          },
          "context": "p := tea.NewProgram(m, tea.WithAltScreen())",
          "surroundingLines": [
            "})",
            "",
            "p := tea.NewProgram(m, tea.WithAltScreen())",
            "_, err := p.Run()",
            "return err"
          ],
          "relatedTerms": [
            "tea",
            "NewProgram",
            "WithAltScreen"
          ],
          "language": "go"
        },
        {
          "term": "p",
          "type": "variable",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 389,
            "column": 0
          },
          "context": "p := tea.NewProgram(m, tea.WithAltScreen())",
          "surroundingLines": [
            "})",
            "",
            "p := tea.NewProgram(m, tea.WithAltScreen())",
            "_, err := p.Run()",
            "return err"
          ],
          "relatedTerms": [
            "tea",
            "NewProgram",
            "WithAltScreen"
          ],
          "language": "go"
        },
        {
          "term": "p",
          "type": "variable",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 402,
            "column": 0
          },
          "context": "p := tea.NewProgram(m, tea.WithAltScreen())",
          "surroundingLines": [
            "m.isLoading = true",
            "",
            "p := tea.NewProgram(m, tea.WithAltScreen())",
            "_, err := p.Run()",
            "return err"
          ],
          "relatedTerms": [
            "tea",
            "NewProgram",
            "WithAltScreen"
          ],
          "language": "go"
        },
        {
          "term": "p",
          "type": "variable",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 289,
            "column": 0
          },
          "context": "p := tea.NewProgram(initialModel(), tea.WithAltScreen())",
          "surroundingLines": [
            "// RunTUI launches the main TUI",
            "func RunTUI() error {",
            "p := tea.NewProgram(initialModel(), tea.WithAltScreen())",
            "_, err := p.Run()",
            "return err"
          ],
          "relatedTerms": [
            "tea",
            "NewProgram",
            "initialModel",
            "WithAltScreen"
          ],
          "language": "go"
        },
        {
          "term": "p",
          "type": "variable",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 257,
            "column": 0
          },
          "context": "p := tea.NewProgram(",
          "surroundingLines": [
            "// RunWatchTUI launches watch mode TUI",
            "func RunWatchTUI(withOverview bool) error {",
            "p := tea.NewProgram(",
            "initialModel(\"watch\", withOverview),",
            "tea.WithAltScreen(),"
          ],
          "relatedTerms": [
            "tea",
            "NewProgram"
          ],
          "language": "go"
        },
        {
          "term": "p",
          "type": "variable",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 315,
            "column": 0
          },
          "context": "p := tea.NewProgram(overviewModel{viewport: vp}, tea.WithAltScreen())",
          "surroundingLines": [
            "vp.SetContent(string(output))",
            "",
            "p := tea.NewProgram(overviewModel{viewport: vp}, tea.WithAltScreen())",
            "_, err = p.Run()",
            "return err"
          ],
          "relatedTerms": [
            "tea",
            "NewProgram",
            "overviewModel",
            "viewport",
            "WithAltScreen"
          ],
          "language": "go"
        },
        {
          "term": "p",
          "type": "variable",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 322,
            "column": 0
          },
          "context": "p := tea.NewProgram(",
          "surroundingLines": [
            "// RunStatusTUI launches status TUI",
            "func RunStatusTUI() error {",
            "p := tea.NewProgram(",
            "initialModel(\"status\", false),",
            "tea.WithAltScreen(),"
          ],
          "relatedTerms": [
            "tea",
            "NewProgram"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "runasktui",
      [
        {
          "term": "RunAskTUI",
          "type": "function",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 322,
            "column": 0
          },
          "context": "func RunAskTUI(projectPath, question string) error {",
          "surroundingLines": [
            "}",
            "",
            "func RunAskTUI(projectPath, question string) error {",
            "if projectPath == \"\" {",
            "projectPath, _ = os.Getwd()"
          ],
          "relatedTerms": [
            "RunAskTUI",
            "projectPath",
            "question"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "runchattui",
      [
        {
          "term": "RunChatTUI",
          "type": "function",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 334,
            "column": 0
          },
          "context": "func RunChatTUI(projectPath string) error {",
          "surroundingLines": [
            "}",
            "",
            "func RunChatTUI(projectPath string) error {",
            "if projectPath == \"\" {",
            "projectPath, _ = os.Getwd()"
          ],
          "relatedTerms": [
            "RunChatTUI",
            "projectPath"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "# welcome to curator chat! 🤖\\n\\ni'm here to help you understand your codebase. ask me anything about:\\n\\n- code structure and architecture\\n- implementation details\\n- how to add new features\\n- impact of changes\\n- best practices in your project\\n\\nwhat would you like to know?",
      [
        {
          "term": "# Welcome to Curator Chat! 🤖\\n\\nI'm here to help you understand your codebase. Ask me anything about:\\n\\n- Code structure and architecture\\n- Implementation details\\n- How to add new features\\n- Impact of changes\\n- Best practices in your project\\n\\nWhat would you like to know?",
          "type": "string",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 345,
            "column": 11
          },
          "context": "content: \"# Welcome to Curator Chat! 🤖\\n\\nI'm here to help you understand your codebase. Ask me anything about:\\n\\n- Code structure and architecture\\n- Implementation details\\n- How to add new features\\n- Impact of changes\\n- Best practices in your project\\n\\nWhat would you like to know?\",",
          "surroundingLines": [
            "content: \"# Welcome to Curator Chat! 🤖\\n\\nI'm here to help you understand your codebase. Ask me anything about:\\n\\n- Code structure and architecture\\n- Implementation details\\n- How to add new features\\n- Impact of changes\\n- Best practices in your project\\n\\nWhat would you like to know?\","
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "# welcome to curator chat! 🤖\\n\\ni'm here to help you understand your codebase. ask me anything about:\\n\\n",
      [
        {
          "term": "# Welcome to Curator Chat! 🤖\\n\\nI'm here to help you understand your codebase. Ask me anything about:\\n\\n- Code structure and architecture\\n- Implementation details\\n- How to add new features\\n- Impact of changes\\n- Best practices in your project\\n\\nWhat would you like to know?",
          "type": "string",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 345,
            "column": 11
          },
          "context": "content: \"# Welcome to Curator Chat! 🤖\\n\\nI'm here to help you understand your codebase. Ask me anything about:\\n\\n- Code structure and architecture\\n- Implementation details\\n- How to add new features\\n- Impact of changes\\n- Best practices in your project\\n\\nWhat would you like to know?\",",
          "surroundingLines": [
            "content: \"# Welcome to Curator Chat! 🤖\\n\\nI'm here to help you understand your codebase. Ask me anything about:\\n\\n- Code structure and architecture\\n- Implementation details\\n- How to add new features\\n- Impact of changes\\n- Best practices in your project\\n\\nWhat would you like to know?\","
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      " code structure and architecture\\n",
      [
        {
          "term": "# Welcome to Curator Chat! 🤖\\n\\nI'm here to help you understand your codebase. Ask me anything about:\\n\\n- Code structure and architecture\\n- Implementation details\\n- How to add new features\\n- Impact of changes\\n- Best practices in your project\\n\\nWhat would you like to know?",
          "type": "string",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 345,
            "column": 11
          },
          "context": "content: \"# Welcome to Curator Chat! 🤖\\n\\nI'm here to help you understand your codebase. Ask me anything about:\\n\\n- Code structure and architecture\\n- Implementation details\\n- How to add new features\\n- Impact of changes\\n- Best practices in your project\\n\\nWhat would you like to know?\",",
          "surroundingLines": [
            "content: \"# Welcome to Curator Chat! 🤖\\n\\nI'm here to help you understand your codebase. Ask me anything about:\\n\\n- Code structure and architecture\\n- Implementation details\\n- How to add new features\\n- Impact of changes\\n- Best practices in your project\\n\\nWhat would you like to know?\","
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      " implementation details\\n",
      [
        {
          "term": "# Welcome to Curator Chat! 🤖\\n\\nI'm here to help you understand your codebase. Ask me anything about:\\n\\n- Code structure and architecture\\n- Implementation details\\n- How to add new features\\n- Impact of changes\\n- Best practices in your project\\n\\nWhat would you like to know?",
          "type": "string",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 345,
            "column": 11
          },
          "context": "content: \"# Welcome to Curator Chat! 🤖\\n\\nI'm here to help you understand your codebase. Ask me anything about:\\n\\n- Code structure and architecture\\n- Implementation details\\n- How to add new features\\n- Impact of changes\\n- Best practices in your project\\n\\nWhat would you like to know?\",",
          "surroundingLines": [
            "content: \"# Welcome to Curator Chat! 🤖\\n\\nI'm here to help you understand your codebase. Ask me anything about:\\n\\n- Code structure and architecture\\n- Implementation details\\n- How to add new features\\n- Impact of changes\\n- Best practices in your project\\n\\nWhat would you like to know?\","
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      " how to add new features\\n",
      [
        {
          "term": "# Welcome to Curator Chat! 🤖\\n\\nI'm here to help you understand your codebase. Ask me anything about:\\n\\n- Code structure and architecture\\n- Implementation details\\n- How to add new features\\n- Impact of changes\\n- Best practices in your project\\n\\nWhat would you like to know?",
          "type": "string",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 345,
            "column": 11
          },
          "context": "content: \"# Welcome to Curator Chat! 🤖\\n\\nI'm here to help you understand your codebase. Ask me anything about:\\n\\n- Code structure and architecture\\n- Implementation details\\n- How to add new features\\n- Impact of changes\\n- Best practices in your project\\n\\nWhat would you like to know?\",",
          "surroundingLines": [
            "content: \"# Welcome to Curator Chat! 🤖\\n\\nI'm here to help you understand your codebase. Ask me anything about:\\n\\n- Code structure and architecture\\n- Implementation details\\n- How to add new features\\n- Impact of changes\\n- Best practices in your project\\n\\nWhat would you like to know?\","
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      " impact of changes\\n",
      [
        {
          "term": "# Welcome to Curator Chat! 🤖\\n\\nI'm here to help you understand your codebase. Ask me anything about:\\n\\n- Code structure and architecture\\n- Implementation details\\n- How to add new features\\n- Impact of changes\\n- Best practices in your project\\n\\nWhat would you like to know?",
          "type": "string",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 345,
            "column": 11
          },
          "context": "content: \"# Welcome to Curator Chat! 🤖\\n\\nI'm here to help you understand your codebase. Ask me anything about:\\n\\n- Code structure and architecture\\n- Implementation details\\n- How to add new features\\n- Impact of changes\\n- Best practices in your project\\n\\nWhat would you like to know?\",",
          "surroundingLines": [
            "content: \"# Welcome to Curator Chat! 🤖\\n\\nI'm here to help you understand your codebase. Ask me anything about:\\n\\n- Code structure and architecture\\n- Implementation details\\n- How to add new features\\n- Impact of changes\\n- Best practices in your project\\n\\nWhat would you like to know?\","
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      " best practices in your project\\n\\nwhat would you like to know?",
      [
        {
          "term": "# Welcome to Curator Chat! 🤖\\n\\nI'm here to help you understand your codebase. Ask me anything about:\\n\\n- Code structure and architecture\\n- Implementation details\\n- How to add new features\\n- Impact of changes\\n- Best practices in your project\\n\\nWhat would you like to know?",
          "type": "string",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 345,
            "column": 11
          },
          "context": "content: \"# Welcome to Curator Chat! 🤖\\n\\nI'm here to help you understand your codebase. Ask me anything about:\\n\\n- Code structure and architecture\\n- Implementation details\\n- How to add new features\\n- Impact of changes\\n- Best practices in your project\\n\\nWhat would you like to know?\",",
          "surroundingLines": [
            "content: \"# Welcome to Curator Chat! 🤖\\n\\nI'm here to help you understand your codebase. Ask me anything about:\\n\\n- Code structure and architecture\\n- Implementation details\\n- How to add new features\\n- Impact of changes\\n- Best practices in your project\\n\\nWhat would you like to know?\","
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "runfeaturetui",
      [
        {
          "term": "RunFeatureTUI",
          "type": "function",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 354,
            "column": 0
          },
          "context": "func RunFeatureTUI(projectPath, description string) error {",
          "surroundingLines": [
            "}",
            "",
            "func RunFeatureTUI(projectPath, description string) error {",
            "if projectPath == \"\" {",
            "projectPath, _ = os.Getwd()"
          ],
          "relatedTerms": [
            "RunFeatureTUI",
            "projectPath",
            "description"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "feature request: %s",
      [
        {
          "term": "Feature Request: %s",
          "type": "string",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 366,
            "column": 23
          },
          "context": "content: fmt.Sprintf(\"Feature Request: %s\", description),",
          "surroundingLines": [
            "content: fmt.Sprintf(\"Feature Request: %s\", description),"
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "runchangetui",
      [
        {
          "term": "RunChangeTUI",
          "type": "function",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 374,
            "column": 0
          },
          "context": "func RunChangeTUI(projectPath, description string) error {",
          "surroundingLines": [
            "}",
            "",
            "func RunChangeTUI(projectPath, description string) error {",
            "if projectPath == \"\" {",
            "projectPath, _ = os.Getwd()"
          ],
          "relatedTerms": [
            "RunChangeTUI",
            "projectPath",
            "description"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "change analysis: %s",
      [
        {
          "term": "Change Analysis: %s",
          "type": "string",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 386,
            "column": 23
          },
          "context": "content: fmt.Sprintf(\"Change Analysis: %s\", description),",
          "surroundingLines": [
            "content: fmt.Sprintf(\"Change Analysis: %s\", description),"
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "runmemorytui",
      [
        {
          "term": "RunMemoryTUI",
          "type": "function",
          "location": {
            "file": "internal/curator/tui.go",
            "line": 394,
            "column": 0
          },
          "context": "func RunMemoryTUI(projectPath string) error {",
          "surroundingLines": [
            "}",
            "",
            "func RunMemoryTUI(projectPath string) error {",
            "if projectPath == \"\" {",
            "projectPath, _ = os.Getwd()"
          ],
          "relatedTerms": [
            "RunMemoryTUI",
            "projectPath"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "smartgrep",
      [
        {
          "term": "smartgrep",
          "type": "module",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 1,
            "column": 0
          },
          "context": "package smartgrep",
          "surroundingLines": [
            "package smartgrep"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "SMARTGREP_CLI_PATH",
          "type": "string",
          "location": {
            "file": "internal/config/config.go",
            "line": 11,
            "column": 22
          },
          "context": "if path := os.Getenv(\"SMARTGREP_CLI_PATH\"); path != \"\" {",
          "surroundingLines": [
            "if path := os.Getenv(\"SMARTGREP_CLI_PATH\"); path != \"\" {"
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "github.com/charmbracelet/bubbles/key",
      [
        {
          "term": "github.com/charmbracelet/bubbles/key",
          "type": "string",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 7,
            "column": 1
          },
          "context": "\"github.com/charmbracelet/bubbles/key\"",
          "surroundingLines": [
            "\"github.com/charmbracelet/bubbles/key\""
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "github.com/charmbracelet/bubbles/list",
      [
        {
          "term": "github.com/charmbracelet/bubbles/list",
          "type": "string",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 8,
            "column": 1
          },
          "context": "\"github.com/charmbracelet/bubbles/list\"",
          "surroundingLines": [
            "\"github.com/charmbracelet/bubbles/list\""
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "github.com/charmbracelet/bubbles/textinput",
      [
        {
          "term": "github.com/charmbracelet/bubbles/textinput",
          "type": "string",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 9,
            "column": 1
          },
          "context": "\"github.com/charmbracelet/bubbles/textinput\"",
          "surroundingLines": [
            "\"github.com/charmbracelet/bubbles/textinput\""
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "keymap",
      [
        {
          "term": "keyMap",
          "type": "class",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 30,
            "column": 0
          },
          "context": "type keyMap struct {",
          "surroundingLines": [
            "",
            "// Key bindings",
            "type keyMap struct {",
            "Up     key.Binding",
            "Down   key.Binding"
          ],
          "relatedTerms": [
            "keyMap"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "keymap.up",
      [
        {
          "term": "keyMap.Up",
          "type": "variable",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 31,
            "column": 0
          },
          "context": "Up     key.Binding",
          "surroundingLines": [
            "Up     key.Binding"
          ],
          "relatedTerms": [
            "key"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "keymap.down",
      [
        {
          "term": "keyMap.Down",
          "type": "variable",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 32,
            "column": 0
          },
          "context": "Down   key.Binding",
          "surroundingLines": [
            "Down   key.Binding"
          ],
          "relatedTerms": [
            "key"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "keymap.select",
      [
        {
          "term": "keyMap.Select",
          "type": "variable",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 33,
            "column": 0
          },
          "context": "Select key.Binding",
          "surroundingLines": [
            "Select key.Binding"
          ],
          "relatedTerms": [
            "key"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "keymap.back",
      [
        {
          "term": "keyMap.Back",
          "type": "variable",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 34,
            "column": 0
          },
          "context": "Back   key.Binding",
          "surroundingLines": [
            "Back   key.Binding"
          ],
          "relatedTerms": [
            "key"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "keymap.quit",
      [
        {
          "term": "keyMap.Quit",
          "type": "variable",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 35,
            "column": 0
          },
          "context": "Quit   key.Binding",
          "surroundingLines": [
            "Quit   key.Binding"
          ],
          "relatedTerms": [
            "key"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "keys",
      [
        {
          "term": "keys",
          "type": "variable",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 38,
            "column": 0
          },
          "context": "var keys = keyMap{",
          "surroundingLines": [
            "}",
            "",
            "var keys = keyMap{",
            "Up: key.NewBinding(",
            "key.WithKeys(\"up\", \"k\"),"
          ],
          "relatedTerms": [
            "keys",
            "keyMap"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "menuitem",
      [
        {
          "term": "menuItem",
          "type": "class",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 62,
            "column": 0
          },
          "context": "type menuItem struct {",
          "surroundingLines": [
            "",
            "// Main menu item",
            "type menuItem struct {",
            "title       string",
            "description string"
          ],
          "relatedTerms": [
            "menuItem"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "menuitem.title",
      [
        {
          "term": "menuItem.title",
          "type": "variable",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 63,
            "column": 0
          },
          "context": "title       string",
          "surroundingLines": [
            "title       string"
          ],
          "relatedTerms": [
            "string"
          ],
          "language": "go"
        },
        {
          "term": "menuItem.Title",
          "type": "function",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 68,
            "column": 0
          },
          "context": "func (i menuItem) Title() string       { return i.title }",
          "surroundingLines": [
            "}",
            "",
            "func (i menuItem) Title() string       { return i.title }",
            "func (i menuItem) Description() string { return i.description }",
            "func (i menuItem) FilterValue() string { return i.title }"
          ],
          "relatedTerms": [
            "menuItem",
            "Title",
            "title"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "menuitem.description",
      [
        {
          "term": "menuItem.description",
          "type": "variable",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 64,
            "column": 0
          },
          "context": "description string",
          "surroundingLines": [
            "description string"
          ],
          "relatedTerms": [
            "string"
          ],
          "language": "go"
        },
        {
          "term": "menuItem.Description",
          "type": "function",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 69,
            "column": 0
          },
          "context": "func (i menuItem) Description() string { return i.description }",
          "surroundingLines": [
            "",
            "func (i menuItem) Title() string       { return i.title }",
            "func (i menuItem) Description() string { return i.description }",
            "func (i menuItem) FilterValue() string { return i.title }",
            ""
          ],
          "relatedTerms": [
            "menuItem",
            "Description",
            "description"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "menuitem.action",
      [
        {
          "term": "menuItem.action",
          "type": "variable",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 65,
            "column": 0
          },
          "context": "action      string",
          "surroundingLines": [
            "action      string"
          ],
          "relatedTerms": [
            "string"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "menuitem.filtervalue",
      [
        {
          "term": "menuItem.FilterValue",
          "type": "function",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 70,
            "column": 0
          },
          "context": "func (i menuItem) FilterValue() string { return i.title }",
          "surroundingLines": [
            "func (i menuItem) Title() string       { return i.title }",
            "func (i menuItem) Description() string { return i.description }",
            "func (i menuItem) FilterValue() string { return i.title }",
            "",
            "// Main model"
          ],
          "relatedTerms": [
            "menuItem",
            "FilterValue",
            "title"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "model.mainmenu",
      [
        {
          "term": "model.mainMenu",
          "type": "variable",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 75,
            "column": 0
          },
          "context": "mainMenu    list.Model",
          "surroundingLines": [
            "mainMenu    list.Model"
          ],
          "relatedTerms": [
            "list"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "model.searchinput",
      [
        {
          "term": "model.searchInput",
          "type": "variable",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 76,
            "column": 0
          },
          "context": "searchInput textinput.Model",
          "surroundingLines": [
            "searchInput textinput.Model"
          ],
          "relatedTerms": [
            "textinput"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "model.results",
      [
        {
          "term": "model.results",
          "type": "variable",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 77,
            "column": 0
          },
          "context": "results     string",
          "surroundingLines": [
            "results     string"
          ],
          "relatedTerms": [
            "string"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "items",
      [
        {
          "term": "items",
          "type": "variable",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 83,
            "column": 0
          },
          "context": "items := []list.Item{",
          "surroundingLines": [
            "func initialModel() model {",
            "// Main menu items",
            "items := []list.Item{",
            "menuItem{",
            "title:       \"🔍 Pattern Search\","
          ],
          "relatedTerms": [
            "items",
            "list",
            "Item"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "🔍 pattern search",
      [
        {
          "term": "🔍 Pattern Search",
          "type": "string",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 85,
            "column": 16
          },
          "context": "title:       \"🔍 Pattern Search\",",
          "surroundingLines": [
            "title:       \"🔍 Pattern Search\","
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "search for specific terms with and/or/not logic",
      [
        {
          "term": "Search for specific terms with AND/OR/NOT logic",
          "type": "string",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 86,
            "column": 16
          },
          "context": "description: \"Search for specific terms with AND/OR/NOT logic\",",
          "surroundingLines": [
            "description: \"Search for specific terms with AND/OR/NOT logic\","
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "📦 concept groups",
      [
        {
          "term": "📦 Concept Groups",
          "type": "string",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 90,
            "column": 16
          },
          "context": "title:       \"📦 Concept Groups\",",
          "surroundingLines": [
            "title:       \"📦 Concept Groups\","
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "search predefined semantic groups",
      [
        {
          "term": "Search predefined semantic groups",
          "type": "string",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 91,
            "column": 16
          },
          "context": "description: \"Search predefined semantic groups\",",
          "surroundingLines": [
            "description: \"Search predefined semantic groups\","
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "🔗 find references",
      [
        {
          "term": "🔗 Find References",
          "type": "string",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 95,
            "column": 16
          },
          "context": "title:       \"🔗 Find References\",",
          "surroundingLines": [
            "title:       \"🔗 Find References\","
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "find all usages of a symbol",
      [
        {
          "term": "Find all usages of a symbol",
          "type": "string",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 96,
            "column": 16
          },
          "context": "description: \"Find all usages of a symbol\",",
          "surroundingLines": [
            "description: \"Find all usages of a symbol\","
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "📊 analyze changes",
      [
        {
          "term": "📊 Analyze Changes",
          "type": "string",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 100,
            "column": 16
          },
          "context": "title:       \"📊 Analyze Changes\",",
          "surroundingLines": [
            "title:       \"📊 Analyze Changes\","
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "impact analysis of uncommitted changes",
      [
        {
          "term": "Impact analysis of uncommitted changes",
          "type": "string",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 101,
            "column": 16
          },
          "context": "description: \"Impact analysis of uncommitted changes\",",
          "surroundingLines": [
            "description: \"Impact analysis of uncommitted changes\","
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "🤖 claude batch mode",
      [
        {
          "term": "🤖 Claude Batch Mode",
          "type": "string",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 105,
            "column": 16
          },
          "context": "title:       \"🤖 Claude Batch Mode\",",
          "surroundingLines": [
            "title:       \"🤖 Claude Batch Mode\","
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "comprehensive multi-search for exploration",
      [
        {
          "term": "Comprehensive multi-search for exploration",
          "type": "string",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 106,
            "column": 16
          },
          "context": "description: \"Comprehensive multi-search for exploration\",",
          "surroundingLines": [
            "description: \"Comprehensive multi-search for exploration\","
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "comprehensive multi",
      [
        {
          "term": "Comprehensive multi-search for exploration",
          "type": "string",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 106,
            "column": 16
          },
          "context": "description: \"Comprehensive multi-search for exploration\",",
          "surroundingLines": [
            "description: \"Comprehensive multi-search for exploration\","
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "search for exploration",
      [
        {
          "term": "Comprehensive multi-search for exploration",
          "type": "string",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 106,
            "column": 16
          },
          "context": "description: \"Comprehensive multi-search for exploration\",",
          "surroundingLines": [
            "description: \"Comprehensive multi-search for exploration\","
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "mainmenu",
      [
        {
          "term": "mainMenu",
          "type": "variable",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 112,
            "column": 0
          },
          "context": "mainMenu := list.New(items, list.NewDefaultDelegate(), 0, 0)",
          "surroundingLines": [
            "",
            "// Create list",
            "mainMenu := list.New(items, list.NewDefaultDelegate(), 0, 0)",
            "mainMenu.Title = \"SmartGrep - Semantic Search\"",
            "mainMenu.SetShowStatusBar(false)"
          ],
          "relatedTerms": [
            "mainMenu",
            "list",
            "New",
            "items",
            "NewDefaultDelegate"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "smartgrep - semantic search",
      [
        {
          "term": "SmartGrep - Semantic Search",
          "type": "string",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 113,
            "column": 18
          },
          "context": "mainMenu.Title = \"SmartGrep - Semantic Search\"",
          "surroundingLines": [
            "mainMenu.Title = \"SmartGrep - Semantic Search\""
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "smartgrep ",
      [
        {
          "term": "SmartGrep - Semantic Search",
          "type": "string",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 113,
            "column": 18
          },
          "context": "mainMenu.Title = \"SmartGrep - Semantic Search\"",
          "surroundingLines": [
            "mainMenu.Title = \"SmartGrep - Semantic Search\""
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      " semantic search",
      [
        {
          "term": "SmartGrep - Semantic Search",
          "type": "string",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 113,
            "column": 18
          },
          "context": "mainMenu.Title = \"SmartGrep - Semantic Search\"",
          "surroundingLines": [
            "mainMenu.Title = \"SmartGrep - Semantic Search\""
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "searchinput",
      [
        {
          "term": "searchInput",
          "type": "variable",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 118,
            "column": 0
          },
          "context": "searchInput := textinput.New()",
          "surroundingLines": [
            "",
            "// Search input",
            "searchInput := textinput.New()",
            "searchInput.Placeholder = \"Enter search pattern...\"",
            "searchInput.CharLimit = 200"
          ],
          "relatedTerms": [
            "searchInput",
            "textinput",
            "New"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "enter search pattern...",
      [
        {
          "term": "Enter search pattern...",
          "type": "string",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 119,
            "column": 27
          },
          "context": "searchInput.Placeholder = \"Enter search pattern...\"",
          "surroundingLines": [
            "searchInput.Placeholder = \"Enter search pattern...\""
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "selected",
      [
        {
          "term": "selected",
          "type": "variable",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 149,
            "column": 0
          },
          "context": "selected := m.mainMenu.SelectedItem().(menuItem)",
          "surroundingLines": [
            "return m, tea.Quit",
            "case key.Matches(msg, keys.Select):",
            "selected := m.mainMenu.SelectedItem().(menuItem)",
            "m.mode = selected.action",
            "if m.mode == \"pattern\" || m.mode == \"refs\" {"
          ],
          "relatedTerms": [
            "selected",
            "mainMenu",
            "SelectedItem",
            "menuItem"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "error: %v\\n\\npress 'q' to quit.",
      [
        {
          "term": "Error: %v\\n\\nPress 'q' to quit.",
          "type": "string",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 210,
            "column": 21
          },
          "context": "return fmt.Sprintf(\"Error: %v\\n\\nPress 'q' to quit.\", m.err)",
          "surroundingLines": [
            "return fmt.Sprintf(\"Error: %v\\n\\nPress 'q' to quit.\", m.err)"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "Error: %v\\n\\nPress 'q' to quit.",
          "type": "string",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 209,
            "column": 21
          },
          "context": "return fmt.Sprintf(\"Error: %v\\n\\nPress 'q' to quit.\", m.err)",
          "surroundingLines": [
            "return fmt.Sprintf(\"Error: %v\\n\\nPress 'q' to quit.\", m.err)"
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "🔍 smartgrep tui",
      [
        {
          "term": "🔍 SmartGrep TUI",
          "type": "string",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 215,
            "column": 27
          },
          "context": "return titleStyle.Render(\"🔍 SmartGrep TUI\") + \"\\n\\n\" + m.mainMenu.View()",
          "surroundingLines": [
            "return titleStyle.Render(\"🔍 SmartGrep TUI\") + \"\\n\\n\" + m.mainMenu.View()"
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "pattern search",
      [
        {
          "term": "Pattern Search",
          "type": "string",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 218,
            "column": 27
          },
          "context": "return titleStyle.Render(\"Pattern Search\") + \"\\n\\n\" +",
          "surroundingLines": [
            "return titleStyle.Render(\"Pattern Search\") + \"\\n\\n\" +"
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "enter search pattern (use | for or, & for and, ! for not):\\n\\n",
      [
        {
          "term": "Enter search pattern (use | for OR, & for AND, ! for NOT):\\n\\n",
          "type": "string",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 219,
            "column": 3
          },
          "context": "\"Enter search pattern (use | for OR, & for AND, ! for NOT):\\n\\n\" +",
          "surroundingLines": [
            "\"Enter search pattern (use | for OR, & for AND, ! for NOT):\\n\\n\" +"
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "press enter to search, esc to go back",
      [
        {
          "term": "Press Enter to search, Esc to go back",
          "type": "string",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 221,
            "column": 3
          },
          "context": "\"Press Enter to search, Esc to go back\"",
          "surroundingLines": [
            "\"Press Enter to search, Esc to go back\""
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "Press Enter to search, Esc to go back",
          "type": "string",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 227,
            "column": 3
          },
          "context": "\"Press Enter to search, Esc to go back\"",
          "surroundingLines": [
            "\"Press Enter to search, Esc to go back\""
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "find references",
      [
        {
          "term": "Find References",
          "type": "string",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 224,
            "column": 27
          },
          "context": "return titleStyle.Render(\"Find References\") + \"\\n\\n\" +",
          "surroundingLines": [
            "return titleStyle.Render(\"Find References\") + \"\\n\\n\" +"
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "enter symbol name:\\n\\n",
      [
        {
          "term": "Enter symbol name:\\n\\n",
          "type": "string",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 225,
            "column": 3
          },
          "context": "\"Enter symbol name:\\n\\n\" +",
          "surroundingLines": [
            "\"Enter symbol name:\\n\\n\" +"
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "search results",
      [
        {
          "term": "Search Results",
          "type": "string",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 230,
            "column": 27
          },
          "context": "return titleStyle.Render(\"Search Results\") + \"\\n\\n\" +",
          "surroundingLines": [
            "return titleStyle.Render(\"Search Results\") + \"\\n\\n\" +"
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "press esc to go back, q to quit",
      [
        {
          "term": "Press Esc to go back, q to quit",
          "type": "string",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 232,
            "column": 3
          },
          "context": "\"Press Esc to go back, q to quit\"",
          "surroundingLines": [
            "\"Press Esc to go back, q to quit\""
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "loading...",
      [
        {
          "term": "Loading...",
          "type": "string",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 235,
            "column": 9
          },
          "context": "return \"Loading...\"",
          "surroundingLines": [
            "return \"Loading...\""
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "Loading...",
          "type": "string",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 297,
            "column": 9
          },
          "context": "return \"Loading...\"",
          "surroundingLines": [
            "return \"Loading...\""
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "searchresultmsg",
      [
        {
          "term": "searchResultMsg",
          "type": "class",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 240,
            "column": 0
          },
          "context": "type searchResultMsg string",
          "surroundingLines": [
            "",
            "// Commands",
            "type searchResultMsg string",
            "type errMsg error",
            ""
          ],
          "relatedTerms": [
            "searchResultMsg"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "errmsg",
      [
        {
          "term": "errMsg",
          "type": "class",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 241,
            "column": 0
          },
          "context": "type errMsg error",
          "surroundingLines": [
            "// Commands",
            "type searchResultMsg string",
            "type errMsg error",
            "",
            "func (m model) executeSearch() tea.Cmd {"
          ],
          "relatedTerms": [
            "errMsg"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "model.executesearch",
      [
        {
          "term": "model.executeSearch",
          "type": "function",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 243,
            "column": 0
          },
          "context": "func (m model) executeSearch() tea.Cmd {",
          "surroundingLines": [
            "type errMsg error",
            "",
            "func (m model) executeSearch() tea.Cmd {",
            "return func() tea.Msg {",
            "var cmdArgs []string"
          ],
          "relatedTerms": [
            "model",
            "executeSearch",
            "tea",
            "Cmd"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "search pattern required",
      [
        {
          "term": "search pattern required",
          "type": "string",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 250,
            "column": 29
          },
          "context": "return errMsg(fmt.Errorf(\"search pattern required\"))",
          "surroundingLines": [
            "return errMsg(fmt.Errorf(\"search pattern required\"))"
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "../../src/tools/smartgrep/cli.ts",
      [
        {
          "term": "../../src/tools/smartgrep/cli.ts",
          "type": "string",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 252,
            "column": 29
          },
          "context": "cmdArgs = []string{\"run\", \"../../src/tools/smartgrep/cli.ts\", m.searchInput.Value()}",
          "surroundingLines": [
            "cmdArgs = []string{\"run\", \"../../src/tools/smartgrep/cli.ts\", m.searchInput.Value()}"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "../../src/tools/smartgrep/cli.ts",
          "type": "string",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 258,
            "column": 29
          },
          "context": "cmdArgs = []string{\"run\", \"../../src/tools/smartgrep/cli.ts\", \"refs\", m.searchInput.Value()}",
          "surroundingLines": [
            "cmdArgs = []string{\"run\", \"../../src/tools/smartgrep/cli.ts\", \"refs\", m.searchInput.Value()}"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "../../src/tools/smartgrep/cli.ts",
          "type": "string",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 262,
            "column": 29
          },
          "context": "cmdArgs = []string{\"run\", \"../../src/tools/smartgrep/cli.ts\", \"group\", \"list\"}",
          "surroundingLines": [
            "cmdArgs = []string{\"run\", \"../../src/tools/smartgrep/cli.ts\", \"group\", \"list\"}"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "../../src/tools/smartgrep/cli.ts",
          "type": "string",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 265,
            "column": 29
          },
          "context": "cmdArgs = []string{\"run\", \"../../src/tools/smartgrep/cli.ts\", \"changes\"}",
          "surroundingLines": [
            "cmdArgs = []string{\"run\", \"../../src/tools/smartgrep/cli.ts\", \"changes\"}"
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "symbol name required",
      [
        {
          "term": "symbol name required",
          "type": "string",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 256,
            "column": 29
          },
          "context": "return errMsg(fmt.Errorf(\"symbol name required\"))",
          "surroundingLines": [
            "return errMsg(fmt.Errorf(\"symbol name required\"))"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "symbol name required",
          "type": "string",
          "location": {
            "file": "cmd/smartgrep/main.go",
            "line": 152,
            "column": 21
          },
          "context": "return fmt.Errorf(\"symbol name required\")",
          "surroundingLines": [
            "return fmt.Errorf(\"symbol name required\")"
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "topic",
      [
        {
          "term": "topic",
          "type": "variable",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 269,
            "column": 0
          },
          "context": "topic := \"general\"",
          "surroundingLines": [
            "case \"claude\":",
            "// Special handling for Claude batch mode",
            "topic := \"general\"",
            "if m.searchInput.Value() != \"\" {",
            "topic = m.searchInput.Value()"
          ],
          "relatedTerms": [
            "topic",
            "general"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "claude batch mode for topic: %s\\n\\nthis would run multiple searches and create a comprehensive report.\\n(full implementation pending)",
      [
        {
          "term": "Claude Batch Mode for topic: %s\\n\\nThis would run multiple searches and create a comprehensive report.\\n(Full implementation pending)",
          "type": "string",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 273,
            "column": 38
          },
          "context": "return searchResultMsg(fmt.Sprintf(\"Claude Batch Mode for topic: %s\\n\\nThis would run multiple searches and create a comprehensive report.\\n(Full implementation pending)\", topic))",
          "surroundingLines": [
            "return searchResultMsg(fmt.Sprintf(\"Claude Batch Mode for topic: %s\\n\\nThis would run multiple searches and create a comprehensive report.\\n(Full implementation pending)\", topic))"
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "command failed: %w\\n%s",
      [
        {
          "term": "command failed: %w\\n%s",
          "type": "string",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 280,
            "column": 28
          },
          "context": "return errMsg(fmt.Errorf(\"command failed: %w\\n%s\", err, string(output)))",
          "surroundingLines": [
            "return errMsg(fmt.Errorf(\"command failed: %w\\n%s\", err, string(output)))"
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "rungrouptui",
      [
        {
          "term": "RunGroupTUI",
          "type": "function",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 295,
            "column": 0
          },
          "context": "func RunGroupTUI() error {",
          "surroundingLines": [
            "",
            "// RunGroupTUI launches group-specific TUI",
            "func RunGroupTUI() error {",
            "// For now, redirect to main TUI",
            "return RunTUI()"
          ],
          "relatedTerms": [
            "RunGroupTUI"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "runrefstui",
      [
        {
          "term": "RunRefsTUI",
          "type": "function",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 301,
            "column": 0
          },
          "context": "func RunRefsTUI() error {",
          "surroundingLines": [
            "",
            "// RunRefsTUI launches refs-specific TUI",
            "func RunRefsTUI() error {",
            "// For now, redirect to main TUI",
            "return RunTUI()"
          ],
          "relatedTerms": [
            "RunRefsTUI"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "runchangestui",
      [
        {
          "term": "RunChangesTUI",
          "type": "function",
          "location": {
            "file": "internal/smartgrep/tui.go",
            "line": 307,
            "column": 0
          },
          "context": "func RunChangesTUI() error {",
          "surroundingLines": [
            "",
            "// RunChangesTUI launches changes-specific TUI",
            "func RunChangesTUI() error {",
            "// For now, redirect to main TUI",
            "return RunTUI()"
          ],
          "relatedTerms": [
            "RunChangesTUI"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "config",
      [
        {
          "term": "config",
          "type": "module",
          "location": {
            "file": "internal/config/config.go",
            "line": 1,
            "column": 0
          },
          "context": "package config",
          "surroundingLines": [
            "package config"
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "path/filepath",
      [
        {
          "term": "path/filepath",
          "type": "string",
          "location": {
            "file": "internal/config/config.go",
            "line": 5,
            "column": 1
          },
          "context": "\"path/filepath\"",
          "surroundingLines": [
            "\"path/filepath\""
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "getsmartgreppath",
      [
        {
          "term": "GetSmartgrepPath",
          "type": "function",
          "location": {
            "file": "internal/config/config.go",
            "line": 9,
            "column": 0
          },
          "context": "func GetSmartgrepPath() string {",
          "surroundingLines": [
            "",
            "// GetSmartgrepPath returns the path to the smartgrep CLI",
            "func GetSmartgrepPath() string {",
            "// Check for environment variable first (for custom installations)",
            "if path := os.Getenv(\"SMARTGREP_CLI_PATH\"); path != \"\" {"
          ],
          "relatedTerms": [
            "GetSmartgrepPath"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "smartgrep_cli_path",
      [
        {
          "term": "SMARTGREP_CLI_PATH",
          "type": "string",
          "location": {
            "file": "internal/config/config.go",
            "line": 11,
            "column": 22
          },
          "context": "if path := os.Getenv(\"SMARTGREP_CLI_PATH\"); path != \"\" {",
          "surroundingLines": [
            "if path := os.Getenv(\"SMARTGREP_CLI_PATH\"); path != \"\" {"
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "cli",
      [
        {
          "term": "SMARTGREP_CLI_PATH",
          "type": "string",
          "location": {
            "file": "internal/config/config.go",
            "line": 11,
            "column": 22
          },
          "context": "if path := os.Getenv(\"SMARTGREP_CLI_PATH\"); path != \"\" {",
          "surroundingLines": [
            "if path := os.Getenv(\"SMARTGREP_CLI_PATH\"); path != \"\" {"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "CURATOR_CLI_PATH",
          "type": "string",
          "location": {
            "file": "internal/config/config.go",
            "line": 40,
            "column": 22
          },
          "context": "if path := os.Getenv(\"CURATOR_CLI_PATH\"); path != \"\" {",
          "surroundingLines": [
            "if path := os.Getenv(\"CURATOR_CLI_PATH\"); path != \"\" {"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "curator-cli",
          "type": "string",
          "location": {
            "file": "internal/config/config.go",
            "line": 49,
            "column": 62
          },
          "context": "filepath.Join(dir, \"..\", \"..\", \"..\", \"..\", \"src\", \"tools\", \"curator-cli\", \"cli.ts\"),",
          "surroundingLines": [
            "filepath.Join(dir, \"..\", \"..\", \"..\", \"..\", \"src\", \"tools\", \"curator-cli\", \"cli.ts\"),"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "curator-cli",
          "type": "string",
          "location": {
            "file": "internal/config/config.go",
            "line": 50,
            "column": 50
          },
          "context": "filepath.Join(dir, \"..\", \"..\", \"src\", \"tools\", \"curator-cli\", \"cli.ts\"),",
          "surroundingLines": [
            "filepath.Join(dir, \"..\", \"..\", \"src\", \"tools\", \"curator-cli\", \"cli.ts\"),"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "MONITOR_CLI_PATH",
          "type": "string",
          "location": {
            "file": "internal/config/config.go",
            "line": 67,
            "column": 22
          },
          "context": "if path := os.Getenv(\"MONITOR_CLI_PATH\"); path != \"\" {",
          "surroundingLines": [
            "if path := os.Getenv(\"MONITOR_CLI_PATH\"); path != \"\" {"
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "path",
      [
        {
          "term": "SMARTGREP_CLI_PATH",
          "type": "string",
          "location": {
            "file": "internal/config/config.go",
            "line": 11,
            "column": 22
          },
          "context": "if path := os.Getenv(\"SMARTGREP_CLI_PATH\"); path != \"\" {",
          "surroundingLines": [
            "if path := os.Getenv(\"SMARTGREP_CLI_PATH\"); path != \"\" {"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "CURATOR_CLI_PATH",
          "type": "string",
          "location": {
            "file": "internal/config/config.go",
            "line": 40,
            "column": 22
          },
          "context": "if path := os.Getenv(\"CURATOR_CLI_PATH\"); path != \"\" {",
          "surroundingLines": [
            "if path := os.Getenv(\"CURATOR_CLI_PATH\"); path != \"\" {"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "MONITOR_CLI_PATH",
          "type": "string",
          "location": {
            "file": "internal/config/config.go",
            "line": 67,
            "column": 22
          },
          "context": "if path := os.Getenv(\"MONITOR_CLI_PATH\"); path != \"\" {",
          "surroundingLines": [
            "if path := os.Getenv(\"MONITOR_CLI_PATH\"); path != \"\" {"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "path",
          "type": "variable",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 41,
            "column": 0
          },
          "context": "path := projectPath",
          "surroundingLines": [
            "Args:  cobra.MaximumNArgs(1),",
            "RunE: func(cmd *cobra.Command, args []string) error {",
            "path := projectPath",
            "if len(args) > 0 {",
            "path = args[0]"
          ],
          "relatedTerms": [
            "path",
            "projectPath"
          ],
          "language": "go"
        },
        {
          "term": "path",
          "type": "variable",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 110,
            "column": 0
          },
          "context": "path := projectPath",
          "surroundingLines": [
            "Args:  cobra.MaximumNArgs(1),",
            "RunE: func(cmd *cobra.Command, args []string) error {",
            "path := projectPath",
            "if len(args) > 0 {",
            "path = args[0]"
          ],
          "relatedTerms": [
            "path",
            "projectPath"
          ],
          "language": "go"
        },
        {
          "term": "path",
          "type": "variable",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 195,
            "column": 0
          },
          "context": "path := projectPath",
          "surroundingLines": [
            "Args:  cobra.MaximumNArgs(1),",
            "RunE: func(cmd *cobra.Command, args []string) error {",
            "path := projectPath",
            "if len(args) > 0 {",
            "path = args[0]"
          ],
          "relatedTerms": [
            "path",
            "projectPath"
          ],
          "language": "go"
        },
        {
          "term": "path",
          "type": "variable",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 224,
            "column": 0
          },
          "context": "path := projectPath",
          "surroundingLines": [
            "Args:  cobra.MaximumNArgs(1),",
            "RunE: func(cmd *cobra.Command, args []string) error {",
            "path := projectPath",
            "if len(args) > 0 {",
            "path = args[0]"
          ],
          "relatedTerms": [
            "path",
            "projectPath"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "dir",
      [
        {
          "term": "dir",
          "type": "variable",
          "location": {
            "file": "internal/config/config.go",
            "line": 18,
            "column": 0
          },
          "context": "dir := filepath.Dir(execPath)",
          "surroundingLines": [
            "if execPath, err := os.Executable(); err == nil {",
            "// Check if TypeScript version exists relative to executable",
            "dir := filepath.Dir(execPath)",
            "",
            "// Development paths (when running from build/bin/)"
          ],
          "relatedTerms": [
            "dir",
            "filepath",
            "Dir",
            "execPath"
          ],
          "language": "go"
        },
        {
          "term": "dir",
          "type": "variable",
          "location": {
            "file": "internal/config/config.go",
            "line": 46,
            "column": 0
          },
          "context": "dir := filepath.Dir(execPath)",
          "surroundingLines": [
            "// Check if we're in development mode",
            "if execPath, err := os.Executable(); err == nil {",
            "dir := filepath.Dir(execPath)",
            "",
            "devPaths := []string{"
          ],
          "relatedTerms": [
            "dir",
            "filepath",
            "Dir",
            "execPath"
          ],
          "language": "go"
        },
        {
          "term": "dir",
          "type": "variable",
          "location": {
            "file": "internal/config/config.go",
            "line": 73,
            "column": 0
          },
          "context": "dir := filepath.Dir(execPath)",
          "surroundingLines": [
            "// Check if we're in development mode",
            "if execPath, err := os.Executable(); err == nil {",
            "dir := filepath.Dir(execPath)",
            "",
            "devPaths := []string{"
          ],
          "relatedTerms": [
            "dir",
            "filepath",
            "Dir",
            "execPath"
          ],
          "language": "go"
        },
        {
          "term": "dir",
          "type": "variable",
          "location": {
            "file": "internal/config/config.go",
            "line": 95,
            "column": 0
          },
          "context": "dir := filepath.Dir(execPath)",
          "surroundingLines": [
            "// Check if any of the TypeScript files exist",
            "if execPath, err := os.Executable(); err == nil {",
            "dir := filepath.Dir(execPath)",
            "devPath := filepath.Join(dir, \"..\", \"..\", \"..\", \"..\", \"src\", \"tools\", \"smartgrep\", \"cli.ts\")",
            "if _, err := os.Stat(devPath); err == nil {"
          ],
          "relatedTerms": [
            "dir",
            "filepath",
            "Dir",
            "execPath"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "devpaths",
      [
        {
          "term": "devPaths",
          "type": "variable",
          "location": {
            "file": "internal/config/config.go",
            "line": 21,
            "column": 0
          },
          "context": "devPaths := []string{",
          "surroundingLines": [
            "",
            "// Development paths (when running from build/bin/)",
            "devPaths := []string{",
            "filepath.Join(dir, \"..\", \"..\", \"..\", \"..\", \"src\", \"tools\", \"smartgrep\", \"cli.ts\"),",
            "filepath.Join(dir, \"..\", \"..\", \"src\", \"tools\", \"smartgrep\", \"cli.ts\"),"
          ],
          "relatedTerms": [
            "devPaths"
          ],
          "language": "go"
        },
        {
          "term": "devPaths",
          "type": "variable",
          "location": {
            "file": "internal/config/config.go",
            "line": 48,
            "column": 0
          },
          "context": "devPaths := []string{",
          "surroundingLines": [
            "dir := filepath.Dir(execPath)",
            "",
            "devPaths := []string{",
            "filepath.Join(dir, \"..\", \"..\", \"..\", \"..\", \"src\", \"tools\", \"curator-cli\", \"cli.ts\"),",
            "filepath.Join(dir, \"..\", \"..\", \"src\", \"tools\", \"curator-cli\", \"cli.ts\"),"
          ],
          "relatedTerms": [
            "devPaths"
          ],
          "language": "go"
        },
        {
          "term": "devPaths",
          "type": "variable",
          "location": {
            "file": "internal/config/config.go",
            "line": 75,
            "column": 0
          },
          "context": "devPaths := []string{",
          "surroundingLines": [
            "dir := filepath.Dir(execPath)",
            "",
            "devPaths := []string{",
            "filepath.Join(dir, \"..\", \"..\", \"..\", \"..\", \"src\", \"tools\", \"monitor\", \"cli.ts\"),",
            "filepath.Join(dir, \"..\", \"..\", \"src\", \"tools\", \"monitor\", \"cli.ts\"),"
          ],
          "relatedTerms": [
            "devPaths"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "cli.ts",
      [
        {
          "term": "cli.ts",
          "type": "string",
          "location": {
            "file": "internal/config/config.go",
            "line": 22,
            "column": 75
          },
          "context": "filepath.Join(dir, \"..\", \"..\", \"..\", \"..\", \"src\", \"tools\", \"smartgrep\", \"cli.ts\"),",
          "surroundingLines": [
            "filepath.Join(dir, \"..\", \"..\", \"..\", \"..\", \"src\", \"tools\", \"smartgrep\", \"cli.ts\"),"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "cli.ts",
          "type": "string",
          "location": {
            "file": "internal/config/config.go",
            "line": 23,
            "column": 63
          },
          "context": "filepath.Join(dir, \"..\", \"..\", \"src\", \"tools\", \"smartgrep\", \"cli.ts\"),",
          "surroundingLines": [
            "filepath.Join(dir, \"..\", \"..\", \"src\", \"tools\", \"smartgrep\", \"cli.ts\"),"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "cli.ts",
          "type": "string",
          "location": {
            "file": "internal/config/config.go",
            "line": 49,
            "column": 77
          },
          "context": "filepath.Join(dir, \"..\", \"..\", \"..\", \"..\", \"src\", \"tools\", \"curator-cli\", \"cli.ts\"),",
          "surroundingLines": [
            "filepath.Join(dir, \"..\", \"..\", \"..\", \"..\", \"src\", \"tools\", \"curator-cli\", \"cli.ts\"),"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "cli.ts",
          "type": "string",
          "location": {
            "file": "internal/config/config.go",
            "line": 50,
            "column": 65
          },
          "context": "filepath.Join(dir, \"..\", \"..\", \"src\", \"tools\", \"curator-cli\", \"cli.ts\"),",
          "surroundingLines": [
            "filepath.Join(dir, \"..\", \"..\", \"src\", \"tools\", \"curator-cli\", \"cli.ts\"),"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "cli.ts",
          "type": "string",
          "location": {
            "file": "internal/config/config.go",
            "line": 76,
            "column": 73
          },
          "context": "filepath.Join(dir, \"..\", \"..\", \"..\", \"..\", \"src\", \"tools\", \"monitor\", \"cli.ts\"),",
          "surroundingLines": [
            "filepath.Join(dir, \"..\", \"..\", \"..\", \"..\", \"src\", \"tools\", \"monitor\", \"cli.ts\"),"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "cli.ts",
          "type": "string",
          "location": {
            "file": "internal/config/config.go",
            "line": 77,
            "column": 61
          },
          "context": "filepath.Join(dir, \"..\", \"..\", \"src\", \"tools\", \"monitor\", \"cli.ts\"),",
          "surroundingLines": [
            "filepath.Join(dir, \"..\", \"..\", \"src\", \"tools\", \"monitor\", \"cli.ts\"),"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "cli.ts",
          "type": "string",
          "location": {
            "file": "internal/config/config.go",
            "line": 96,
            "column": 85
          },
          "context": "devPath := filepath.Join(dir, \"..\", \"..\", \"..\", \"..\", \"src\", \"tools\", \"smartgrep\", \"cli.ts\")",
          "surroundingLines": [
            "devPath := filepath.Join(dir, \"..\", \"..\", \"..\", \"..\", \"src\", \"tools\", \"smartgrep\", \"cli.ts\")"
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "getcuratorpath",
      [
        {
          "term": "GetCuratorPath",
          "type": "function",
          "location": {
            "file": "internal/config/config.go",
            "line": 38,
            "column": 0
          },
          "context": "func GetCuratorPath() string {",
          "surroundingLines": [
            "",
            "// GetCuratorPath returns the path to the curator CLI",
            "func GetCuratorPath() string {",
            "// Check for environment variable first",
            "if path := os.Getenv(\"CURATOR_CLI_PATH\"); path != \"\" {"
          ],
          "relatedTerms": [
            "GetCuratorPath"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "curator_cli_path",
      [
        {
          "term": "CURATOR_CLI_PATH",
          "type": "string",
          "location": {
            "file": "internal/config/config.go",
            "line": 40,
            "column": 22
          },
          "context": "if path := os.Getenv(\"CURATOR_CLI_PATH\"); path != \"\" {",
          "surroundingLines": [
            "if path := os.Getenv(\"CURATOR_CLI_PATH\"); path != \"\" {"
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "curator-cli",
      [
        {
          "term": "curator-cli",
          "type": "string",
          "location": {
            "file": "internal/config/config.go",
            "line": 49,
            "column": 62
          },
          "context": "filepath.Join(dir, \"..\", \"..\", \"..\", \"..\", \"src\", \"tools\", \"curator-cli\", \"cli.ts\"),",
          "surroundingLines": [
            "filepath.Join(dir, \"..\", \"..\", \"..\", \"..\", \"src\", \"tools\", \"curator-cli\", \"cli.ts\"),"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "curator-cli",
          "type": "string",
          "location": {
            "file": "internal/config/config.go",
            "line": 50,
            "column": 50
          },
          "context": "filepath.Join(dir, \"..\", \"..\", \"src\", \"tools\", \"curator-cli\", \"cli.ts\"),",
          "surroundingLines": [
            "filepath.Join(dir, \"..\", \"..\", \"src\", \"tools\", \"curator-cli\", \"cli.ts\"),"
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "getmonitorpath",
      [
        {
          "term": "GetMonitorPath",
          "type": "function",
          "location": {
            "file": "internal/config/config.go",
            "line": 65,
            "column": 0
          },
          "context": "func GetMonitorPath() string {",
          "surroundingLines": [
            "",
            "// GetMonitorPath returns the path to the monitor CLI",
            "func GetMonitorPath() string {",
            "// Check for environment variable first",
            "if path := os.Getenv(\"MONITOR_CLI_PATH\"); path != \"\" {"
          ],
          "relatedTerms": [
            "GetMonitorPath"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "monitor_cli_path",
      [
        {
          "term": "MONITOR_CLI_PATH",
          "type": "string",
          "location": {
            "file": "internal/config/config.go",
            "line": 67,
            "column": 22
          },
          "context": "if path := os.Getenv(\"MONITOR_CLI_PATH\"); path != \"\" {",
          "surroundingLines": [
            "if path := os.Getenv(\"MONITOR_CLI_PATH\"); path != \"\" {"
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "monitor",
      [
        {
          "term": "MONITOR_CLI_PATH",
          "type": "string",
          "location": {
            "file": "internal/config/config.go",
            "line": 67,
            "column": 22
          },
          "context": "if path := os.Getenv(\"MONITOR_CLI_PATH\"); path != \"\" {",
          "surroundingLines": [
            "if path := os.Getenv(\"MONITOR_CLI_PATH\"); path != \"\" {"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "monitor",
          "type": "module",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 1,
            "column": 0
          },
          "context": "package monitor",
          "surroundingLines": [
            "package monitor"
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "isdevmode",
      [
        {
          "term": "IsDevMode",
          "type": "function",
          "location": {
            "file": "internal/config/config.go",
            "line": 92,
            "column": 0
          },
          "context": "func IsDevMode() bool {",
          "surroundingLines": [
            "",
            "// IsDevMode returns true if running in development mode (with .ts files)",
            "func IsDevMode() bool {",
            "// Check if any of the TypeScript files exist",
            "if execPath, err := os.Executable(); err == nil {"
          ],
          "relatedTerms": [
            "IsDevMode"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "devpath",
      [
        {
          "term": "devPath",
          "type": "variable",
          "location": {
            "file": "internal/config/config.go",
            "line": 96,
            "column": 0
          },
          "context": "devPath := filepath.Join(dir, \"..\", \"..\", \"..\", \"..\", \"src\", \"tools\", \"smartgrep\", \"cli.ts\")",
          "surroundingLines": [
            "if execPath, err := os.Executable(); err == nil {",
            "dir := filepath.Dir(execPath)",
            "devPath := filepath.Join(dir, \"..\", \"..\", \"..\", \"..\", \"src\", \"tools\", \"smartgrep\", \"cli.ts\")",
            "if _, err := os.Stat(devPath); err == nil {",
            "return true"
          ],
          "relatedTerms": [
            "devPath",
            "filepath",
            "Join",
            "dir",
            "src",
            "tools",
            "smartgrep",
            "cli"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "getexecutor",
      [
        {
          "term": "GetExecutor",
          "type": "function",
          "location": {
            "file": "internal/config/config.go",
            "line": 105,
            "column": 0
          },
          "context": "func GetExecutor() string {",
          "surroundingLines": [
            "",
            "// GetExecutor returns the command executor (bun for dev, direct for prod)",
            "func GetExecutor() string {",
            "if IsDevMode() {",
            "return \"bun\""
          ],
          "relatedTerms": [
            "GetExecutor"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "github.com/charmbracelet/bubbles/progress",
      [
        {
          "term": "github.com/charmbracelet/bubbles/progress",
          "type": "string",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 9,
            "column": 1
          },
          "context": "\"github.com/charmbracelet/bubbles/progress\"",
          "surroundingLines": [
            "\"github.com/charmbracelet/bubbles/progress\""
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "tickmsg",
      [
        {
          "term": "tickMsg",
          "type": "class",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 45,
            "column": 0
          },
          "context": "type tickMsg time.Time",
          "surroundingLines": [
            "",
            "// Messages",
            "type tickMsg time.Time",
            "type monitorOutputMsg string",
            "type statusMsg struct {"
          ],
          "relatedTerms": [
            "tickMsg",
            "time",
            "Time"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "monitoroutputmsg",
      [
        {
          "term": "monitorOutputMsg",
          "type": "class",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 46,
            "column": 0
          },
          "context": "type monitorOutputMsg string",
          "surroundingLines": [
            "// Messages",
            "type tickMsg time.Time",
            "type monitorOutputMsg string",
            "type statusMsg struct {",
            "filesIndexed int"
          ],
          "relatedTerms": [
            "monitorOutputMsg"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "statusmsg",
      [
        {
          "term": "statusMsg",
          "type": "class",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 47,
            "column": 0
          },
          "context": "type statusMsg struct {",
          "surroundingLines": [
            "type tickMsg time.Time",
            "type monitorOutputMsg string",
            "type statusMsg struct {",
            "filesIndexed int",
            "lastUpdate   time.Time"
          ],
          "relatedTerms": [
            "statusMsg"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "statusmsg.filesindexed",
      [
        {
          "term": "statusMsg.filesIndexed",
          "type": "variable",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 48,
            "column": 0
          },
          "context": "filesIndexed int",
          "surroundingLines": [
            "filesIndexed int"
          ],
          "relatedTerms": [
            "int"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "statusmsg.lastupdate",
      [
        {
          "term": "statusMsg.lastUpdate",
          "type": "variable",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 49,
            "column": 0
          },
          "context": "lastUpdate   time.Time",
          "surroundingLines": [
            "lastUpdate   time.Time"
          ],
          "relatedTerms": [
            "time"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "statusmsg.healthy",
      [
        {
          "term": "statusMsg.healthy",
          "type": "variable",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 50,
            "column": 0
          },
          "context": "healthy      bool",
          "surroundingLines": [
            "healthy      bool"
          ],
          "relatedTerms": [
            "bool"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "model.progress",
      [
        {
          "term": "model.progress",
          "type": "variable",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 57,
            "column": 0
          },
          "context": "progress     progress.Model",
          "surroundingLines": [
            "progress     progress.Model"
          ],
          "relatedTerms": [
            "progress"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "model.events",
      [
        {
          "term": "model.events",
          "type": "variable",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 58,
            "column": 0
          },
          "context": "events       []string",
          "surroundingLines": [
            "events       []string"
          ],
          "relatedTerms": [
            "[]string"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "model.stats",
      [
        {
          "term": "model.stats",
          "type": "variable",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 59,
            "column": 0
          },
          "context": "stats        statusMsg",
          "surroundingLines": [
            "stats        statusMsg"
          ],
          "relatedTerms": [
            "statusMsg"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "model.showoverview",
      [
        {
          "term": "model.showOverview",
          "type": "variable",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 62,
            "column": 0
          },
          "context": "showOverview bool",
          "surroundingLines": [
            "showOverview bool"
          ],
          "relatedTerms": [
            "bool"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "prog",
      [
        {
          "term": "prog",
          "type": "variable",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 68,
            "column": 0
          },
          "context": "prog := progress.New(progress.WithDefaultGradient())",
          "surroundingLines": [
            "func initialModel(mode string, showOverview bool) model {",
            "vp := viewport.New(80, 20)",
            "prog := progress.New(progress.WithDefaultGradient())",
            "",
            "return model{"
          ],
          "relatedTerms": [
            "prog",
            "progress",
            "New",
            "WithDefaultGradient"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "tickcmd",
      [
        {
          "term": "tickCmd",
          "type": "function",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 86,
            "column": 0
          },
          "context": "func tickCmd() tea.Cmd {",
          "surroundingLines": [
            "}",
            "",
            "func tickCmd() tea.Cmd {",
            "return tea.Tick(time.Second, func(t time.Time) tea.Msg {",
            "return tickMsg(t)"
          ],
          "relatedTerms": [
            "tickCmd",
            "tea",
            "Cmd"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "model.startmonitoring",
      [
        {
          "term": "model.startMonitoring",
          "type": "function",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 92,
            "column": 0
          },
          "context": "func (m model) startMonitoring() tea.Cmd {",
          "surroundingLines": [
            "}",
            "",
            "func (m model) startMonitoring() tea.Cmd {",
            "return func() tea.Msg {",
            "switch m.mode {"
          ],
          "relatedTerms": [
            "model",
            "startMonitoring",
            "tea",
            "Cmd"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "../../src/tools/monitor/cli.ts",
      [
        {
          "term": "../../src/tools/monitor/cli.ts",
          "type": "string",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 97,
            "column": 30
          },
          "context": "cmdArgs := []string{\"run\", \"../../src/tools/monitor/cli.ts\", \"watch\"}",
          "surroundingLines": [
            "cmdArgs := []string{\"run\", \"../../src/tools/monitor/cli.ts\", \"watch\"}"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "../../src/tools/monitor/cli.ts",
          "type": "string",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 111,
            "column": 37
          },
          "context": "cmd := exec.Command(\"bun\", \"run\", \"../../src/tools/monitor/cli.ts\", \"status\")",
          "surroundingLines": [
            "cmd := exec.Command(\"bun\", \"run\", \"../../src/tools/monitor/cli.ts\", \"status\")"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "../../src/tools/monitor/cli.ts",
          "type": "string",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 305,
            "column": 35
          },
          "context": "cmd := exec.Command(\"bun\", \"run\", \"../../src/tools/monitor/cli.ts\", \"overview\")",
          "surroundingLines": [
            "cmd := exec.Command(\"bun\", \"run\", \"../../src/tools/monitor/cli.ts\", \"overview\")"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "../../src/tools/monitor/cli.ts",
          "type": "string",
          "location": {
            "file": "cmd/monitor/main.go",
            "line": 44,
            "column": 29
          },
          "context": "cmdArgs := []string{\"run\", \"../../src/tools/monitor/cli.ts\", \"watch\"}",
          "surroundingLines": [
            "cmdArgs := []string{\"run\", \"../../src/tools/monitor/cli.ts\", \"watch\"}"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "../../src/tools/monitor/cli.ts",
          "type": "string",
          "location": {
            "file": "cmd/monitor/main.go",
            "line": 67,
            "column": 29
          },
          "context": "cmdArgs := []string{\"run\", \"../../src/tools/monitor/cli.ts\", \"overview\"}",
          "surroundingLines": [
            "cmdArgs := []string{\"run\", \"../../src/tools/monitor/cli.ts\", \"overview\"}"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "../../src/tools/monitor/cli.ts",
          "type": "string",
          "location": {
            "file": "cmd/monitor/main.go",
            "line": 87,
            "column": 29
          },
          "context": "cmdArgs := []string{\"run\", \"../../src/tools/monitor/cli.ts\", \"status\"}",
          "surroundingLines": [
            "cmdArgs := []string{\"run\", \"../../src/tools/monitor/cli.ts\", \"status\"}"
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "lines",
      [
        {
          "term": "lines",
          "type": "variable",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 118,
            "column": 0
          },
          "context": "lines := strings.Split(string(output), \"\\n\")",
          "surroundingLines": [
            "",
            "// Parse status (simplified)",
            "lines := strings.Split(string(output), \"\\n\")",
            "status := statusMsg{",
            "filesIndexed: len(lines),"
          ],
          "relatedTerms": [
            "lines",
            "strings",
            "Split",
            "output"
          ],
          "language": "go"
        },
        {
          "term": "lines",
          "type": "variable",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 160,
            "column": 0
          },
          "context": "lines := strings.Split(string(msg), \"\\n\")",
          "surroundingLines": [
            "case monitorOutputMsg:",
            "// Parse and add events",
            "lines := strings.Split(string(msg), \"\\n\")",
            "for _, line := range lines {",
            "if line != \"\" {"
          ],
          "relatedTerms": [
            "lines",
            "strings",
            "Split",
            "msg"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "status",
      [
        {
          "term": "status",
          "type": "variable",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 119,
            "column": 0
          },
          "context": "status := statusMsg{",
          "surroundingLines": [
            "// Parse status (simplified)",
            "lines := strings.Split(string(output), \"\\n\")",
            "status := statusMsg{",
            "filesIndexed: len(lines),",
            "lastUpdate:   time.Now(),"
          ],
          "relatedTerms": [
            "status",
            "statusMsg"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "[%s] %s",
      [
        {
          "term": "[%s] %s",
          "type": "string",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 163,
            "column": 44
          },
          "context": "m.events = append(m.events, fmt.Sprintf(\"[%s] %s\",",
          "surroundingLines": [
            "m.events = append(m.events, fmt.Sprintf(\"[%s] %s\","
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "model.renderevents",
      [
        {
          "term": "model.renderEvents",
          "type": "function",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 189,
            "column": 0
          },
          "context": "func (m model) renderEvents() string {",
          "surroundingLines": [
            "}",
            "",
            "func (m model) renderEvents() string {",
            "var sb strings.Builder",
            ""
          ],
          "relatedTerms": [
            "model",
            "renderEvents"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "styled",
      [
        {
          "term": "styled",
          "type": "variable",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 193,
            "column": 0
          },
          "context": "styled := event",
          "surroundingLines": [
            "",
            "for _, event := range m.events {",
            "styled := event",
            "if strings.Contains(event, \"added\") {",
            "styled = addedStyle.Render(event)"
          ],
          "relatedTerms": [
            "styled",
            "event"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "📊 monitor dashboard",
      [
        {
          "term": "📊 Monitor Dashboard",
          "type": "string",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 213,
            "column": 28
          },
          "context": "title := titleStyle.Render(\"📊 Monitor Dashboard\")",
          "surroundingLines": [
            "title := titleStyle.Render(\"📊 Monitor Dashboard\")"
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "stats",
      [
        {
          "term": "stats",
          "type": "variable",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 216,
            "column": 0
          },
          "context": "stats := statsStyle.Render(fmt.Sprintf(",
          "surroundingLines": [
            "",
            "// Stats box",
            "stats := statsStyle.Render(fmt.Sprintf(",
            "\"%s\\n\\n\"+",
            "\"Files Indexed: %d\\n\"+"
          ],
          "relatedTerms": [
            "stats",
            "statsStyle",
            "Render",
            "fmt",
            "Sprintf"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "files indexed: %d\\n",
      [
        {
          "term": "Files Indexed: %d\\n",
          "type": "string",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 218,
            "column": 2
          },
          "context": "\"Files Indexed: %d\\n\"+",
          "surroundingLines": [
            "\"Files Indexed: %d\\n\"+"
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "last update: %s\\n",
      [
        {
          "term": "Last Update: %s\\n",
          "type": "string",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 219,
            "column": 2
          },
          "context": "\"Last Update: %s\\n\"+",
          "surroundingLines": [
            "\"Last Update: %s\\n\"+"
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "status: %s",
      [
        {
          "term": "Status: %s",
          "type": "string",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 220,
            "column": 2
          },
          "context": "\"Status: %s\",",
          "surroundingLines": [
            "\"Status: %s\","
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "✓ healthy",
      [
        {
          "term": "✓ Healthy",
          "type": "string",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 226,
            "column": 29
          },
          "context": "return addedStyle.Render(\"✓ Healthy\")",
          "surroundingLines": [
            "return addedStyle.Render(\"✓ Healthy\")"
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "✗ issues",
      [
        {
          "term": "✗ Issues",
          "type": "string",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 228,
            "column": 30
          },
          "context": "return deletedStyle.Render(\"✗ Issues\")",
          "surroundingLines": [
            "return deletedStyle.Render(\"✗ Issues\")"
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "content",
      [
        {
          "term": "content",
          "type": "variable",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 233,
            "column": 0
          },
          "context": "content := m.viewport.View()",
          "surroundingLines": [
            "",
            "// Main content",
            "content := m.viewport.View()",
            "",
            "// Help"
          ],
          "relatedTerms": [
            "content",
            "viewport",
            "View"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "help",
      [
        {
          "term": "help",
          "type": "variable",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 236,
            "column": 0
          },
          "context": "help := lipgloss.NewStyle().Faint(true).Render(",
          "surroundingLines": [
            "",
            "// Help",
            "help := lipgloss.NewStyle().Faint(true).Render(",
            "\"q: quit • c: clear • ↑/↓: scroll\")",
            ""
          ],
          "relatedTerms": [
            "help",
            "lipgloss",
            "NewStyle",
            "Faint",
            "Render"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "q: quit • c: clear • ↑/↓: scroll",
      [
        {
          "term": "q: quit • c: clear • ↑/↓: scroll",
          "type": "string",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 237,
            "column": 2
          },
          "context": "\"q: quit • c: clear • ↑/↓: scroll\")",
          "surroundingLines": [
            "\"q: quit • c: clear • ↑/↓: scroll\")"
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "runwatchtui",
      [
        {
          "term": "RunWatchTUI",
          "type": "function",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 256,
            "column": 0
          },
          "context": "func RunWatchTUI(withOverview bool) error {",
          "surroundingLines": [
            "",
            "// RunWatchTUI launches watch mode TUI",
            "func RunWatchTUI(withOverview bool) error {",
            "p := tea.NewProgram(",
            "initialModel(\"watch\", withOverview),"
          ],
          "relatedTerms": [
            "RunWatchTUI",
            "withOverview"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "overviewmodel",
      [
        {
          "term": "overviewModel",
          "type": "class",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 266,
            "column": 0
          },
          "context": "type overviewModel struct {",
          "surroundingLines": [
            "",
            "// Simple overview model",
            "type overviewModel struct {",
            "viewport viewport.Model",
            "ready    bool"
          ],
          "relatedTerms": [
            "overviewModel"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "overviewmodel.viewport",
      [
        {
          "term": "overviewModel.viewport",
          "type": "variable",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 267,
            "column": 0
          },
          "context": "viewport viewport.Model",
          "surroundingLines": [
            "viewport viewport.Model"
          ],
          "relatedTerms": [
            "viewport"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "overviewmodel.ready",
      [
        {
          "term": "overviewModel.ready",
          "type": "variable",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 268,
            "column": 0
          },
          "context": "ready    bool",
          "surroundingLines": [
            "ready    bool"
          ],
          "relatedTerms": [
            "bool"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "overviewmodel.init",
      [
        {
          "term": "overviewModel.Init",
          "type": "function",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 271,
            "column": 0
          },
          "context": "func (m overviewModel) Init() tea.Cmd {",
          "surroundingLines": [
            "}",
            "",
            "func (m overviewModel) Init() tea.Cmd {",
            "return nil",
            "}"
          ],
          "relatedTerms": [
            "overviewModel",
            "Init",
            "tea",
            "Cmd"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "overviewmodel.update",
      [
        {
          "term": "overviewModel.Update",
          "type": "function",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 275,
            "column": 0
          },
          "context": "func (m overviewModel) Update(msg tea.Msg) (tea.Model, tea.Cmd) {",
          "surroundingLines": [
            "}",
            "",
            "func (m overviewModel) Update(msg tea.Msg) (tea.Model, tea.Cmd) {",
            "switch msg := msg.(type) {",
            "case tea.WindowSizeMsg:"
          ],
          "relatedTerms": [
            "overviewModel",
            "Update",
            "msg",
            "tea",
            "Msg",
            "Model",
            "Cmd"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "overviewmodel.view",
      [
        {
          "term": "overviewModel.View",
          "type": "function",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 295,
            "column": 0
          },
          "context": "func (m overviewModel) View() string {",
          "surroundingLines": [
            "}",
            "",
            "func (m overviewModel) View() string {",
            "if !m.ready {",
            "return \"Loading...\""
          ],
          "relatedTerms": [
            "overviewModel",
            "View"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "press q to quit",
      [
        {
          "term": "Press q to quit",
          "type": "string",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 299,
            "column": 76
          },
          "context": "return m.viewport.View() + \"\\n\\n\" + lipgloss.NewStyle().Faint(true).Render(\"Press q to quit\")",
          "surroundingLines": [
            "return m.viewport.View() + \"\\n\\n\" + lipgloss.NewStyle().Faint(true).Render(\"Press q to quit\")"
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "runstatustui",
      [
        {
          "term": "RunStatusTUI",
          "type": "function",
          "location": {
            "file": "internal/monitor/tui.go",
            "line": 321,
            "column": 0
          },
          "context": "func RunStatusTUI() error {",
          "surroundingLines": [
            "",
            "// RunStatusTUI launches status TUI",
            "func RunStatusTUI() error {",
            "p := tea.NewProgram(",
            "initialModel(\"status\", false),"
          ],
          "relatedTerms": [
            "RunStatusTUI"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "main",
      [
        {
          "term": "main",
          "type": "module",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 1,
            "column": 0
          },
          "context": "package main",
          "surroundingLines": [
            "package main"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "main",
          "type": "function",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 262,
            "column": 0
          },
          "context": "func main() {",
          "surroundingLines": [
            "}",
            "",
            "func main() {",
            "if err := rootCmd.Execute(); err != nil {",
            "fmt.Fprintln(os.Stderr, err)"
          ],
          "relatedTerms": [
            "main"
          ],
          "language": "go"
        },
        {
          "term": "main",
          "type": "module",
          "location": {
            "file": "cmd/monitor/main.go",
            "line": 1,
            "column": 0
          },
          "context": "package main",
          "surroundingLines": [
            "package main"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "main",
          "type": "function",
          "location": {
            "file": "cmd/monitor/main.go",
            "line": 111,
            "column": 0
          },
          "context": "func main() {",
          "surroundingLines": [
            "}",
            "",
            "func main() {",
            "if err := rootCmd.Execute(); err != nil {",
            "fmt.Fprintln(os.Stderr, err)"
          ],
          "relatedTerms": [
            "main"
          ],
          "language": "go"
        },
        {
          "term": "main",
          "type": "module",
          "location": {
            "file": "cmd/smartgrep/main.go",
            "line": 1,
            "column": 0
          },
          "context": "package main",
          "surroundingLines": [
            "package main"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "main",
          "type": "function",
          "location": {
            "file": "cmd/smartgrep/main.go",
            "line": 177,
            "column": 0
          },
          "context": "func main() {",
          "surroundingLines": [
            "}",
            "",
            "func main() {",
            "// Add subcommands",
            "rootCmd.AddCommand(groupCmd)"
          ],
          "relatedTerms": [
            "main"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "github.com/rlabs-inc/codebase-curator/charm-tui/internal/curator",
      [
        {
          "term": "github.com/RLabs-Inc/codebase-curator/charm-tui/internal/curator",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 8,
            "column": 1
          },
          "context": "\"github.com/RLabs-Inc/codebase-curator/charm-tui/internal/curator\"",
          "surroundingLines": [
            "\"github.com/RLabs-Inc/codebase-curator/charm-tui/internal/curator\""
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "github.com/rlabs",
      [
        {
          "term": "github.com/RLabs-Inc/codebase-curator/charm-tui/internal/curator",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 8,
            "column": 1
          },
          "context": "\"github.com/RLabs-Inc/codebase-curator/charm-tui/internal/curator\"",
          "surroundingLines": [
            "\"github.com/RLabs-Inc/codebase-curator/charm-tui/internal/curator\""
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "github.com/RLabs-Inc/codebase-curator/charm-tui/internal/config",
          "type": "string",
          "location": {
            "file": "cmd/smartgrep/main.go",
            "line": 8,
            "column": 1
          },
          "context": "\"github.com/RLabs-Inc/codebase-curator/charm-tui/internal/config\"",
          "surroundingLines": [
            "\"github.com/RLabs-Inc/codebase-curator/charm-tui/internal/config\""
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "github.com/RLabs-Inc/codebase-curator/charm-tui/internal/smartgrep",
          "type": "string",
          "location": {
            "file": "cmd/smartgrep/main.go",
            "line": 9,
            "column": 1
          },
          "context": "\"github.com/RLabs-Inc/codebase-curator/charm-tui/internal/smartgrep\"",
          "surroundingLines": [
            "\"github.com/RLabs-Inc/codebase-curator/charm-tui/internal/smartgrep\""
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "github.com/RLabs-Inc/codebase-curator/charm-tui/internal/monitor",
          "type": "string",
          "location": {
            "file": "cmd/monitor/main.go",
            "line": 8,
            "column": 1
          },
          "context": "\"github.com/RLabs-Inc/codebase-curator/charm-tui/internal/monitor\"",
          "surroundingLines": [
            "\"github.com/RLabs-Inc/codebase-curator/charm-tui/internal/monitor\""
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "inc/codebase",
      [
        {
          "term": "github.com/RLabs-Inc/codebase-curator/charm-tui/internal/curator",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 8,
            "column": 1
          },
          "context": "\"github.com/RLabs-Inc/codebase-curator/charm-tui/internal/curator\"",
          "surroundingLines": [
            "\"github.com/RLabs-Inc/codebase-curator/charm-tui/internal/curator\""
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "github.com/RLabs-Inc/codebase-curator/charm-tui/internal/config",
          "type": "string",
          "location": {
            "file": "cmd/smartgrep/main.go",
            "line": 8,
            "column": 1
          },
          "context": "\"github.com/RLabs-Inc/codebase-curator/charm-tui/internal/config\"",
          "surroundingLines": [
            "\"github.com/RLabs-Inc/codebase-curator/charm-tui/internal/config\""
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "github.com/RLabs-Inc/codebase-curator/charm-tui/internal/smartgrep",
          "type": "string",
          "location": {
            "file": "cmd/smartgrep/main.go",
            "line": 9,
            "column": 1
          },
          "context": "\"github.com/RLabs-Inc/codebase-curator/charm-tui/internal/smartgrep\"",
          "surroundingLines": [
            "\"github.com/RLabs-Inc/codebase-curator/charm-tui/internal/smartgrep\""
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "github.com/RLabs-Inc/codebase-curator/charm-tui/internal/monitor",
          "type": "string",
          "location": {
            "file": "cmd/monitor/main.go",
            "line": 8,
            "column": 1
          },
          "context": "\"github.com/RLabs-Inc/codebase-curator/charm-tui/internal/monitor\"",
          "surroundingLines": [
            "\"github.com/RLabs-Inc/codebase-curator/charm-tui/internal/monitor\""
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "curator/charm",
      [
        {
          "term": "github.com/RLabs-Inc/codebase-curator/charm-tui/internal/curator",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 8,
            "column": 1
          },
          "context": "\"github.com/RLabs-Inc/codebase-curator/charm-tui/internal/curator\"",
          "surroundingLines": [
            "\"github.com/RLabs-Inc/codebase-curator/charm-tui/internal/curator\""
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "github.com/RLabs-Inc/codebase-curator/charm-tui/internal/config",
          "type": "string",
          "location": {
            "file": "cmd/smartgrep/main.go",
            "line": 8,
            "column": 1
          },
          "context": "\"github.com/RLabs-Inc/codebase-curator/charm-tui/internal/config\"",
          "surroundingLines": [
            "\"github.com/RLabs-Inc/codebase-curator/charm-tui/internal/config\""
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "github.com/RLabs-Inc/codebase-curator/charm-tui/internal/smartgrep",
          "type": "string",
          "location": {
            "file": "cmd/smartgrep/main.go",
            "line": 9,
            "column": 1
          },
          "context": "\"github.com/RLabs-Inc/codebase-curator/charm-tui/internal/smartgrep\"",
          "surroundingLines": [
            "\"github.com/RLabs-Inc/codebase-curator/charm-tui/internal/smartgrep\""
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "github.com/RLabs-Inc/codebase-curator/charm-tui/internal/monitor",
          "type": "string",
          "location": {
            "file": "cmd/monitor/main.go",
            "line": 8,
            "column": 1
          },
          "context": "\"github.com/RLabs-Inc/codebase-curator/charm-tui/internal/monitor\"",
          "surroundingLines": [
            "\"github.com/RLabs-Inc/codebase-curator/charm-tui/internal/monitor\""
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "tui/internal/curator",
      [
        {
          "term": "github.com/RLabs-Inc/codebase-curator/charm-tui/internal/curator",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 8,
            "column": 1
          },
          "context": "\"github.com/RLabs-Inc/codebase-curator/charm-tui/internal/curator\"",
          "surroundingLines": [
            "\"github.com/RLabs-Inc/codebase-curator/charm-tui/internal/curator\""
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "github.com/spf13/cobra",
      [
        {
          "term": "github.com/spf13/cobra",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 9,
            "column": 1
          },
          "context": "\"github.com/spf13/cobra\"",
          "surroundingLines": [
            "\"github.com/spf13/cobra\""
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "github.com/spf13/cobra",
          "type": "string",
          "location": {
            "file": "cmd/monitor/main.go",
            "line": 9,
            "column": 1
          },
          "context": "\"github.com/spf13/cobra\"",
          "surroundingLines": [
            "\"github.com/spf13/cobra\""
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "github.com/spf13/cobra",
          "type": "string",
          "location": {
            "file": "cmd/smartgrep/main.go",
            "line": 10,
            "column": 1
          },
          "context": "\"github.com/spf13/cobra\"",
          "surroundingLines": [
            "\"github.com/spf13/cobra\""
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "rootcmd",
      [
        {
          "term": "rootCmd",
          "type": "variable",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 18,
            "column": 0
          },
          "context": "var rootCmd = &cobra.Command{",
          "surroundingLines": [
            ")",
            "",
            "var rootCmd = &cobra.Command{",
            "Use:   \"curator [command]\",",
            "Short: \"AI-powered codebase intelligence\","
          ],
          "relatedTerms": [
            "rootCmd",
            "cobra",
            "Command"
          ],
          "language": "go"
        },
        {
          "term": "rootCmd",
          "type": "variable",
          "location": {
            "file": "cmd/monitor/main.go",
            "line": 17,
            "column": 0
          },
          "context": "var rootCmd = &cobra.Command{",
          "surroundingLines": [
            ")",
            "",
            "var rootCmd = &cobra.Command{",
            "Use:   \"monitor [command]\",",
            "Short: \"Live codebase monitoring dashboard\","
          ],
          "relatedTerms": [
            "rootCmd",
            "cobra",
            "Command"
          ],
          "language": "go"
        },
        {
          "term": "rootCmd",
          "type": "variable",
          "location": {
            "file": "cmd/smartgrep/main.go",
            "line": 22,
            "column": 0
          },
          "context": "var rootCmd = &cobra.Command{",
          "surroundingLines": [
            ")",
            "",
            "var rootCmd = &cobra.Command{",
            "Use:   \"smartgrep [pattern]\",",
            "Short: \"Semantic code search optimized for Claude\","
          ],
          "relatedTerms": [
            "rootCmd",
            "cobra",
            "Command"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "curator [command]",
      [
        {
          "term": "curator [command]",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 19,
            "column": 8
          },
          "context": "Use:   \"curator [command]\",",
          "surroundingLines": [
            "Use:   \"curator [command]\","
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "ai-powered codebase intelligence",
      [
        {
          "term": "AI-powered codebase intelligence",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 20,
            "column": 8
          },
          "context": "Short: \"AI-powered codebase intelligence\",",
          "surroundingLines": [
            "Short: \"AI-powered codebase intelligence\","
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "powered codebase intelligence",
      [
        {
          "term": "AI-powered codebase intelligence",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 20,
            "column": 8
          },
          "context": "Short: \"AI-powered codebase intelligence\",",
          "surroundingLines": [
            "Short: \"AI-powered codebase intelligence\","
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "overviewcmd",
      [
        {
          "term": "overviewCmd",
          "type": "variable",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 36,
            "column": 0
          },
          "context": "var overviewCmd = &cobra.Command{",
          "surroundingLines": [
            "}",
            "",
            "var overviewCmd = &cobra.Command{",
            "Use:   \"overview [project-path]\",",
            "Short: \"Get comprehensive codebase overview\","
          ],
          "relatedTerms": [
            "overviewCmd",
            "cobra",
            "Command"
          ],
          "language": "go"
        },
        {
          "term": "overviewCmd",
          "type": "variable",
          "location": {
            "file": "cmd/monitor/main.go",
            "line": 58,
            "column": 0
          },
          "context": "var overviewCmd = &cobra.Command{",
          "surroundingLines": [
            "}",
            "",
            "var overviewCmd = &cobra.Command{",
            "Use:   \"overview\",",
            "Short: \"Show static codebase overview\","
          ],
          "relatedTerms": [
            "overviewCmd",
            "cobra",
            "Command"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "overview [project-path]",
      [
        {
          "term": "overview [project-path]",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 37,
            "column": 8
          },
          "context": "Use:   \"overview [project-path]\",",
          "surroundingLines": [
            "Use:   \"overview [project-path]\","
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "overview [project",
      [
        {
          "term": "overview [project-path]",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 37,
            "column": 8
          },
          "context": "Use:   \"overview [project-path]\",",
          "surroundingLines": [
            "Use:   \"overview [project-path]\","
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "path]",
      [
        {
          "term": "overview [project-path]",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 37,
            "column": 8
          },
          "context": "Use:   \"overview [project-path]\",",
          "surroundingLines": [
            "Use:   \"overview [project-path]\","
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "chat [project-path]",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 106,
            "column": 8
          },
          "context": "Use:   \"chat [project-path]\",",
          "surroundingLines": [
            "Use:   \"chat [project-path]\","
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "memory [project-path]",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 191,
            "column": 8
          },
          "context": "Use:   \"memory [project-path]\",",
          "surroundingLines": [
            "Use:   \"memory [project-path]\","
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "clear [project-path]",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 220,
            "column": 8
          },
          "context": "Use:   \"clear [project-path]\",",
          "surroundingLines": [
            "Use:   \"clear [project-path]\","
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "get comprehensive codebase overview",
      [
        {
          "term": "Get comprehensive codebase overview",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 38,
            "column": 8
          },
          "context": "Short: \"Get comprehensive codebase overview\",",
          "surroundingLines": [
            "Short: \"Get comprehensive codebase overview\","
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "--new-session",
      [
        {
          "term": "--new-session",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 56,
            "column": 29
          },
          "context": "cmdArgs = append(cmdArgs, \"--new-session\")",
          "surroundingLines": [
            "cmdArgs = append(cmdArgs, \"--new-session\")"
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "new",
      [
        {
          "term": "--new-session",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 56,
            "column": 29
          },
          "context": "cmdArgs = append(cmdArgs, \"--new-session\")",
          "surroundingLines": [
            "cmdArgs = append(cmdArgs, \"--new-session\")"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "new-session",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 250,
            "column": 42
          },
          "context": "overviewCmd.Flags().BoolVar(&newSession, \"new-session\", false, \"Start fresh analysis session\")",
          "surroundingLines": [
            "overviewCmd.Flags().BoolVar(&newSession, \"new-session\", false, \"Start fresh analysis session\")"
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "session",
      [
        {
          "term": "--new-session",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 56,
            "column": 29
          },
          "context": "cmdArgs = append(cmdArgs, \"--new-session\")",
          "surroundingLines": [
            "cmdArgs = append(cmdArgs, \"--new-session\")"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "new-session",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 250,
            "column": 42
          },
          "context": "overviewCmd.Flags().BoolVar(&newSession, \"new-session\", false, \"Start fresh analysis session\")",
          "surroundingLines": [
            "overviewCmd.Flags().BoolVar(&newSession, \"new-session\", false, \"Start fresh analysis session\")"
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "execcmd",
      [
        {
          "term": "execCmd",
          "type": "variable",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 59,
            "column": 0
          },
          "context": "execCmd := exec.Command(\"bun\", cmdArgs...)",
          "surroundingLines": [
            "}",
            "",
            "execCmd := exec.Command(\"bun\", cmdArgs...)",
            "execCmd.Stdout = os.Stdout",
            "execCmd.Stderr = os.Stderr"
          ],
          "relatedTerms": [
            "execCmd",
            "exec",
            "Command",
            "bun",
            "cmdArgs"
          ],
          "language": "go"
        },
        {
          "term": "execCmd",
          "type": "variable",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 96,
            "column": 0
          },
          "context": "execCmd := exec.Command(\"bun\", cmdArgs...)",
          "surroundingLines": [
            "cmdArgs = append(cmdArgs, question)",
            "",
            "execCmd := exec.Command(\"bun\", cmdArgs...)",
            "execCmd.Stdout = os.Stdout",
            "execCmd.Stderr = os.Stderr"
          ],
          "relatedTerms": [
            "execCmd",
            "exec",
            "Command",
            "bun",
            "cmdArgs"
          ],
          "language": "go"
        },
        {
          "term": "execCmd",
          "type": "variable",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 146,
            "column": 0
          },
          "context": "execCmd := exec.Command(\"bun\", cmdArgs...)",
          "surroundingLines": [
            "cmdArgs = append(cmdArgs, description)",
            "",
            "execCmd := exec.Command(\"bun\", cmdArgs...)",
            "execCmd.Stdout = os.Stdout",
            "execCmd.Stderr = os.Stderr"
          ],
          "relatedTerms": [
            "execCmd",
            "exec",
            "Command",
            "bun",
            "cmdArgs"
          ],
          "language": "go"
        },
        {
          "term": "execCmd",
          "type": "variable",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 181,
            "column": 0
          },
          "context": "execCmd := exec.Command(\"bun\", cmdArgs...)",
          "surroundingLines": [
            "cmdArgs = append(cmdArgs, description)",
            "",
            "execCmd := exec.Command(\"bun\", cmdArgs...)",
            "execCmd.Stdout = os.Stdout",
            "execCmd.Stderr = os.Stderr"
          ],
          "relatedTerms": [
            "execCmd",
            "exec",
            "Command",
            "bun",
            "cmdArgs"
          ],
          "language": "go"
        },
        {
          "term": "execCmd",
          "type": "variable",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 210,
            "column": 0
          },
          "context": "execCmd := exec.Command(\"bun\", cmdArgs...)",
          "surroundingLines": [
            "}",
            "",
            "execCmd := exec.Command(\"bun\", cmdArgs...)",
            "execCmd.Stdout = os.Stdout",
            "execCmd.Stderr = os.Stderr"
          ],
          "relatedTerms": [
            "execCmd",
            "exec",
            "Command",
            "bun",
            "cmdArgs"
          ],
          "language": "go"
        },
        {
          "term": "execCmd",
          "type": "variable",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 235,
            "column": 0
          },
          "context": "execCmd := exec.Command(\"bun\", cmdArgs...)",
          "surroundingLines": [
            "}",
            "",
            "execCmd := exec.Command(\"bun\", cmdArgs...)",
            "execCmd.Stdout = os.Stdout",
            "execCmd.Stderr = os.Stderr"
          ],
          "relatedTerms": [
            "execCmd",
            "exec",
            "Command",
            "bun",
            "cmdArgs"
          ],
          "language": "go"
        },
        {
          "term": "execCmd",
          "type": "variable",
          "location": {
            "file": "cmd/monitor/main.go",
            "line": 49,
            "column": 0
          },
          "context": "execCmd := exec.Command(\"bun\", cmdArgs...)",
          "surroundingLines": [
            "}",
            "",
            "execCmd := exec.Command(\"bun\", cmdArgs...)",
            "execCmd.Stdout = os.Stdout",
            "execCmd.Stderr = os.Stderr"
          ],
          "relatedTerms": [
            "execCmd",
            "exec",
            "Command",
            "bun",
            "cmdArgs"
          ],
          "language": "go"
        },
        {
          "term": "execCmd",
          "type": "variable",
          "location": {
            "file": "cmd/monitor/main.go",
            "line": 69,
            "column": 0
          },
          "context": "execCmd := exec.Command(\"bun\", cmdArgs...)",
          "surroundingLines": [
            "cmdArgs := []string{\"run\", \"../../src/tools/monitor/cli.ts\", \"overview\"}",
            "",
            "execCmd := exec.Command(\"bun\", cmdArgs...)",
            "execCmd.Stdout = os.Stdout",
            "execCmd.Stderr = os.Stderr"
          ],
          "relatedTerms": [
            "execCmd",
            "exec",
            "Command",
            "bun",
            "cmdArgs"
          ],
          "language": "go"
        },
        {
          "term": "execCmd",
          "type": "variable",
          "location": {
            "file": "cmd/monitor/main.go",
            "line": 89,
            "column": 0
          },
          "context": "execCmd := exec.Command(\"bun\", cmdArgs...)",
          "surroundingLines": [
            "cmdArgs := []string{\"run\", \"../../src/tools/monitor/cli.ts\", \"status\"}",
            "",
            "execCmd := exec.Command(\"bun\", cmdArgs...)",
            "execCmd.Stdout = os.Stdout",
            "execCmd.Stderr = os.Stderr"
          ],
          "relatedTerms": [
            "execCmd",
            "exec",
            "Command",
            "bun",
            "cmdArgs"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "askcmd",
      [
        {
          "term": "askCmd",
          "type": "variable",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 68,
            "column": 0
          },
          "context": "var askCmd = &cobra.Command{",
          "surroundingLines": [
            "}",
            "",
            "var askCmd = &cobra.Command{",
            "Use:   \"ask [project-path] [question]\",",
            "Short: \"Ask questions about the codebase\","
          ],
          "relatedTerms": [
            "askCmd",
            "cobra",
            "Command"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "ask [project-path] [question]",
      [
        {
          "term": "ask [project-path] [question]",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 69,
            "column": 8
          },
          "context": "Use:   \"ask [project-path] [question]\",",
          "surroundingLines": [
            "Use:   \"ask [project-path] [question]\","
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "ask [project",
      [
        {
          "term": "ask [project-path] [question]",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 69,
            "column": 8
          },
          "context": "Use:   \"ask [project-path] [question]\",",
          "surroundingLines": [
            "Use:   \"ask [project-path] [question]\","
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "path] [question]",
      [
        {
          "term": "ask [project-path] [question]",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 69,
            "column": 8
          },
          "context": "Use:   \"ask [project-path] [question]\",",
          "surroundingLines": [
            "Use:   \"ask [project-path] [question]\","
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "ask questions about the codebase",
      [
        {
          "term": "Ask questions about the codebase",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 70,
            "column": 8
          },
          "context": "Short: \"Ask questions about the codebase\",",
          "surroundingLines": [
            "Short: \"Ask questions about the codebase\","
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "chatcmd",
      [
        {
          "term": "chatCmd",
          "type": "variable",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 105,
            "column": 0
          },
          "context": "var chatCmd = &cobra.Command{",
          "surroundingLines": [
            "}",
            "",
            "var chatCmd = &cobra.Command{",
            "Use:   \"chat [project-path]\",",
            "Short: \"Start interactive chat session\","
          ],
          "relatedTerms": [
            "chatCmd",
            "cobra",
            "Command"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "chat [project-path]",
      [
        {
          "term": "chat [project-path]",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 106,
            "column": 8
          },
          "context": "Use:   \"chat [project-path]\",",
          "surroundingLines": [
            "Use:   \"chat [project-path]\","
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "chat [project",
      [
        {
          "term": "chat [project-path]",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 106,
            "column": 8
          },
          "context": "Use:   \"chat [project-path]\",",
          "surroundingLines": [
            "Use:   \"chat [project-path]\","
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "start interactive chat session",
      [
        {
          "term": "Start interactive chat session",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 107,
            "column": 8
          },
          "context": "Short: \"Start interactive chat session\",",
          "surroundingLines": [
            "Short: \"Start interactive chat session\","
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "featurecmd",
      [
        {
          "term": "featureCmd",
          "type": "variable",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 120,
            "column": 0
          },
          "context": "var featureCmd = &cobra.Command{",
          "surroundingLines": [
            "}",
            "",
            "var featureCmd = &cobra.Command{",
            "Use:   \"feature [project-path] [description]\",",
            "Short: \"Get implementation guidance for new features\","
          ],
          "relatedTerms": [
            "featureCmd",
            "cobra",
            "Command"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "feature [project-path] [description]",
      [
        {
          "term": "feature [project-path] [description]",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 121,
            "column": 8
          },
          "context": "Use:   \"feature [project-path] [description]\",",
          "surroundingLines": [
            "Use:   \"feature [project-path] [description]\","
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "feature [project",
      [
        {
          "term": "feature [project-path] [description]",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 121,
            "column": 8
          },
          "context": "Use:   \"feature [project-path] [description]\",",
          "surroundingLines": [
            "Use:   \"feature [project-path] [description]\","
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "path] [description]",
      [
        {
          "term": "feature [project-path] [description]",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 121,
            "column": 8
          },
          "context": "Use:   \"feature [project-path] [description]\",",
          "surroundingLines": [
            "Use:   \"feature [project-path] [description]\","
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "change [project-path] [description]",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 156,
            "column": 8
          },
          "context": "Use:   \"change [project-path] [description]\",",
          "surroundingLines": [
            "Use:   \"change [project-path] [description]\","
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "get implementation guidance for new features",
      [
        {
          "term": "Get implementation guidance for new features",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 122,
            "column": 8
          },
          "context": "Short: \"Get implementation guidance for new features\",",
          "surroundingLines": [
            "Short: \"Get implementation guidance for new features\","
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "changecmd",
      [
        {
          "term": "changeCmd",
          "type": "variable",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 155,
            "column": 0
          },
          "context": "var changeCmd = &cobra.Command{",
          "surroundingLines": [
            "}",
            "",
            "var changeCmd = &cobra.Command{",
            "Use:   \"change [project-path] [description]\",",
            "Short: \"Understand impact and risks of changes\","
          ],
          "relatedTerms": [
            "changeCmd",
            "cobra",
            "Command"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "change [project-path] [description]",
      [
        {
          "term": "change [project-path] [description]",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 156,
            "column": 8
          },
          "context": "Use:   \"change [project-path] [description]\",",
          "surroundingLines": [
            "Use:   \"change [project-path] [description]\","
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "change [project",
      [
        {
          "term": "change [project-path] [description]",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 156,
            "column": 8
          },
          "context": "Use:   \"change [project-path] [description]\",",
          "surroundingLines": [
            "Use:   \"change [project-path] [description]\","
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "understand impact and risks of changes",
      [
        {
          "term": "Understand impact and risks of changes",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 157,
            "column": 8
          },
          "context": "Short: \"Understand impact and risks of changes\",",
          "surroundingLines": [
            "Short: \"Understand impact and risks of changes\","
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "memorycmd",
      [
        {
          "term": "memoryCmd",
          "type": "variable",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 190,
            "column": 0
          },
          "context": "var memoryCmd = &cobra.Command{",
          "surroundingLines": [
            "}",
            "",
            "var memoryCmd = &cobra.Command{",
            "Use:   \"memory [project-path]\",",
            "Short: \"View curator's memory about the codebase\","
          ],
          "relatedTerms": [
            "memoryCmd",
            "cobra",
            "Command"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "memory [project-path]",
      [
        {
          "term": "memory [project-path]",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 191,
            "column": 8
          },
          "context": "Use:   \"memory [project-path]\",",
          "surroundingLines": [
            "Use:   \"memory [project-path]\","
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "memory [project",
      [
        {
          "term": "memory [project-path]",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 191,
            "column": 8
          },
          "context": "Use:   \"memory [project-path]\",",
          "surroundingLines": [
            "Use:   \"memory [project-path]\","
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "view curator's memory about the codebase",
      [
        {
          "term": "View curator's memory about the codebase",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 192,
            "column": 8
          },
          "context": "Short: \"View curator's memory about the codebase\",",
          "surroundingLines": [
            "Short: \"View curator's memory about the codebase\","
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "clearcmd",
      [
        {
          "term": "clearCmd",
          "type": "variable",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 219,
            "column": 0
          },
          "context": "var clearCmd = &cobra.Command{",
          "surroundingLines": [
            "}",
            "",
            "var clearCmd = &cobra.Command{",
            "Use:   \"clear [project-path]\",",
            "Short: \"Clear curator's memory\","
          ],
          "relatedTerms": [
            "clearCmd",
            "cobra",
            "Command"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "clear [project-path]",
      [
        {
          "term": "clear [project-path]",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 220,
            "column": 8
          },
          "context": "Use:   \"clear [project-path]\",",
          "surroundingLines": [
            "Use:   \"clear [project-path]\","
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "clear [project",
      [
        {
          "term": "clear [project-path]",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 220,
            "column": 8
          },
          "context": "Use:   \"clear [project-path]\",",
          "surroundingLines": [
            "Use:   \"clear [project-path]\","
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "clear curator's memory",
      [
        {
          "term": "Clear curator's memory",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 221,
            "column": 8
          },
          "context": "Short: \"Clear curator's memory\",",
          "surroundingLines": [
            "Short: \"Clear curator's memory\","
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "init",
      [
        {
          "term": "init",
          "type": "function",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 244,
            "column": 0
          },
          "context": "func init() {",
          "surroundingLines": [
            "}",
            "",
            "func init() {",
            "// Global flags",
            "rootCmd.PersistentFlags().BoolVar(&tuiMode, \"tui\", false, \"Launch interactive TUI mode\")"
          ],
          "relatedTerms": [
            "init"
          ],
          "language": "go"
        },
        {
          "term": "init",
          "type": "function",
          "location": {
            "file": "cmd/monitor/main.go",
            "line": 98,
            "column": 0
          },
          "context": "func init() {",
          "surroundingLines": [
            "}",
            "",
            "func init() {",
            "// Root flags",
            "rootCmd.PersistentFlags().BoolVar(&tuiMode, \"tui\", false, \"Launch interactive TUI mode\")"
          ],
          "relatedTerms": [
            "init"
          ],
          "language": "go"
        },
        {
          "term": "init",
          "type": "function",
          "location": {
            "file": "cmd/smartgrep/main.go",
            "line": 41,
            "column": 0
          },
          "context": "func init() {",
          "surroundingLines": [
            "}",
            "",
            "func init() {",
            "rootCmd.Flags().BoolVar(&tuiMode, \"tui\", false, \"Launch interactive TUI mode\")",
            "rootCmd.Flags().StringVar(&typeFilter, \"type\", \"\", \"Filter by type (function,class,variable,etc)\")"
          ],
          "relatedTerms": [
            "init"
          ],
          "language": "go"
        }
      ]
    ],
    [
      ", false, ",
      [
        {
          "term": ", false, ",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 246,
            "column": 49
          },
          "context": "rootCmd.PersistentFlags().BoolVar(&tuiMode, \"tui\", false, \"Launch interactive TUI mode\")",
          "surroundingLines": [
            "rootCmd.PersistentFlags().BoolVar(&tuiMode, \"tui\", false, \"Launch interactive TUI mode\")"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": ", false, ",
          "type": "string",
          "location": {
            "file": "cmd/monitor/main.go",
            "line": 100,
            "column": 49
          },
          "context": "rootCmd.PersistentFlags().BoolVar(&tuiMode, \"tui\", false, \"Launch interactive TUI mode\")",
          "surroundingLines": [
            "rootCmd.PersistentFlags().BoolVar(&tuiMode, \"tui\", false, \"Launch interactive TUI mode\")"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": ", false, ",
          "type": "string",
          "location": {
            "file": "cmd/smartgrep/main.go",
            "line": 42,
            "column": 39
          },
          "context": "rootCmd.Flags().BoolVar(&tuiMode, \"tui\", false, \"Launch interactive TUI mode\")",
          "surroundingLines": [
            "rootCmd.Flags().BoolVar(&tuiMode, \"tui\", false, \"Launch interactive TUI mode\")"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": ", false, ",
          "type": "string",
          "location": {
            "file": "cmd/smartgrep/main.go",
            "line": 185,
            "column": 36
          },
          "context": "cmd.Flags().BoolVar(&tuiMode, \"tui\", false, \"Launch interactive TUI mode\")",
          "surroundingLines": [
            "cmd.Flags().BoolVar(&tuiMode, \"tui\", false, \"Launch interactive TUI mode\")"
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "project path (defaults to current directory)",
      [
        {
          "term": "Project path (defaults to current directory)",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 247,
            "column": 72
          },
          "context": "rootCmd.PersistentFlags().StringVarP(&projectPath, \"project\", \"p\", \"\", \"Project path (defaults to current directory)\")",
          "surroundingLines": [
            "rootCmd.PersistentFlags().StringVarP(&projectPath, \"project\", \"p\", \"\", \"Project path (defaults to current directory)\")"
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "new-session",
      [
        {
          "term": "new-session",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 250,
            "column": 42
          },
          "context": "overviewCmd.Flags().BoolVar(&newSession, \"new-session\", false, \"Start fresh analysis session\")",
          "surroundingLines": [
            "overviewCmd.Flags().BoolVar(&newSession, \"new-session\", false, \"Start fresh analysis session\")"
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "start fresh analysis session",
      [
        {
          "term": "Start fresh analysis session",
          "type": "string",
          "location": {
            "file": "cmd/curator/main.go",
            "line": 250,
            "column": 64
          },
          "context": "overviewCmd.Flags().BoolVar(&newSession, \"new-session\", false, \"Start fresh analysis session\")",
          "surroundingLines": [
            "overviewCmd.Flags().BoolVar(&newSession, \"new-session\", false, \"Start fresh analysis session\")"
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "tui/internal/config",
      [
        {
          "term": "github.com/RLabs-Inc/codebase-curator/charm-tui/internal/config",
          "type": "string",
          "location": {
            "file": "cmd/smartgrep/main.go",
            "line": 8,
            "column": 1
          },
          "context": "\"github.com/RLabs-Inc/codebase-curator/charm-tui/internal/config\"",
          "surroundingLines": [
            "\"github.com/RLabs-Inc/codebase-curator/charm-tui/internal/config\""
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "tui/internal/smartgrep",
      [
        {
          "term": "github.com/RLabs-Inc/codebase-curator/charm-tui/internal/smartgrep",
          "type": "string",
          "location": {
            "file": "cmd/smartgrep/main.go",
            "line": 9,
            "column": 1
          },
          "context": "\"github.com/RLabs-Inc/codebase-curator/charm-tui/internal/smartgrep\"",
          "surroundingLines": [
            "\"github.com/RLabs-Inc/codebase-curator/charm-tui/internal/smartgrep\""
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "github.com/rlabs-inc/codebase-curator/charm-tui/internal/monitor",
      [
        {
          "term": "github.com/RLabs-Inc/codebase-curator/charm-tui/internal/monitor",
          "type": "string",
          "location": {
            "file": "cmd/monitor/main.go",
            "line": 8,
            "column": 1
          },
          "context": "\"github.com/RLabs-Inc/codebase-curator/charm-tui/internal/monitor\"",
          "surroundingLines": [
            "\"github.com/RLabs-Inc/codebase-curator/charm-tui/internal/monitor\""
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "tui/internal/monitor",
      [
        {
          "term": "github.com/RLabs-Inc/codebase-curator/charm-tui/internal/monitor",
          "type": "string",
          "location": {
            "file": "cmd/monitor/main.go",
            "line": 8,
            "column": 1
          },
          "context": "\"github.com/RLabs-Inc/codebase-curator/charm-tui/internal/monitor\"",
          "surroundingLines": [
            "\"github.com/RLabs-Inc/codebase-curator/charm-tui/internal/monitor\""
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "monitor [command]",
      [
        {
          "term": "monitor [command]",
          "type": "string",
          "location": {
            "file": "cmd/monitor/main.go",
            "line": 18,
            "column": 8
          },
          "context": "Use:   \"monitor [command]\",",
          "surroundingLines": [
            "Use:   \"monitor [command]\","
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "live codebase monitoring dashboard",
      [
        {
          "term": "Live codebase monitoring dashboard",
          "type": "string",
          "location": {
            "file": "cmd/monitor/main.go",
            "line": 19,
            "column": 8
          },
          "context": "Short: \"Live codebase monitoring dashboard\",",
          "surroundingLines": [
            "Short: \"Live codebase monitoring dashboard\","
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "watchcmd",
      [
        {
          "term": "watchCmd",
          "type": "variable",
          "location": {
            "file": "cmd/monitor/main.go",
            "line": 35,
            "column": 0
          },
          "context": "var watchCmd = &cobra.Command{",
          "surroundingLines": [
            "}",
            "",
            "var watchCmd = &cobra.Command{",
            "Use:   \"watch\",",
            "Short: \"Start live file monitoring\","
          ],
          "relatedTerms": [
            "watchCmd",
            "cobra",
            "Command"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "start live file monitoring",
      [
        {
          "term": "Start live file monitoring",
          "type": "string",
          "location": {
            "file": "cmd/monitor/main.go",
            "line": 37,
            "column": 8
          },
          "context": "Short: \"Start live file monitoring\",",
          "surroundingLines": [
            "Short: \"Start live file monitoring\","
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "show static codebase overview",
      [
        {
          "term": "Show static codebase overview",
          "type": "string",
          "location": {
            "file": "cmd/monitor/main.go",
            "line": 60,
            "column": 8
          },
          "context": "Short: \"Show static codebase overview\",",
          "surroundingLines": [
            "Short: \"Show static codebase overview\","
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "statuscmd",
      [
        {
          "term": "statusCmd",
          "type": "variable",
          "location": {
            "file": "cmd/monitor/main.go",
            "line": 78,
            "column": 0
          },
          "context": "var statusCmd = &cobra.Command{",
          "surroundingLines": [
            "}",
            "",
            "var statusCmd = &cobra.Command{",
            "Use:   \"status\",",
            "Short: \"Check index status and health\","
          ],
          "relatedTerms": [
            "statusCmd",
            "cobra",
            "Command"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "check index status and health",
      [
        {
          "term": "Check index status and health",
          "type": "string",
          "location": {
            "file": "cmd/monitor/main.go",
            "line": 80,
            "column": 8
          },
          "context": "Short: \"Check index status and health\",",
          "surroundingLines": [
            "Short: \"Check index status and health\","
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "include codebase overview in dashboard",
      [
        {
          "term": "Include codebase overview in dashboard",
          "type": "string",
          "location": {
            "file": "cmd/monitor/main.go",
            "line": 103,
            "column": 60
          },
          "context": "watchCmd.Flags().BoolVar(&withOverview, \"overview\", false, \"Include codebase overview in dashboard\")",
          "surroundingLines": [
            "watchCmd.Flags().BoolVar(&withOverview, \"overview\", false, \"Include codebase overview in dashboard\")"
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "github.com/rlabs-inc/codebase-curator/charm-tui/internal/config",
      [
        {
          "term": "github.com/RLabs-Inc/codebase-curator/charm-tui/internal/config",
          "type": "string",
          "location": {
            "file": "cmd/smartgrep/main.go",
            "line": 8,
            "column": 1
          },
          "context": "\"github.com/RLabs-Inc/codebase-curator/charm-tui/internal/config\"",
          "surroundingLines": [
            "\"github.com/RLabs-Inc/codebase-curator/charm-tui/internal/config\""
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "github.com/rlabs-inc/codebase-curator/charm-tui/internal/smartgrep",
      [
        {
          "term": "github.com/RLabs-Inc/codebase-curator/charm-tui/internal/smartgrep",
          "type": "string",
          "location": {
            "file": "cmd/smartgrep/main.go",
            "line": 9,
            "column": 1
          },
          "context": "\"github.com/RLabs-Inc/codebase-curator/charm-tui/internal/smartgrep\"",
          "surroundingLines": [
            "\"github.com/RLabs-Inc/codebase-curator/charm-tui/internal/smartgrep\""
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "smartgrep [pattern]",
      [
        {
          "term": "smartgrep [pattern]",
          "type": "string",
          "location": {
            "file": "cmd/smartgrep/main.go",
            "line": 23,
            "column": 8
          },
          "context": "Use:   \"smartgrep [pattern]\",",
          "surroundingLines": [
            "Use:   \"smartgrep [pattern]\","
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "semantic code search optimized for claude",
      [
        {
          "term": "Semantic code search optimized for Claude",
          "type": "string",
          "location": {
            "file": "cmd/smartgrep/main.go",
            "line": 24,
            "column": 8
          },
          "context": "Short: \"Semantic code search optimized for Claude\",",
          "surroundingLines": [
            "Short: \"Semantic code search optimized for Claude\","
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "filter by type (function,class,variable,etc)",
      [
        {
          "term": "Filter by type (function,class,variable,etc)",
          "type": "string",
          "location": {
            "file": "cmd/smartgrep/main.go",
            "line": 43,
            "column": 52
          },
          "context": "rootCmd.Flags().StringVar(&typeFilter, \"type\", \"\", \"Filter by type (function,class,variable,etc)\")",
          "surroundingLines": [
            "rootCmd.Flags().StringVar(&typeFilter, \"type\", \"\", \"Filter by type (function,class,variable,etc)\")"
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      ", 50, ",
      [
        {
          "term": ", 50, ",
          "type": "string",
          "location": {
            "file": "cmd/smartgrep/main.go",
            "line": 44,
            "column": 41
          },
          "context": "rootCmd.Flags().IntVar(&maxResults, \"max\", 50, \"Maximum results to show\")",
          "surroundingLines": [
            "rootCmd.Flags().IntVar(&maxResults, \"max\", 50, \"Maximum results to show\")"
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "sort by: relevance, usage, name, file",
      [
        {
          "term": "Sort by: relevance, usage, name, file",
          "type": "string",
          "location": {
            "file": "cmd/smartgrep/main.go",
            "line": 45,
            "column": 57
          },
          "context": "rootCmd.Flags().StringVar(&sortBy, \"sort\", \"relevance\", \"Sort by: relevance, usage, name, file\")",
          "surroundingLines": [
            "rootCmd.Flags().StringVar(&sortBy, \"sort\", \"relevance\", \"Sort by: relevance, usage, name, file\")"
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "compact output format",
      [
        {
          "term": "Compact output format",
          "type": "string",
          "location": {
            "file": "cmd/smartgrep/main.go",
            "line": 46,
            "column": 57
          },
          "context": "rootCmd.Flags().BoolVar(&compactMode, \"compact\", false, \"Compact output format\")",
          "surroundingLines": [
            "rootCmd.Flags().BoolVar(&compactMode, \"compact\", false, \"Compact output format\")"
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "rebuild the semantic index",
      [
        {
          "term": "Rebuild the semantic index",
          "type": "string",
          "location": {
            "file": "cmd/smartgrep/main.go",
            "line": 47,
            "column": 56
          },
          "context": "rootCmd.Flags().BoolVar(&rebuildIndex, \"index\", false, \"Rebuild the semantic index\")",
          "surroundingLines": [
            "rootCmd.Flags().BoolVar(&rebuildIndex, \"index\", false, \"Rebuild the semantic index\")"
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "executecommand",
      [
        {
          "term": "executeCommand",
          "type": "function",
          "location": {
            "file": "cmd/smartgrep/main.go",
            "line": 51,
            "column": 0
          },
          "context": "func executeCommand(subcommand string, args []string, flags map[string]interface{}) error {",
          "surroundingLines": [
            "",
            "// Helper to execute CLI commands",
            "func executeCommand(subcommand string, args []string, flags map[string]interface{}) error {",
            "executor := config.GetExecutor()",
            "cliPath := config.GetSmartgrepPath()"
          ],
          "relatedTerms": [
            "executeCommand",
            "subcommand",
            "args",
            "flags"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "executor",
      [
        {
          "term": "executor",
          "type": "variable",
          "location": {
            "file": "cmd/smartgrep/main.go",
            "line": 52,
            "column": 0
          },
          "context": "executor := config.GetExecutor()",
          "surroundingLines": [
            "// Helper to execute CLI commands",
            "func executeCommand(subcommand string, args []string, flags map[string]interface{}) error {",
            "executor := config.GetExecutor()",
            "cliPath := config.GetSmartgrepPath()",
            ""
          ],
          "relatedTerms": [
            "executor",
            "config",
            "GetExecutor"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "clipath",
      [
        {
          "term": "cliPath",
          "type": "variable",
          "location": {
            "file": "cmd/smartgrep/main.go",
            "line": 53,
            "column": 0
          },
          "context": "cliPath := config.GetSmartgrepPath()",
          "surroundingLines": [
            "func executeCommand(subcommand string, args []string, flags map[string]interface{}) error {",
            "executor := config.GetExecutor()",
            "cliPath := config.GetSmartgrepPath()",
            "",
            "var cmd *exec.Cmd"
          ],
          "relatedTerms": [
            "cliPath",
            "config",
            "GetSmartgrepPath"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "+flag, fmt.sprintf(",
      [
        {
          "term": "+flag, fmt.Sprintf(",
          "type": "string",
          "location": {
            "file": "cmd/smartgrep/main.go",
            "line": 73,
            "column": 33
          },
          "context": "cmdArgs = append(cmdArgs, \"--\"+flag, fmt.Sprintf(\"%d\", intVal))",
          "surroundingLines": [
            "cmdArgs = append(cmdArgs, \"--\"+flag, fmt.Sprintf(\"%d\", intVal))"
          ],
          "relatedTerms": [],
          "language": "go"
        },
        {
          "term": "+flag, fmt.Sprintf(",
          "type": "string",
          "location": {
            "file": "cmd/smartgrep/main.go",
            "line": 92,
            "column": 33
          },
          "context": "cmdArgs = append(cmdArgs, \"--\"+flag, fmt.Sprintf(\"%d\", intVal))",
          "surroundingLines": [
            "cmdArgs = append(cmdArgs, \"--\"+flag, fmt.Sprintf(\"%d\", intVal))"
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "runclimode",
      [
        {
          "term": "runCLIMode",
          "type": "function",
          "location": {
            "file": "cmd/smartgrep/main.go",
            "line": 106,
            "column": 0
          },
          "context": "func runCLIMode(args []string) error {",
          "surroundingLines": [
            "}",
            "",
            "func runCLIMode(args []string) error {",
            "// Build flags map",
            "flags := make(map[string]interface{})"
          ],
          "relatedTerms": [
            "runCLIMode",
            "args"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "flags",
      [
        {
          "term": "flags",
          "type": "variable",
          "location": {
            "file": "cmd/smartgrep/main.go",
            "line": 108,
            "column": 0
          },
          "context": "flags := make(map[string]interface{})",
          "surroundingLines": [
            "func runCLIMode(args []string) error {",
            "// Build flags map",
            "flags := make(map[string]interface{})",
            "if rebuildIndex {",
            "flags[\"index\"] = true"
          ],
          "relatedTerms": [
            "flags"
          ],
          "language": "go"
        },
        {
          "term": "flags",
          "type": "variable",
          "location": {
            "file": "cmd/smartgrep/main.go",
            "line": 169,
            "column": 0
          },
          "context": "flags := make(map[string]interface{})",
          "surroundingLines": [
            "",
            "// Pass through to TypeScript implementation",
            "flags := make(map[string]interface{})",
            "if compactMode {",
            "flags[\"compact\"] = true"
          ],
          "relatedTerms": [
            "flags"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "groupcmd",
      [
        {
          "term": "groupCmd",
          "type": "variable",
          "location": {
            "file": "cmd/smartgrep/main.go",
            "line": 129,
            "column": 0
          },
          "context": "var groupCmd = &cobra.Command{",
          "surroundingLines": [
            "",
            "// Subcommands",
            "var groupCmd = &cobra.Command{",
            "Use:   \"group [action] [name]\",",
            "Short: \"Manage concept groups\","
          ],
          "relatedTerms": [
            "groupCmd",
            "cobra",
            "Command"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "group [action] [name]",
      [
        {
          "term": "group [action] [name]",
          "type": "string",
          "location": {
            "file": "cmd/smartgrep/main.go",
            "line": 130,
            "column": 8
          },
          "context": "Use:   \"group [action] [name]\",",
          "surroundingLines": [
            "Use:   \"group [action] [name]\","
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "manage concept groups",
      [
        {
          "term": "Manage concept groups",
          "type": "string",
          "location": {
            "file": "cmd/smartgrep/main.go",
            "line": 131,
            "column": 8
          },
          "context": "Short: \"Manage concept groups\",",
          "surroundingLines": [
            "Short: \"Manage concept groups\","
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "list, search, add, or remove concept groups for semantic search",
      [
        {
          "term": "List, search, add, or remove concept groups for semantic search",
          "type": "string",
          "location": {
            "file": "cmd/smartgrep/main.go",
            "line": 132,
            "column": 8
          },
          "context": "Long:  \"List, search, add, or remove concept groups for semantic search\",",
          "surroundingLines": [
            "Long:  \"List, search, add, or remove concept groups for semantic search\","
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "refscmd",
      [
        {
          "term": "refsCmd",
          "type": "variable",
          "location": {
            "file": "cmd/smartgrep/main.go",
            "line": 143,
            "column": 0
          },
          "context": "var refsCmd = &cobra.Command{",
          "surroundingLines": [
            "}",
            "",
            "var refsCmd = &cobra.Command{",
            "Use:   \"refs [symbol]\",",
            "Short: \"Find all references to a symbol\","
          ],
          "relatedTerms": [
            "refsCmd",
            "cobra",
            "Command"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "refs [symbol]",
      [
        {
          "term": "refs [symbol]",
          "type": "string",
          "location": {
            "file": "cmd/smartgrep/main.go",
            "line": 144,
            "column": 8
          },
          "context": "Use:   \"refs [symbol]\",",
          "surroundingLines": [
            "Use:   \"refs [symbol]\","
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "find all references to a symbol",
      [
        {
          "term": "Find all references to a symbol",
          "type": "string",
          "location": {
            "file": "cmd/smartgrep/main.go",
            "line": 145,
            "column": 8
          },
          "context": "Short: \"Find all references to a symbol\",",
          "surroundingLines": [
            "Short: \"Find all references to a symbol\","
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ],
    [
      "changescmd",
      [
        {
          "term": "changesCmd",
          "type": "variable",
          "location": {
            "file": "cmd/smartgrep/main.go",
            "line": 160,
            "column": 0
          },
          "context": "var changesCmd = &cobra.Command{",
          "surroundingLines": [
            "}",
            "",
            "var changesCmd = &cobra.Command{",
            "Use:   \"changes\",",
            "Short: \"Analyze impact of uncommitted changes\","
          ],
          "relatedTerms": [
            "changesCmd",
            "cobra",
            "Command"
          ],
          "language": "go"
        }
      ]
    ],
    [
      "analyze impact of uncommitted changes",
      [
        {
          "term": "Analyze impact of uncommitted changes",
          "type": "string",
          "location": {
            "file": "cmd/smartgrep/main.go",
            "line": 162,
            "column": 8
          },
          "context": "Short: \"Analyze impact of uncommitted changes\",",
          "surroundingLines": [
            "Short: \"Analyze impact of uncommitted changes\","
          ],
          "relatedTerms": [],
          "language": "go"
        }
      ]
    ]
  ],
  "crossReferences": [
    [
      "BUILD_DIR",
      [
        {
          "targetTerm": "BUILD_DIR",
          "referenceType": "call",
          "fromLocation": {
            "file": "Makefile",
            "line": 4,
            "column": 0
          },
          "context": "BUILD_DIR := build"
        },
        {
          "targetTerm": "BUILD_DIR",
          "referenceType": "call",
          "fromLocation": {
            "file": "Makefile",
            "line": 5,
            "column": 11
          },
          "context": "BIN_DIR := $(BUILD_DIR)/bin"
        },
        {
          "targetTerm": "BUILD_DIR",
          "referenceType": "call",
          "fromLocation": {
            "file": "Makefile",
            "line": 51,
            "column": 8
          },
          "context": "rm -rf $(BUILD_DIR)"
        }
      ]
    ],
    [
      "BIN_DIR",
      [
        {
          "targetTerm": "BIN_DIR",
          "referenceType": "call",
          "fromLocation": {
            "file": "Makefile",
            "line": 5,
            "column": 0
          },
          "context": "BIN_DIR := $(BUILD_DIR)/bin"
        },
        {
          "targetTerm": "BIN_DIR",
          "referenceType": "call",
          "fromLocation": {
            "file": "Makefile",
            "line": 8,
            "column": 17
          },
          "context": "SMARTGREP_BIN := $(BIN_DIR)/smartgrep"
        },
        {
          "targetTerm": "BIN_DIR",
          "referenceType": "call",
          "fromLocation": {
            "file": "Makefile",
            "line": 9,
            "column": 15
          },
          "context": "CURATOR_BIN := $(BIN_DIR)/curator"
        },
        {
          "targetTerm": "BIN_DIR",
          "referenceType": "call",
          "fromLocation": {
            "file": "Makefile",
            "line": 10,
            "column": 15
          },
          "context": "MONITOR_BIN := $(BIN_DIR)/monitor"
        },
        {
          "targetTerm": "BIN_DIR",
          "referenceType": "call",
          "fromLocation": {
            "file": "Makefile",
            "line": 16,
            "column": 0
          },
          "context": "$(BIN_DIR):"
        },
        {
          "targetTerm": "BIN_DIR",
          "referenceType": "call",
          "fromLocation": {
            "file": "Makefile",
            "line": 17,
            "column": 10
          },
          "context": "mkdir -p $(BIN_DIR)"
        },
        {
          "targetTerm": "BIN_DIR",
          "referenceType": "call",
          "fromLocation": {
            "file": "Makefile",
            "line": 20,
            "column": 7
          },
          "context": "build: $(BIN_DIR) smartgrep curator monitor"
        },
        {
          "targetTerm": "BIN_DIR",
          "referenceType": "call",
          "fromLocation": {
            "file": "Makefile",
            "line": 23,
            "column": 11
          },
          "context": "smartgrep: $(BIN_DIR)"
        },
        {
          "targetTerm": "BIN_DIR",
          "referenceType": "call",
          "fromLocation": {
            "file": "Makefile",
            "line": 26,
            "column": 9
          },
          "context": "curator: $(BIN_DIR)"
        },
        {
          "targetTerm": "BIN_DIR",
          "referenceType": "call",
          "fromLocation": {
            "file": "Makefile",
            "line": 29,
            "column": 9
          },
          "context": "monitor: $(BIN_DIR)"
        }
      ]
    ],
    [
      "SMARTGREP_BIN",
      [
        {
          "targetTerm": "SMARTGREP_BIN",
          "referenceType": "call",
          "fromLocation": {
            "file": "Makefile",
            "line": 8,
            "column": 0
          },
          "context": "SMARTGREP_BIN := $(BIN_DIR)/smartgrep"
        },
        {
          "targetTerm": "SMARTGREP_BIN",
          "referenceType": "call",
          "fromLocation": {
            "file": "Makefile",
            "line": 24,
            "column": 13
          },
          "context": "go build -o $(SMARTGREP_BIN) ./cmd/smartgrep"
        },
        {
          "targetTerm": "SMARTGREP_BIN",
          "referenceType": "call",
          "fromLocation": {
            "file": "Makefile",
            "line": 35,
            "column": 5
          },
          "context": "@cp $(SMARTGREP_BIN) /usr/local/bin/smartgrep-tui"
        },
        {
          "targetTerm": "SMARTGREP_BIN",
          "referenceType": "call",
          "fromLocation": {
            "file": "Makefile",
            "line": 55,
            "column": 1
          },
          "context": "$(SMARTGREP_BIN) --tui"
        }
      ]
    ],
    [
      "CURATOR_BIN",
      [
        {
          "targetTerm": "CURATOR_BIN",
          "referenceType": "call",
          "fromLocation": {
            "file": "Makefile",
            "line": 9,
            "column": 0
          },
          "context": "CURATOR_BIN := $(BIN_DIR)/curator"
        },
        {
          "targetTerm": "CURATOR_BIN",
          "referenceType": "call",
          "fromLocation": {
            "file": "Makefile",
            "line": 27,
            "column": 13
          },
          "context": "go build -o $(CURATOR_BIN) ./cmd/curator"
        },
        {
          "targetTerm": "CURATOR_BIN",
          "referenceType": "call",
          "fromLocation": {
            "file": "Makefile",
            "line": 36,
            "column": 5
          },
          "context": "@cp $(CURATOR_BIN) /usr/local/bin/curator-tui"
        },
        {
          "targetTerm": "CURATOR_BIN",
          "referenceType": "call",
          "fromLocation": {
            "file": "Makefile",
            "line": 58,
            "column": 1
          },
          "context": "$(CURATOR_BIN) --tui"
        }
      ]
    ],
    [
      "MONITOR_BIN",
      [
        {
          "targetTerm": "MONITOR_BIN",
          "referenceType": "call",
          "fromLocation": {
            "file": "Makefile",
            "line": 10,
            "column": 0
          },
          "context": "MONITOR_BIN := $(BIN_DIR)/monitor"
        },
        {
          "targetTerm": "MONITOR_BIN",
          "referenceType": "call",
          "fromLocation": {
            "file": "Makefile",
            "line": 30,
            "column": 13
          },
          "context": "go build -o $(MONITOR_BIN) ./cmd/monitor"
        },
        {
          "targetTerm": "MONITOR_BIN",
          "referenceType": "call",
          "fromLocation": {
            "file": "Makefile",
            "line": 37,
            "column": 5
          },
          "context": "@cp $(MONITOR_BIN) /usr/local/bin/monitor-tui"
        },
        {
          "targetTerm": "MONITOR_BIN",
          "referenceType": "call",
          "fromLocation": {
            "file": "Makefile",
            "line": 61,
            "column": 1
          },
          "context": "$(MONITOR_BIN) --tui"
        }
      ]
    ],
    [
      "lipgloss.NewStyle",
      [
        {
          "targetTerm": "lipgloss.NewStyle",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 19,
            "column": 14
          },
          "context": "titleStyle = lipgloss.NewStyle()."
        },
        {
          "targetTerm": "lipgloss.NewStyle",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 27,
            "column": 13
          },
          "context": "chatStyle = lipgloss.NewStyle()."
        },
        {
          "targetTerm": "lipgloss.NewStyle",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 32,
            "column": 13
          },
          "context": "userStyle = lipgloss.NewStyle()."
        },
        {
          "targetTerm": "lipgloss.NewStyle",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 36,
            "column": 16
          },
          "context": "curatorStyle = lipgloss.NewStyle()."
        },
        {
          "targetTerm": "lipgloss.NewStyle",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 40,
            "column": 13
          },
          "context": "helpStyle = lipgloss.NewStyle()."
        },
        {
          "targetTerm": "lipgloss.NewStyle",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 86,
            "column": 30
          },
          "context": "ta.FocusedStyle.CursorLine = lipgloss.NewStyle()"
        },
        {
          "targetTerm": "lipgloss.NewStyle",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 91,
            "column": 12
          },
          "context": "sp.Style = lipgloss.NewStyle().Foreground(lipgloss.Color(\"212\"))"
        },
        {
          "targetTerm": "lipgloss.NewStyle",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 16,
            "column": 14
          },
          "context": "titleStyle = lipgloss.NewStyle()."
        },
        {
          "targetTerm": "lipgloss.NewStyle",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 21,
            "column": 17
          },
          "context": "selectedStyle = lipgloss.NewStyle()."
        },
        {
          "targetTerm": "lipgloss.NewStyle",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 24,
            "column": 15
          },
          "context": "headerStyle = lipgloss.NewStyle()."
        },
        {
          "targetTerm": "lipgloss.NewStyle",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 17,
            "column": 14
          },
          "context": "titleStyle = lipgloss.NewStyle()."
        },
        {
          "targetTerm": "lipgloss.NewStyle",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 24,
            "column": 14
          },
          "context": "statsStyle = lipgloss.NewStyle()."
        },
        {
          "targetTerm": "lipgloss.NewStyle",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 30,
            "column": 14
          },
          "context": "addedStyle = lipgloss.NewStyle()."
        },
        {
          "targetTerm": "lipgloss.NewStyle",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 33,
            "column": 17
          },
          "context": "modifiedStyle = lipgloss.NewStyle()."
        },
        {
          "targetTerm": "lipgloss.NewStyle",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 36,
            "column": 16
          },
          "context": "deletedStyle = lipgloss.NewStyle()."
        },
        {
          "targetTerm": "lipgloss.NewStyle",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 39,
            "column": 15
          },
          "context": "headerStyle = lipgloss.NewStyle()."
        },
        {
          "targetTerm": "lipgloss.NewStyle",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 236,
            "column": 9
          },
          "context": "help := lipgloss.NewStyle().Faint(true).Render("
        },
        {
          "targetTerm": "lipgloss.NewStyle",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 299,
            "column": 37
          },
          "context": "return m.viewport.View() + \"\\n\\n\" + lipgloss.NewStyle().Faint(true).Render(\"Press q to quit\")"
        }
      ]
    ],
    [
      "Bold",
      [
        {
          "targetTerm": "Bold",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 20,
            "column": 3
          },
          "context": "Bold(true)."
        },
        {
          "targetTerm": "Bold",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 33,
            "column": 3
          },
          "context": "Bold(true)."
        },
        {
          "targetTerm": "Bold",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 37,
            "column": 3
          },
          "context": "Bold(true)."
        },
        {
          "targetTerm": "Bold",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 17,
            "column": 3
          },
          "context": "Bold(true)."
        },
        {
          "targetTerm": "Bold",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 25,
            "column": 3
          },
          "context": "Bold(true)."
        },
        {
          "targetTerm": "Bold",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 18,
            "column": 3
          },
          "context": "Bold(true)."
        },
        {
          "targetTerm": "Bold",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 40,
            "column": 3
          },
          "context": "Bold(true)."
        }
      ]
    ],
    [
      "Foreground",
      [
        {
          "targetTerm": "Foreground",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 21,
            "column": 3
          },
          "context": "Foreground(lipgloss.Color(\"212\"))."
        },
        {
          "targetTerm": "Foreground",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 34,
            "column": 3
          },
          "context": "Foreground(lipgloss.Color(\"120\"))"
        },
        {
          "targetTerm": "Foreground",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 38,
            "column": 3
          },
          "context": "Foreground(lipgloss.Color(\"212\"))"
        },
        {
          "targetTerm": "Foreground",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 91,
            "column": 32
          },
          "context": "sp.Style = lipgloss.NewStyle().Foreground(lipgloss.Color(\"212\"))"
        },
        {
          "targetTerm": "Foreground",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 18,
            "column": 3
          },
          "context": "Foreground(lipgloss.Color(\"212\"))."
        },
        {
          "targetTerm": "Foreground",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 22,
            "column": 3
          },
          "context": "Foreground(lipgloss.Color(\"120\"))"
        },
        {
          "targetTerm": "Foreground",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 26,
            "column": 3
          },
          "context": "Foreground(lipgloss.Color(\"33\"))"
        },
        {
          "targetTerm": "Foreground",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 19,
            "column": 3
          },
          "context": "Foreground(lipgloss.Color(\"212\"))."
        },
        {
          "targetTerm": "Foreground",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 31,
            "column": 3
          },
          "context": "Foreground(lipgloss.Color(\"120\"))"
        },
        {
          "targetTerm": "Foreground",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 34,
            "column": 3
          },
          "context": "Foreground(lipgloss.Color(\"33\"))"
        },
        {
          "targetTerm": "Foreground",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 37,
            "column": 3
          },
          "context": "Foreground(lipgloss.Color(\"196\"))"
        }
      ]
    ],
    [
      "lipgloss.Color",
      [
        {
          "targetTerm": "lipgloss.Color",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 21,
            "column": 14
          },
          "context": "Foreground(lipgloss.Color(\"212\"))."
        },
        {
          "targetTerm": "lipgloss.Color",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 23,
            "column": 20
          },
          "context": "BorderForeground(lipgloss.Color(\"212\"))."
        },
        {
          "targetTerm": "lipgloss.Color",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 29,
            "column": 20
          },
          "context": "BorderForeground(lipgloss.Color(\"33\"))."
        },
        {
          "targetTerm": "lipgloss.Color",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 34,
            "column": 14
          },
          "context": "Foreground(lipgloss.Color(\"120\"))"
        },
        {
          "targetTerm": "lipgloss.Color",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 38,
            "column": 14
          },
          "context": "Foreground(lipgloss.Color(\"212\"))"
        },
        {
          "targetTerm": "lipgloss.Color",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 91,
            "column": 43
          },
          "context": "sp.Style = lipgloss.NewStyle().Foreground(lipgloss.Color(\"212\"))"
        },
        {
          "targetTerm": "lipgloss.Color",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 18,
            "column": 14
          },
          "context": "Foreground(lipgloss.Color(\"212\"))."
        },
        {
          "targetTerm": "lipgloss.Color",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 22,
            "column": 14
          },
          "context": "Foreground(lipgloss.Color(\"120\"))"
        },
        {
          "targetTerm": "lipgloss.Color",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 26,
            "column": 14
          },
          "context": "Foreground(lipgloss.Color(\"33\"))"
        },
        {
          "targetTerm": "lipgloss.Color",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 19,
            "column": 14
          },
          "context": "Foreground(lipgloss.Color(\"212\"))."
        },
        {
          "targetTerm": "lipgloss.Color",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 21,
            "column": 20
          },
          "context": "BorderForeground(lipgloss.Color(\"212\"))."
        },
        {
          "targetTerm": "lipgloss.Color",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 26,
            "column": 20
          },
          "context": "BorderForeground(lipgloss.Color(\"33\"))."
        },
        {
          "targetTerm": "lipgloss.Color",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 31,
            "column": 14
          },
          "context": "Foreground(lipgloss.Color(\"120\"))"
        },
        {
          "targetTerm": "lipgloss.Color",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 34,
            "column": 14
          },
          "context": "Foreground(lipgloss.Color(\"33\"))"
        },
        {
          "targetTerm": "lipgloss.Color",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 37,
            "column": 14
          },
          "context": "Foreground(lipgloss.Color(\"196\"))"
        }
      ]
    ],
    [
      "BorderStyle",
      [
        {
          "targetTerm": "BorderStyle",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 22,
            "column": 3
          },
          "context": "BorderStyle(lipgloss.DoubleBorder())."
        },
        {
          "targetTerm": "BorderStyle",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 28,
            "column": 3
          },
          "context": "BorderStyle(lipgloss.RoundedBorder())."
        },
        {
          "targetTerm": "BorderStyle",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 20,
            "column": 3
          },
          "context": "BorderStyle(lipgloss.DoubleBorder())."
        },
        {
          "targetTerm": "BorderStyle",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 25,
            "column": 3
          },
          "context": "BorderStyle(lipgloss.RoundedBorder())."
        }
      ]
    ],
    [
      "lipgloss.DoubleBorder",
      [
        {
          "targetTerm": "lipgloss.DoubleBorder",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 22,
            "column": 15
          },
          "context": "BorderStyle(lipgloss.DoubleBorder())."
        },
        {
          "targetTerm": "lipgloss.DoubleBorder",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 20,
            "column": 15
          },
          "context": "BorderStyle(lipgloss.DoubleBorder())."
        }
      ]
    ],
    [
      "BorderForeground",
      [
        {
          "targetTerm": "BorderForeground",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 23,
            "column": 3
          },
          "context": "BorderForeground(lipgloss.Color(\"212\"))."
        },
        {
          "targetTerm": "BorderForeground",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 29,
            "column": 3
          },
          "context": "BorderForeground(lipgloss.Color(\"33\"))."
        },
        {
          "targetTerm": "BorderForeground",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 21,
            "column": 3
          },
          "context": "BorderForeground(lipgloss.Color(\"212\"))."
        },
        {
          "targetTerm": "BorderForeground",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 26,
            "column": 3
          },
          "context": "BorderForeground(lipgloss.Color(\"33\"))."
        }
      ]
    ],
    [
      "Padding",
      [
        {
          "targetTerm": "Padding",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 24,
            "column": 3
          },
          "context": "Padding(1, 3)."
        },
        {
          "targetTerm": "Padding",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 30,
            "column": 3
          },
          "context": "Padding(1, 2)"
        },
        {
          "targetTerm": "Padding",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 22,
            "column": 3
          },
          "context": "Padding(1, 2)"
        },
        {
          "targetTerm": "Padding",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 27,
            "column": 3
          },
          "context": "Padding(1, 2)."
        }
      ]
    ],
    [
      "MarginBottom",
      [
        {
          "targetTerm": "MarginBottom",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 25,
            "column": 3
          },
          "context": "MarginBottom(1)"
        },
        {
          "targetTerm": "MarginBottom",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 19,
            "column": 3
          },
          "context": "MarginBottom(1)"
        }
      ]
    ],
    [
      "lipgloss.RoundedBorder",
      [
        {
          "targetTerm": "lipgloss.RoundedBorder",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 28,
            "column": 15
          },
          "context": "BorderStyle(lipgloss.RoundedBorder())."
        },
        {
          "targetTerm": "lipgloss.RoundedBorder",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 25,
            "column": 15
          },
          "context": "BorderStyle(lipgloss.RoundedBorder())."
        }
      ]
    ],
    [
      "Faint",
      [
        {
          "targetTerm": "Faint",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 41,
            "column": 3
          },
          "context": "Faint(true)."
        },
        {
          "targetTerm": "Faint",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 236,
            "column": 29
          },
          "context": "help := lipgloss.NewStyle().Faint(true).Render("
        },
        {
          "targetTerm": "Faint",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 299,
            "column": 57
          },
          "context": "return m.viewport.View() + \"\\n\\n\" + lipgloss.NewStyle().Faint(true).Render(\"Press q to quit\")"
        }
      ]
    ],
    [
      "MarginTop",
      [
        {
          "targetTerm": "MarginTop",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 42,
            "column": 3
          },
          "context": "MarginTop(1)"
        },
        {
          "targetTerm": "MarginTop",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 28,
            "column": 3
          },
          "context": "MarginTop(1)"
        }
      ]
    ],
    [
      "initialModel",
      [
        {
          "targetTerm": "initialModel",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 72,
            "column": 5
          },
          "context": "func initialModel(mode, projectPath string) model {"
        },
        {
          "targetTerm": "initialModel",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 316,
            "column": 6
          },
          "context": "m := initialModel(\"overview\", projectPath)"
        },
        {
          "targetTerm": "initialModel",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 327,
            "column": 6
          },
          "context": "m := initialModel(\"ask\", projectPath)"
        },
        {
          "targetTerm": "initialModel",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 339,
            "column": 6
          },
          "context": "m := initialModel(\"chat\", projectPath)"
        },
        {
          "targetTerm": "initialModel",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 359,
            "column": 6
          },
          "context": "m := initialModel(\"feature\", projectPath)"
        },
        {
          "targetTerm": "initialModel",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 379,
            "column": 6
          },
          "context": "m := initialModel(\"change\", projectPath)"
        },
        {
          "targetTerm": "initialModel",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 399,
            "column": 6
          },
          "context": "m := initialModel(\"memory\", projectPath)"
        },
        {
          "targetTerm": "initialModel",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 81,
            "column": 5
          },
          "context": "func initialModel() model {"
        },
        {
          "targetTerm": "initialModel",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 289,
            "column": 21
          },
          "context": "p := tea.NewProgram(initialModel(), tea.WithAltScreen())"
        },
        {
          "targetTerm": "initialModel",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 66,
            "column": 5
          },
          "context": "func initialModel(mode string, showOverview bool) model {"
        },
        {
          "targetTerm": "initialModel",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 258,
            "column": 2
          },
          "context": "initialModel(\"watch\", withOverview),"
        },
        {
          "targetTerm": "initialModel",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 323,
            "column": 2
          },
          "context": "initialModel(\"status\", false),"
        }
      ]
    ],
    [
      "glamour.NewTermRenderer",
      [
        {
          "targetTerm": "glamour.NewTermRenderer",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 74,
            "column": 16
          },
          "context": "renderer, _ := glamour.NewTermRenderer("
        }
      ]
    ],
    [
      "glamour.WithAutoStyle",
      [
        {
          "targetTerm": "glamour.WithAutoStyle",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 75,
            "column": 2
          },
          "context": "glamour.WithAutoStyle(),"
        }
      ]
    ],
    [
      "glamour.WithWordWrap",
      [
        {
          "targetTerm": "glamour.WithWordWrap",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 76,
            "column": 2
          },
          "context": "glamour.WithWordWrap(80),"
        }
      ]
    ],
    [
      "viewport.New",
      [
        {
          "targetTerm": "viewport.New",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 80,
            "column": 7
          },
          "context": "vp := viewport.New(80, 20)"
        },
        {
          "targetTerm": "viewport.New",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 67,
            "column": 7
          },
          "context": "vp := viewport.New(80, 20)"
        },
        {
          "targetTerm": "viewport.New",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 312,
            "column": 7
          },
          "context": "vp := viewport.New(80, 30)"
        }
      ]
    ],
    [
      "textarea.New",
      [
        {
          "targetTerm": "textarea.New",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 81,
            "column": 7
          },
          "context": "ta := textarea.New()"
        }
      ]
    ],
    [
      "ta.SetWidth",
      [
        {
          "targetTerm": "ta.SetWidth",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 84,
            "column": 1
          },
          "context": "ta.SetWidth(80)"
        }
      ]
    ],
    [
      "ta.SetHeight",
      [
        {
          "targetTerm": "ta.SetHeight",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 85,
            "column": 1
          },
          "context": "ta.SetHeight(4)"
        }
      ]
    ],
    [
      "spinner.New",
      [
        {
          "targetTerm": "spinner.New",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 89,
            "column": 7
          },
          "context": "sp := spinner.New()"
        }
      ]
    ],
    [
      "Init",
      [
        {
          "targetTerm": "Init",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 104,
            "column": 15
          },
          "context": "func (m model) Init() tea.Cmd {"
        },
        {
          "targetTerm": "Init",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 131,
            "column": 15
          },
          "context": "func (m model) Init() tea.Cmd {"
        },
        {
          "targetTerm": "Init",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 79,
            "column": 15
          },
          "context": "func (m model) Init() tea.Cmd {"
        },
        {
          "targetTerm": "Init",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 271,
            "column": 23
          },
          "context": "func (m overviewModel) Init() tea.Cmd {"
        }
      ]
    ],
    [
      "Cmd",
      [
        {
          "targetTerm": "Cmd",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 104,
            "column": 26
          },
          "context": "func (m model) Init() tea.Cmd {"
        },
        {
          "targetTerm": "Cmd",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 112,
            "column": 43
          },
          "context": "func (m model) executeInitialCommand() tea.Cmd {"
        },
        {
          "targetTerm": "Cmd",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 130,
            "column": 69
          },
          "context": "func (m model) runCuratorCommand(command string, args ...string) tea.Cmd {"
        },
        {
          "targetTerm": "Cmd",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 131,
            "column": 26
          },
          "context": "func (m model) Init() tea.Cmd {"
        },
        {
          "targetTerm": "Cmd",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 243,
            "column": 35
          },
          "context": "func (m model) executeSearch() tea.Cmd {"
        },
        {
          "targetTerm": "Cmd",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 79,
            "column": 26
          },
          "context": "func (m model) Init() tea.Cmd {"
        },
        {
          "targetTerm": "Cmd",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 86,
            "column": 19
          },
          "context": "func tickCmd() tea.Cmd {"
        },
        {
          "targetTerm": "Cmd",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 92,
            "column": 37
          },
          "context": "func (m model) startMonitoring() tea.Cmd {"
        },
        {
          "targetTerm": "Cmd",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 271,
            "column": 34
          },
          "context": "func (m overviewModel) Init() tea.Cmd {"
        }
      ]
    ],
    [
      "tea.Batch",
      [
        {
          "targetTerm": "tea.Batch",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 105,
            "column": 8
          },
          "context": "return tea.Batch("
        },
        {
          "targetTerm": "tea.Batch",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 231,
            "column": 11
          },
          "context": "return m, tea.Batch(cmds...)"
        },
        {
          "targetTerm": "tea.Batch",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 80,
            "column": 8
          },
          "context": "return tea.Batch("
        },
        {
          "targetTerm": "tea.Batch",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 154,
            "column": 13
          },
          "context": "return m, tea.Batch(tickCmd(), m.startMonitoring())"
        }
      ]
    ],
    [
      "m.executeInitialCommand",
      [
        {
          "targetTerm": "m.executeInitialCommand",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 108,
            "column": 2
          },
          "context": "m.executeInitialCommand(),"
        }
      ]
    ],
    [
      "executeInitialCommand",
      [
        {
          "targetTerm": "executeInitialCommand",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 112,
            "column": 15
          },
          "context": "func (m model) executeInitialCommand() tea.Cmd {"
        }
      ]
    ],
    [
      "m.runCuratorCommand",
      [
        {
          "targetTerm": "m.runCuratorCommand",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 116,
            "column": 9
          },
          "context": "return m.runCuratorCommand(\"overview\", m.projectPath)"
        },
        {
          "targetTerm": "m.runCuratorCommand",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 124,
            "column": 10
          },
          "context": "return m.runCuratorCommand(\"ask\", m.projectPath, m.question)"
        },
        {
          "targetTerm": "m.runCuratorCommand",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 187,
            "column": 14
          },
          "context": "return m, m.runCuratorCommand(\"ask\", m.projectPath, userMsg)"
        }
      ]
    ],
    [
      "runCuratorCommand",
      [
        {
          "targetTerm": "runCuratorCommand",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 130,
            "column": 15
          },
          "context": "func (m model) runCuratorCommand(command string, args ...string) tea.Cmd {"
        }
      ]
    ],
    [
      "Msg",
      [
        {
          "targetTerm": "Msg",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 131,
            "column": 19
          },
          "context": "return func() tea.Msg {"
        },
        {
          "targetTerm": "Msg",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 139,
            "column": 18
          },
          "context": "return responseMsg{"
        },
        {
          "targetTerm": "Msg",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 145,
            "column": 17
          },
          "context": "return responseMsg{"
        },
        {
          "targetTerm": "Msg",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 244,
            "column": 19
          },
          "context": "return func() tea.Msg {"
        },
        {
          "targetTerm": "Msg",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 87,
            "column": 52
          },
          "context": "return tea.Tick(time.Second, func(t time.Time) tea.Msg {"
        },
        {
          "targetTerm": "Msg",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 93,
            "column": 19
          },
          "context": "return func() tea.Msg {"
        },
        {
          "targetTerm": "Msg",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 119,
            "column": 19
          },
          "context": "status := statusMsg{"
        }
      ]
    ],
    [
      "exec.Command",
      [
        {
          "targetTerm": "exec.Command",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 135,
            "column": 9
          },
          "context": "cmd := exec.Command(\"bun\", cmdArgs...)"
        },
        {
          "targetTerm": "exec.Command",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 277,
            "column": 9
          },
          "context": "cmd := exec.Command(\"bun\", cmdArgs...)"
        },
        {
          "targetTerm": "exec.Command",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 102,
            "column": 10
          },
          "context": "cmd := exec.Command(\"bun\", cmdArgs...)"
        },
        {
          "targetTerm": "exec.Command",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 111,
            "column": 10
          },
          "context": "cmd := exec.Command(\"bun\", \"run\", \"../../src/tools/monitor/cli.ts\", \"status\")"
        },
        {
          "targetTerm": "exec.Command",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 305,
            "column": 8
          },
          "context": "cmd := exec.Command(\"bun\", \"run\", \"../../src/tools/monitor/cli.ts\", \"overview\")"
        },
        {
          "targetTerm": "exec.Command",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 59,
            "column": 13
          },
          "context": "execCmd := exec.Command(\"bun\", cmdArgs...)"
        },
        {
          "targetTerm": "exec.Command",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 96,
            "column": 13
          },
          "context": "execCmd := exec.Command(\"bun\", cmdArgs...)"
        },
        {
          "targetTerm": "exec.Command",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 146,
            "column": 13
          },
          "context": "execCmd := exec.Command(\"bun\", cmdArgs...)"
        },
        {
          "targetTerm": "exec.Command",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 181,
            "column": 13
          },
          "context": "execCmd := exec.Command(\"bun\", cmdArgs...)"
        },
        {
          "targetTerm": "exec.Command",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 210,
            "column": 13
          },
          "context": "execCmd := exec.Command(\"bun\", cmdArgs...)"
        },
        {
          "targetTerm": "exec.Command",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 235,
            "column": 13
          },
          "context": "execCmd := exec.Command(\"bun\", cmdArgs...)"
        },
        {
          "targetTerm": "exec.Command",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/monitor/main.go",
            "line": 49,
            "column": 13
          },
          "context": "execCmd := exec.Command(\"bun\", cmdArgs...)"
        },
        {
          "targetTerm": "exec.Command",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/monitor/main.go",
            "line": 69,
            "column": 13
          },
          "context": "execCmd := exec.Command(\"bun\", cmdArgs...)"
        },
        {
          "targetTerm": "exec.Command",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/monitor/main.go",
            "line": 89,
            "column": 13
          },
          "context": "execCmd := exec.Command(\"bun\", cmdArgs...)"
        },
        {
          "targetTerm": "exec.Command",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 77,
            "column": 8
          },
          "context": "cmd = exec.Command(executor, cmdArgs...)"
        },
        {
          "targetTerm": "exec.Command",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 96,
            "column": 8
          },
          "context": "cmd = exec.Command(cliPath, cmdArgs...)"
        }
      ]
    ],
    [
      "cmd.CombinedOutput",
      [
        {
          "targetTerm": "cmd.CombinedOutput",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 136,
            "column": 17
          },
          "context": "output, err := cmd.CombinedOutput()"
        },
        {
          "targetTerm": "cmd.CombinedOutput",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 278,
            "column": 17
          },
          "context": "output, err := cmd.CombinedOutput()"
        },
        {
          "targetTerm": "cmd.CombinedOutput",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 103,
            "column": 18
          },
          "context": "output, err := cmd.CombinedOutput()"
        },
        {
          "targetTerm": "cmd.CombinedOutput",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 112,
            "column": 18
          },
          "context": "output, err := cmd.CombinedOutput()"
        },
        {
          "targetTerm": "cmd.CombinedOutput",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 306,
            "column": 16
          },
          "context": "output, err := cmd.CombinedOutput()"
        }
      ]
    ],
    [
      "fmt.Sprintf",
      [
        {
          "targetTerm": "fmt.Sprintf",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 140,
            "column": 13
          },
          "context": "content: fmt.Sprintf(\"Error: %v\\n%s\", err, string(output)),"
        },
        {
          "targetTerm": "fmt.Sprintf",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 260,
            "column": 9
          },
          "context": "return fmt.Sprintf(\"Error: %v\\n\\nPress Ctrl+C to quit.\", m.err)"
        },
        {
          "targetTerm": "fmt.Sprintf",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 366,
            "column": 11
          },
          "context": "content: fmt.Sprintf(\"Feature Request: %s\", description),"
        },
        {
          "targetTerm": "fmt.Sprintf",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 386,
            "column": 11
          },
          "context": "content: fmt.Sprintf(\"Change Analysis: %s\", description),"
        },
        {
          "targetTerm": "fmt.Sprintf",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 210,
            "column": 9
          },
          "context": "return fmt.Sprintf(\"Error: %v\\n\\nPress 'q' to quit.\", m.err)"
        },
        {
          "targetTerm": "fmt.Sprintf",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 273,
            "column": 26
          },
          "context": "return searchResultMsg(fmt.Sprintf(\"Claude Batch Mode for topic: %s\\n\\nThis would run multiple searches and create a comprehensive report.\\n(Full implementation pending)\", topic))"
        },
        {
          "targetTerm": "fmt.Sprintf",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 163,
            "column": 32
          },
          "context": "m.events = append(m.events, fmt.Sprintf(\"[%s] %s\","
        },
        {
          "targetTerm": "fmt.Sprintf",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 209,
            "column": 9
          },
          "context": "return fmt.Sprintf(\"Error: %v\\n\\nPress 'q' to quit.\", m.err)"
        },
        {
          "targetTerm": "fmt.Sprintf",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 216,
            "column": 28
          },
          "context": "stats := statsStyle.Render(fmt.Sprintf("
        },
        {
          "targetTerm": "fmt.Sprintf",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 73,
            "column": 41
          },
          "context": "cmdArgs = append(cmdArgs, \"--\"+flag, fmt.Sprintf(\"%d\", intVal))"
        },
        {
          "targetTerm": "fmt.Sprintf",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 92,
            "column": 41
          },
          "context": "cmdArgs = append(cmdArgs, \"--\"+flag, fmt.Sprintf(\"%d\", intVal))"
        }
      ]
    ],
    [
      "Update",
      [
        {
          "targetTerm": "Update",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 152,
            "column": 15
          },
          "context": "func (m model) Update(msg tea.Msg) (tea.Model, tea.Cmd) {"
        },
        {
          "targetTerm": "Update",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 135,
            "column": 15
          },
          "context": "func (m model) Update(msg tea.Msg) (tea.Model, tea.Cmd) {"
        },
        {
          "targetTerm": "Update",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 132,
            "column": 15
          },
          "context": "func (m model) Update(msg tea.Msg) (tea.Model, tea.Cmd) {"
        },
        {
          "targetTerm": "Update",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 275,
            "column": 23
          },
          "context": "func (m overviewModel) Update(msg tea.Msg) (tea.Model, tea.Cmd) {"
        }
      ]
    ],
    [
      "textarea.SetWidth",
      [
        {
          "targetTerm": "textarea.SetWidth",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 165,
            "column": 4
          },
          "context": "m.textarea.SetWidth(msg.Width - 4)"
        }
      ]
    ],
    [
      "Type",
      [
        {
          "targetTerm": "Type",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 170,
            "column": 13
          },
          "context": "switch msg.Type {"
        }
      ]
    ],
    [
      "Loading",
      [
        {
          "targetTerm": "Loading",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 174,
            "column": 31
          },
          "context": "if m.mode == \"chat\" && !m.isLoading {"
        },
        {
          "targetTerm": "Loading",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 211,
            "column": 9
          },
          "context": "if m.isLoading {"
        },
        {
          "targetTerm": "Loading",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 221,
            "column": 29
          },
          "context": "if m.mode == \"chat\" && !m.isLoading {"
        },
        {
          "targetTerm": "Loading",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 268,
            "column": 8
          },
          "context": "if m.isLoading {"
        },
        {
          "targetTerm": "Loading",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 279,
            "column": 29
          },
          "context": "if m.mode == \"chat\" && !m.isLoading {"
        }
      ]
    ],
    [
      "textarea.Value",
      [
        {
          "targetTerm": "textarea.Value",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 178,
            "column": 44
          },
          "context": "if m.mode == \"chat\" && !m.isLoading && m.textarea.Value() != \"\" {"
        },
        {
          "targetTerm": "textarea.Value",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 180,
            "column": 17
          },
          "context": "userMsg := m.textarea.Value()"
        }
      ]
    ],
    [
      "textarea.Reset",
      [
        {
          "targetTerm": "textarea.Reset",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 185,
            "column": 6
          },
          "context": "m.textarea.Reset()"
        }
      ]
    ],
    [
      "Error",
      [
        {
          "targetTerm": "Error",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 194,
            "column": 11
          },
          "context": "if msg.isError {"
        }
      ]
    ],
    [
      "fmt.Errorf",
      [
        {
          "targetTerm": "fmt.Errorf",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 195,
            "column": 11
          },
          "context": "m.err = fmt.Errorf(msg.content)"
        },
        {
          "targetTerm": "fmt.Errorf",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 250,
            "column": 18
          },
          "context": "return errMsg(fmt.Errorf(\"search pattern required\"))"
        },
        {
          "targetTerm": "fmt.Errorf",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 256,
            "column": 18
          },
          "context": "return errMsg(fmt.Errorf(\"symbol name required\"))"
        },
        {
          "targetTerm": "fmt.Errorf",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 280,
            "column": 17
          },
          "context": "return errMsg(fmt.Errorf(\"command failed: %w\\n%s\", err, string(output)))"
        },
        {
          "targetTerm": "fmt.Errorf",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 152,
            "column": 10
          },
          "context": "return fmt.Errorf(\"symbol name required\")"
        }
      ]
    ],
    [
      "m.updateViewport",
      [
        {
          "targetTerm": "m.updateViewport",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 206,
            "column": 2
          },
          "context": "m.updateViewport()"
        },
        {
          "targetTerm": "m.updateViewport",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 347,
            "column": 1
          },
          "context": "m.updateViewport()"
        }
      ]
    ],
    [
      "spinner.Update",
      [
        {
          "targetTerm": "spinner.Update",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 213,
            "column": 22
          },
          "context": "m.spinner, cmd = m.spinner.Update(msg)"
        }
      ]
    ],
    [
      "textarea.Update",
      [
        {
          "targetTerm": "textarea.Update",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 223,
            "column": 22
          },
          "context": "m.textarea, cmd = m.textarea.Update(msg)"
        }
      ]
    ],
    [
      "viewport.Update",
      [
        {
          "targetTerm": "viewport.Update",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 228,
            "column": 21
          },
          "context": "m.viewport, cmd = m.viewport.Update(msg)"
        },
        {
          "targetTerm": "viewport.Update",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 185,
            "column": 21
          },
          "context": "m.viewport, cmd = m.viewport.Update(msg)"
        },
        {
          "targetTerm": "viewport.Update",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 291,
            "column": 21
          },
          "context": "m.viewport, cmd = m.viewport.Update(msg)"
        }
      ]
    ],
    [
      "updateViewport",
      [
        {
          "targetTerm": "updateViewport",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 234,
            "column": 16
          },
          "context": "func (m *model) updateViewport() {"
        }
      ]
    ],
    [
      "content.WriteString",
      [
        {
          "targetTerm": "content.WriteString",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 240,
            "column": 3
          },
          "context": "content.WriteString(userStyle.Render(\"🧑 You:\") + \"\\n\")"
        },
        {
          "targetTerm": "content.WriteString",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 241,
            "column": 3
          },
          "context": "content.WriteString(msg.content + \"\\n\\n\")"
        },
        {
          "targetTerm": "content.WriteString",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 243,
            "column": 3
          },
          "context": "content.WriteString(curatorStyle.Render(\"🤖 Curator:\") + \"\\n\")"
        },
        {
          "targetTerm": "content.WriteString",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 247,
            "column": 4
          },
          "context": "content.WriteString(msg.content + \"\\n\\n\")"
        },
        {
          "targetTerm": "content.WriteString",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 249,
            "column": 4
          },
          "context": "content.WriteString(rendered + \"\\n\")"
        }
      ]
    ],
    [
      "userStyle.Render",
      [
        {
          "targetTerm": "userStyle.Render",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 240,
            "column": 23
          },
          "context": "content.WriteString(userStyle.Render(\"🧑 You:\") + \"\\n\")"
        }
      ]
    ],
    [
      "curatorStyle.Render",
      [
        {
          "targetTerm": "curatorStyle.Render",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 243,
            "column": 23
          },
          "context": "content.WriteString(curatorStyle.Render(\"🤖 Curator:\") + \"\\n\")"
        }
      ]
    ],
    [
      "renderer.Render",
      [
        {
          "targetTerm": "renderer.Render",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 245,
            "column": 22
          },
          "context": "rendered, err := m.renderer.Render(msg.content)"
        }
      ]
    ],
    [
      "viewport.SetContent",
      [
        {
          "targetTerm": "viewport.SetContent",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 254,
            "column": 3
          },
          "context": "m.viewport.SetContent(content.String())"
        },
        {
          "targetTerm": "viewport.SetContent",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 171,
            "column": 4
          },
          "context": "m.viewport.SetContent(m.renderEvents())"
        }
      ]
    ],
    [
      "content.String",
      [
        {
          "targetTerm": "content.String",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 254,
            "column": 23
          },
          "context": "m.viewport.SetContent(content.String())"
        }
      ]
    ],
    [
      "viewport.GotoBottom",
      [
        {
          "targetTerm": "viewport.GotoBottom",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 255,
            "column": 3
          },
          "context": "m.viewport.GotoBottom()"
        }
      ]
    ],
    [
      "View",
      [
        {
          "targetTerm": "View",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 258,
            "column": 15
          },
          "context": "func (m model) View() string {"
        },
        {
          "targetTerm": "View",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 208,
            "column": 15
          },
          "context": "func (m model) View() string {"
        },
        {
          "targetTerm": "View",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 207,
            "column": 15
          },
          "context": "func (m model) View() string {"
        },
        {
          "targetTerm": "View",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 295,
            "column": 23
          },
          "context": "func (m overviewModel) View() string {"
        }
      ]
    ],
    [
      "titleStyle.Render",
      [
        {
          "targetTerm": "titleStyle.Render",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 264,
            "column": 10
          },
          "context": "title := titleStyle.Render(\"🤖 Curator - AI Codebase Assistant\")"
        },
        {
          "targetTerm": "titleStyle.Render",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 215,
            "column": 9
          },
          "context": "return titleStyle.Render(\"🔍 SmartGrep TUI\") + \"\\n\\n\" + m.mainMenu.View()"
        },
        {
          "targetTerm": "titleStyle.Render",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 218,
            "column": 9
          },
          "context": "return titleStyle.Render(\"Pattern Search\") + \"\\n\\n\" +"
        },
        {
          "targetTerm": "titleStyle.Render",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 224,
            "column": 9
          },
          "context": "return titleStyle.Render(\"Find References\") + \"\\n\\n\" +"
        },
        {
          "targetTerm": "titleStyle.Render",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 230,
            "column": 9
          },
          "context": "return titleStyle.Render(\"Search Results\") + \"\\n\\n\" +"
        },
        {
          "targetTerm": "titleStyle.Render",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 213,
            "column": 10
          },
          "context": "title := titleStyle.Render(\"📊 Monitor Dashboard\")"
        }
      ]
    ],
    [
      "chatStyle.Render",
      [
        {
          "targetTerm": "chatStyle.Render",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 269,
            "column": 16
          },
          "context": "mainContent = chatStyle.Render("
        },
        {
          "targetTerm": "chatStyle.Render",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 274,
            "column": 16
          },
          "context": "mainContent = chatStyle.Render(m.viewport.View())"
        }
      ]
    ],
    [
      "viewport.View",
      [
        {
          "targetTerm": "viewport.View",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 270,
            "column": 5
          },
          "context": "m.viewport.View() + \"\\n\\n\" +"
        },
        {
          "targetTerm": "viewport.View",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 274,
            "column": 35
          },
          "context": "mainContent = chatStyle.Render(m.viewport.View())"
        },
        {
          "targetTerm": "viewport.View",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 233,
            "column": 14
          },
          "context": "content := m.viewport.View()"
        },
        {
          "targetTerm": "viewport.View",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 299,
            "column": 10
          },
          "context": "return m.viewport.View() + \"\\n\\n\" + lipgloss.NewStyle().Faint(true).Render(\"Press q to quit\")"
        }
      ]
    ],
    [
      "spinner.View",
      [
        {
          "targetTerm": "spinner.View",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 271,
            "column": 6
          },
          "context": "m.spinner.View() + \" Thinking...\","
        }
      ]
    ],
    [
      "textarea.View",
      [
        {
          "targetTerm": "textarea.View",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 280,
            "column": 16
          },
          "context": "inputArea = m.textarea.View()"
        }
      ]
    ],
    [
      "helpStyle.Render",
      [
        {
          "targetTerm": "helpStyle.Render",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 287,
            "column": 9
          },
          "context": "help = helpStyle.Render(\"Enter: send • Esc: quit • ↑/↓: scroll\")"
        },
        {
          "targetTerm": "helpStyle.Render",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 289,
            "column": 9
          },
          "context": "help = helpStyle.Render(\"↑/↓: scroll • Ctrl+C: quit\")"
        }
      ]
    ],
    [
      "lipgloss.JoinVertical",
      [
        {
          "targetTerm": "lipgloss.JoinVertical",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 293,
            "column": 8
          },
          "context": "return lipgloss.JoinVertical("
        },
        {
          "targetTerm": "lipgloss.JoinVertical",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 240,
            "column": 8
          },
          "context": "return lipgloss.JoinVertical("
        }
      ]
    ],
    [
      "RunTUI",
      [
        {
          "targetTerm": "RunTUI",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 304,
            "column": 5
          },
          "context": "func RunTUI(projectPath string) error {"
        },
        {
          "targetTerm": "RunTUI",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 288,
            "column": 5
          },
          "context": "func RunTUI() error {"
        },
        {
          "targetTerm": "RunTUI",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 297,
            "column": 8
          },
          "context": "return RunTUI()"
        },
        {
          "targetTerm": "RunTUI",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 303,
            "column": 8
          },
          "context": "return RunTUI()"
        },
        {
          "targetTerm": "RunTUI",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 309,
            "column": 8
          },
          "context": "return RunTUI()"
        },
        {
          "targetTerm": "RunTUI",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 250,
            "column": 5
          },
          "context": "func RunTUI() error {"
        }
      ]
    ],
    [
      "os.Getwd",
      [
        {
          "targetTerm": "os.Getwd",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 306,
            "column": 19
          },
          "context": "projectPath, _ = os.Getwd()"
        },
        {
          "targetTerm": "os.Getwd",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 313,
            "column": 19
          },
          "context": "projectPath, _ = os.Getwd()"
        },
        {
          "targetTerm": "os.Getwd",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 324,
            "column": 19
          },
          "context": "projectPath, _ = os.Getwd()"
        },
        {
          "targetTerm": "os.Getwd",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 336,
            "column": 19
          },
          "context": "projectPath, _ = os.Getwd()"
        },
        {
          "targetTerm": "os.Getwd",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 356,
            "column": 19
          },
          "context": "projectPath, _ = os.Getwd()"
        },
        {
          "targetTerm": "os.Getwd",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 376,
            "column": 19
          },
          "context": "projectPath, _ = os.Getwd()"
        },
        {
          "targetTerm": "os.Getwd",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 396,
            "column": 19
          },
          "context": "projectPath, _ = os.Getwd()"
        }
      ]
    ],
    [
      "RunChatTUI",
      [
        {
          "targetTerm": "RunChatTUI",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 308,
            "column": 8
          },
          "context": "return RunChatTUI(projectPath)"
        },
        {
          "targetTerm": "RunChatTUI",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 334,
            "column": 5
          },
          "context": "func RunChatTUI(projectPath string) error {"
        }
      ]
    ],
    [
      "RunOverviewTUI",
      [
        {
          "targetTerm": "RunOverviewTUI",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 311,
            "column": 5
          },
          "context": "func RunOverviewTUI(projectPath string, newSession bool) error {"
        },
        {
          "targetTerm": "RunOverviewTUI",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 303,
            "column": 5
          },
          "context": "func RunOverviewTUI() error {"
        }
      ]
    ],
    [
      "tea.NewProgram",
      [
        {
          "targetTerm": "tea.NewProgram",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 317,
            "column": 6
          },
          "context": "p := tea.NewProgram(m, tea.WithAltScreen())"
        },
        {
          "targetTerm": "tea.NewProgram",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 329,
            "column": 6
          },
          "context": "p := tea.NewProgram(m, tea.WithAltScreen())"
        },
        {
          "targetTerm": "tea.NewProgram",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 349,
            "column": 6
          },
          "context": "p := tea.NewProgram(m, tea.WithAltScreen())"
        },
        {
          "targetTerm": "tea.NewProgram",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 369,
            "column": 6
          },
          "context": "p := tea.NewProgram(m, tea.WithAltScreen())"
        },
        {
          "targetTerm": "tea.NewProgram",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 389,
            "column": 6
          },
          "context": "p := tea.NewProgram(m, tea.WithAltScreen())"
        },
        {
          "targetTerm": "tea.NewProgram",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 402,
            "column": 6
          },
          "context": "p := tea.NewProgram(m, tea.WithAltScreen())"
        },
        {
          "targetTerm": "tea.NewProgram",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 289,
            "column": 6
          },
          "context": "p := tea.NewProgram(initialModel(), tea.WithAltScreen())"
        },
        {
          "targetTerm": "tea.NewProgram",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 257,
            "column": 6
          },
          "context": "p := tea.NewProgram("
        },
        {
          "targetTerm": "tea.NewProgram",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 315,
            "column": 6
          },
          "context": "p := tea.NewProgram(overviewModel{viewport: vp}, tea.WithAltScreen())"
        },
        {
          "targetTerm": "tea.NewProgram",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 322,
            "column": 6
          },
          "context": "p := tea.NewProgram("
        }
      ]
    ],
    [
      "tea.WithAltScreen",
      [
        {
          "targetTerm": "tea.WithAltScreen",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 317,
            "column": 24
          },
          "context": "p := tea.NewProgram(m, tea.WithAltScreen())"
        },
        {
          "targetTerm": "tea.WithAltScreen",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 329,
            "column": 24
          },
          "context": "p := tea.NewProgram(m, tea.WithAltScreen())"
        },
        {
          "targetTerm": "tea.WithAltScreen",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 349,
            "column": 24
          },
          "context": "p := tea.NewProgram(m, tea.WithAltScreen())"
        },
        {
          "targetTerm": "tea.WithAltScreen",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 369,
            "column": 24
          },
          "context": "p := tea.NewProgram(m, tea.WithAltScreen())"
        },
        {
          "targetTerm": "tea.WithAltScreen",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 389,
            "column": 24
          },
          "context": "p := tea.NewProgram(m, tea.WithAltScreen())"
        },
        {
          "targetTerm": "tea.WithAltScreen",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 402,
            "column": 24
          },
          "context": "p := tea.NewProgram(m, tea.WithAltScreen())"
        },
        {
          "targetTerm": "tea.WithAltScreen",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 289,
            "column": 37
          },
          "context": "p := tea.NewProgram(initialModel(), tea.WithAltScreen())"
        },
        {
          "targetTerm": "tea.WithAltScreen",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 259,
            "column": 2
          },
          "context": "tea.WithAltScreen(),"
        },
        {
          "targetTerm": "tea.WithAltScreen",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 315,
            "column": 50
          },
          "context": "p := tea.NewProgram(overviewModel{viewport: vp}, tea.WithAltScreen())"
        },
        {
          "targetTerm": "tea.WithAltScreen",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 324,
            "column": 2
          },
          "context": "tea.WithAltScreen(),"
        }
      ]
    ],
    [
      "p.Run",
      [
        {
          "targetTerm": "p.Run",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 318,
            "column": 11
          },
          "context": "_, err := p.Run()"
        },
        {
          "targetTerm": "p.Run",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 330,
            "column": 11
          },
          "context": "_, err := p.Run()"
        },
        {
          "targetTerm": "p.Run",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 350,
            "column": 11
          },
          "context": "_, err := p.Run()"
        },
        {
          "targetTerm": "p.Run",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 370,
            "column": 11
          },
          "context": "_, err := p.Run()"
        },
        {
          "targetTerm": "p.Run",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 390,
            "column": 11
          },
          "context": "_, err := p.Run()"
        },
        {
          "targetTerm": "p.Run",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 403,
            "column": 11
          },
          "context": "_, err := p.Run()"
        },
        {
          "targetTerm": "p.Run",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 290,
            "column": 11
          },
          "context": "_, err := p.Run()"
        },
        {
          "targetTerm": "p.Run",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 261,
            "column": 11
          },
          "context": "_, err := p.Run()"
        },
        {
          "targetTerm": "p.Run",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 316,
            "column": 10
          },
          "context": "_, err = p.Run()"
        },
        {
          "targetTerm": "p.Run",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 326,
            "column": 11
          },
          "context": "_, err := p.Run()"
        }
      ]
    ],
    [
      "RunAskTUI",
      [
        {
          "targetTerm": "RunAskTUI",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 322,
            "column": 5
          },
          "context": "func RunAskTUI(projectPath, question string) error {"
        }
      ]
    ],
    [
      "textarea.Focus",
      [
        {
          "targetTerm": "textarea.Focus",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 340,
            "column": 3
          },
          "context": "m.textarea.Focus()"
        }
      ]
    ],
    [
      "RunFeatureTUI",
      [
        {
          "targetTerm": "RunFeatureTUI",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 354,
            "column": 5
          },
          "context": "func RunFeatureTUI(projectPath, description string) error {"
        }
      ]
    ],
    [
      "RunChangeTUI",
      [
        {
          "targetTerm": "RunChangeTUI",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 374,
            "column": 5
          },
          "context": "func RunChangeTUI(projectPath, description string) error {"
        }
      ]
    ],
    [
      "RunMemoryTUI",
      [
        {
          "targetTerm": "RunMemoryTUI",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 394,
            "column": 5
          },
          "context": "func RunMemoryTUI(projectPath string) error {"
        }
      ]
    ],
    [
      "Map",
      [
        {
          "targetTerm": "Map",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 38,
            "column": 14
          },
          "context": "var keys = keyMap{"
        }
      ]
    ],
    [
      "key.NewBinding",
      [
        {
          "targetTerm": "key.NewBinding",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 39,
            "column": 5
          },
          "context": "Up: key.NewBinding("
        },
        {
          "targetTerm": "key.NewBinding",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 43,
            "column": 7
          },
          "context": "Down: key.NewBinding("
        },
        {
          "targetTerm": "key.NewBinding",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 47,
            "column": 9
          },
          "context": "Select: key.NewBinding("
        },
        {
          "targetTerm": "key.NewBinding",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 51,
            "column": 7
          },
          "context": "Back: key.NewBinding("
        },
        {
          "targetTerm": "key.NewBinding",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 55,
            "column": 7
          },
          "context": "Quit: key.NewBinding("
        }
      ]
    ],
    [
      "key.WithKeys",
      [
        {
          "targetTerm": "key.WithKeys",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 40,
            "column": 2
          },
          "context": "key.WithKeys(\"up\", \"k\"),"
        },
        {
          "targetTerm": "key.WithKeys",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 44,
            "column": 2
          },
          "context": "key.WithKeys(\"down\", \"j\"),"
        },
        {
          "targetTerm": "key.WithKeys",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 48,
            "column": 2
          },
          "context": "key.WithKeys(\"enter\"),"
        },
        {
          "targetTerm": "key.WithKeys",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 52,
            "column": 2
          },
          "context": "key.WithKeys(\"esc\"),"
        },
        {
          "targetTerm": "key.WithKeys",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 56,
            "column": 2
          },
          "context": "key.WithKeys(\"q\", \"ctrl+c\"),"
        }
      ]
    ],
    [
      "key.WithHelp",
      [
        {
          "targetTerm": "key.WithHelp",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 41,
            "column": 2
          },
          "context": "key.WithHelp(\"↑/k\", \"up\"),"
        },
        {
          "targetTerm": "key.WithHelp",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 45,
            "column": 2
          },
          "context": "key.WithHelp(\"↓/j\", \"down\"),"
        },
        {
          "targetTerm": "key.WithHelp",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 49,
            "column": 2
          },
          "context": "key.WithHelp(\"enter\", \"select\"),"
        },
        {
          "targetTerm": "key.WithHelp",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 53,
            "column": 2
          },
          "context": "key.WithHelp(\"esc\", \"back\"),"
        },
        {
          "targetTerm": "key.WithHelp",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 57,
            "column": 2
          },
          "context": "key.WithHelp(\"q\", \"quit\"),"
        }
      ]
    ],
    [
      "Title",
      [
        {
          "targetTerm": "Title",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 68,
            "column": 18
          },
          "context": "func (i menuItem) Title() string       { return i.title }"
        }
      ]
    ],
    [
      "Description",
      [
        {
          "targetTerm": "Description",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 69,
            "column": 18
          },
          "context": "func (i menuItem) Description() string { return i.description }"
        }
      ]
    ],
    [
      "FilterValue",
      [
        {
          "targetTerm": "FilterValue",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 70,
            "column": 18
          },
          "context": "func (i menuItem) FilterValue() string { return i.title }"
        }
      ]
    ],
    [
      "Item",
      [
        {
          "targetTerm": "Item",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 83,
            "column": 17
          },
          "context": "items := []list.Item{"
        },
        {
          "targetTerm": "Item",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 84,
            "column": 6
          },
          "context": "menuItem{"
        },
        {
          "targetTerm": "Item",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 89,
            "column": 6
          },
          "context": "menuItem{"
        },
        {
          "targetTerm": "Item",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 94,
            "column": 6
          },
          "context": "menuItem{"
        },
        {
          "targetTerm": "Item",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 99,
            "column": 6
          },
          "context": "menuItem{"
        },
        {
          "targetTerm": "Item",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 104,
            "column": 6
          },
          "context": "menuItem{"
        }
      ]
    ],
    [
      "list.New",
      [
        {
          "targetTerm": "list.New",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 112,
            "column": 13
          },
          "context": "mainMenu := list.New(items, list.NewDefaultDelegate(), 0, 0)"
        }
      ]
    ],
    [
      "list.NewDefaultDelegate",
      [
        {
          "targetTerm": "list.NewDefaultDelegate",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 112,
            "column": 29
          },
          "context": "mainMenu := list.New(items, list.NewDefaultDelegate(), 0, 0)"
        }
      ]
    ],
    [
      "mainMenu.SetShowStatusBar",
      [
        {
          "targetTerm": "mainMenu.SetShowStatusBar",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 114,
            "column": 1
          },
          "context": "mainMenu.SetShowStatusBar(false)"
        }
      ]
    ],
    [
      "mainMenu.SetFilteringEnabled",
      [
        {
          "targetTerm": "mainMenu.SetFilteringEnabled",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 115,
            "column": 1
          },
          "context": "mainMenu.SetFilteringEnabled(false)"
        }
      ]
    ],
    [
      "textinput.New",
      [
        {
          "targetTerm": "textinput.New",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 118,
            "column": 16
          },
          "context": "searchInput := textinput.New()"
        }
      ]
    ],
    [
      "mainMenu.SetWidth",
      [
        {
          "targetTerm": "mainMenu.SetWidth",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 138,
            "column": 4
          },
          "context": "m.mainMenu.SetWidth(msg.Width)"
        }
      ]
    ],
    [
      "mainMenu.SetHeight",
      [
        {
          "targetTerm": "mainMenu.SetHeight",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 139,
            "column": 4
          },
          "context": "m.mainMenu.SetHeight(msg.Height - 4)"
        }
      ]
    ],
    [
      "key.Matches",
      [
        {
          "targetTerm": "key.Matches",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 146,
            "column": 8
          },
          "context": "case key.Matches(msg, keys.Quit):"
        },
        {
          "targetTerm": "key.Matches",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 148,
            "column": 8
          },
          "context": "case key.Matches(msg, keys.Select):"
        },
        {
          "targetTerm": "key.Matches",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 161,
            "column": 8
          },
          "context": "case key.Matches(msg, keys.Back):"
        },
        {
          "targetTerm": "key.Matches",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 166,
            "column": 8
          },
          "context": "case key.Matches(msg, keys.Quit):"
        },
        {
          "targetTerm": "key.Matches",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 174,
            "column": 8
          },
          "context": "case key.Matches(msg, keys.Back):"
        },
        {
          "targetTerm": "key.Matches",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 178,
            "column": 8
          },
          "context": "case key.Matches(msg, keys.Quit):"
        }
      ]
    ],
    [
      "mainMenu.SelectedItem",
      [
        {
          "targetTerm": "mainMenu.SelectedItem",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 149,
            "column": 18
          },
          "context": "selected := m.mainMenu.SelectedItem().(menuItem)"
        }
      ]
    ],
    [
      "searchInput.Focus",
      [
        {
          "targetTerm": "searchInput.Focus",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 152,
            "column": 7
          },
          "context": "m.searchInput.Focus()"
        }
      ]
    ],
    [
      "m.executeSearch",
      [
        {
          "targetTerm": "m.executeSearch",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 156,
            "column": 14
          },
          "context": "return m, m.executeSearch()"
        },
        {
          "targetTerm": "m.executeSearch",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 169,
            "column": 14
          },
          "context": "return m, m.executeSearch()"
        }
      ]
    ],
    [
      "searchInput.Blur",
      [
        {
          "targetTerm": "searchInput.Blur",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 163,
            "column": 6
          },
          "context": "m.searchInput.Blur()"
        }
      ]
    ],
    [
      "searchInput.SetValue",
      [
        {
          "targetTerm": "searchInput.SetValue",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 164,
            "column": 6
          },
          "context": "m.searchInput.SetValue(\"\")"
        }
      ]
    ],
    [
      "mainMenu.Update",
      [
        {
          "targetTerm": "mainMenu.Update",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 197,
            "column": 22
          },
          "context": "m.mainMenu, cmd = m.mainMenu.Update(msg)"
        }
      ]
    ],
    [
      "searchInput.Update",
      [
        {
          "targetTerm": "searchInput.Update",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 201,
            "column": 25
          },
          "context": "m.searchInput, cmd = m.searchInput.Update(msg)"
        }
      ]
    ],
    [
      "mainMenu.View",
      [
        {
          "targetTerm": "mainMenu.View",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 215,
            "column": 60
          },
          "context": "return titleStyle.Render(\"🔍 SmartGrep TUI\") + \"\\n\\n\" + m.mainMenu.View()"
        }
      ]
    ],
    [
      "pattern",
      [
        {
          "targetTerm": "pattern",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 219,
            "column": 17
          },
          "context": "\"Enter search pattern (use | for OR, & for AND, ! for NOT):\\n\\n\" +"
        }
      ]
    ],
    [
      "searchInput.View",
      [
        {
          "targetTerm": "searchInput.View",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 220,
            "column": 5
          },
          "context": "m.searchInput.View() + \"\\n\\n\" +"
        },
        {
          "targetTerm": "searchInput.View",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 226,
            "column": 5
          },
          "context": "m.searchInput.View() + \"\\n\\n\" +"
        }
      ]
    ],
    [
      "executeSearch",
      [
        {
          "targetTerm": "executeSearch",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 243,
            "column": 15
          },
          "context": "func (m model) executeSearch() tea.Cmd {"
        }
      ]
    ],
    [
      "searchInput.Value",
      [
        {
          "targetTerm": "searchInput.Value",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 249,
            "column": 8
          },
          "context": "if m.searchInput.Value() == \"\" {"
        },
        {
          "targetTerm": "searchInput.Value",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 252,
            "column": 67
          },
          "context": "cmdArgs = []string{\"run\", \"../../src/tools/smartgrep/cli.ts\", m.searchInput.Value()}"
        },
        {
          "targetTerm": "searchInput.Value",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 255,
            "column": 8
          },
          "context": "if m.searchInput.Value() == \"\" {"
        },
        {
          "targetTerm": "searchInput.Value",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 258,
            "column": 75
          },
          "context": "cmdArgs = []string{\"run\", \"../../src/tools/smartgrep/cli.ts\", \"refs\", m.searchInput.Value()}"
        },
        {
          "targetTerm": "searchInput.Value",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 270,
            "column": 8
          },
          "context": "if m.searchInput.Value() != \"\" {"
        },
        {
          "targetTerm": "searchInput.Value",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 271,
            "column": 14
          },
          "context": "topic = m.searchInput.Value()"
        }
      ]
    ],
    [
      "errMsg",
      [
        {
          "targetTerm": "errMsg",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 250,
            "column": 11
          },
          "context": "return errMsg(fmt.Errorf(\"search pattern required\"))"
        },
        {
          "targetTerm": "errMsg",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 256,
            "column": 11
          },
          "context": "return errMsg(fmt.Errorf(\"symbol name required\"))"
        },
        {
          "targetTerm": "errMsg",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 280,
            "column": 10
          },
          "context": "return errMsg(fmt.Errorf(\"command failed: %w\\n%s\", err, string(output)))"
        }
      ]
    ],
    [
      "searchResultMsg",
      [
        {
          "targetTerm": "searchResultMsg",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 273,
            "column": 10
          },
          "context": "return searchResultMsg(fmt.Sprintf(\"Claude Batch Mode for topic: %s\\n\\nThis would run multiple searches and create a comprehensive report.\\n(Full implementation pending)\", topic))"
        },
        {
          "targetTerm": "searchResultMsg",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 283,
            "column": 9
          },
          "context": "return searchResultMsg(string(output))"
        }
      ]
    ],
    [
      "n",
      [
        {
          "targetTerm": "n",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 273,
            "column": 142
          },
          "context": "return searchResultMsg(fmt.Sprintf(\"Claude Batch Mode for topic: %s\\n\\nThis would run multiple searches and create a comprehensive report.\\n(Full implementation pending)\", topic))"
        }
      ]
    ],
    [
      "RunGroupTUI",
      [
        {
          "targetTerm": "RunGroupTUI",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 295,
            "column": 5
          },
          "context": "func RunGroupTUI() error {"
        }
      ]
    ],
    [
      "RunRefsTUI",
      [
        {
          "targetTerm": "RunRefsTUI",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 301,
            "column": 5
          },
          "context": "func RunRefsTUI() error {"
        }
      ]
    ],
    [
      "RunChangesTUI",
      [
        {
          "targetTerm": "RunChangesTUI",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 307,
            "column": 5
          },
          "context": "func RunChangesTUI() error {"
        }
      ]
    ],
    [
      "GetSmartgrepPath",
      [
        {
          "targetTerm": "GetSmartgrepPath",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/config/config.go",
            "line": 9,
            "column": 5
          },
          "context": "func GetSmartgrepPath() string {"
        }
      ]
    ],
    [
      "os.Getenv",
      [
        {
          "targetTerm": "os.Getenv",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/config/config.go",
            "line": 11,
            "column": 12
          },
          "context": "if path := os.Getenv(\"SMARTGREP_CLI_PATH\"); path != \"\" {"
        },
        {
          "targetTerm": "os.Getenv",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/config/config.go",
            "line": 40,
            "column": 12
          },
          "context": "if path := os.Getenv(\"CURATOR_CLI_PATH\"); path != \"\" {"
        },
        {
          "targetTerm": "os.Getenv",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/config/config.go",
            "line": 67,
            "column": 12
          },
          "context": "if path := os.Getenv(\"MONITOR_CLI_PATH\"); path != \"\" {"
        }
      ]
    ],
    [
      "os.Executable",
      [
        {
          "targetTerm": "os.Executable",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/config/config.go",
            "line": 16,
            "column": 21
          },
          "context": "if execPath, err := os.Executable(); err == nil {"
        },
        {
          "targetTerm": "os.Executable",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/config/config.go",
            "line": 45,
            "column": 21
          },
          "context": "if execPath, err := os.Executable(); err == nil {"
        },
        {
          "targetTerm": "os.Executable",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/config/config.go",
            "line": 72,
            "column": 21
          },
          "context": "if execPath, err := os.Executable(); err == nil {"
        },
        {
          "targetTerm": "os.Executable",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/config/config.go",
            "line": 94,
            "column": 21
          },
          "context": "if execPath, err := os.Executable(); err == nil {"
        }
      ]
    ],
    [
      "filepath.Dir",
      [
        {
          "targetTerm": "filepath.Dir",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/config/config.go",
            "line": 18,
            "column": 9
          },
          "context": "dir := filepath.Dir(execPath)"
        },
        {
          "targetTerm": "filepath.Dir",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/config/config.go",
            "line": 46,
            "column": 9
          },
          "context": "dir := filepath.Dir(execPath)"
        },
        {
          "targetTerm": "filepath.Dir",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/config/config.go",
            "line": 73,
            "column": 9
          },
          "context": "dir := filepath.Dir(execPath)"
        },
        {
          "targetTerm": "filepath.Dir",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/config/config.go",
            "line": 95,
            "column": 9
          },
          "context": "dir := filepath.Dir(execPath)"
        }
      ]
    ],
    [
      "filepath.Join",
      [
        {
          "targetTerm": "filepath.Join",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/config/config.go",
            "line": 22,
            "column": 3
          },
          "context": "filepath.Join(dir, \"..\", \"..\", \"..\", \"..\", \"src\", \"tools\", \"smartgrep\", \"cli.ts\"),"
        },
        {
          "targetTerm": "filepath.Join",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/config/config.go",
            "line": 23,
            "column": 3
          },
          "context": "filepath.Join(dir, \"..\", \"..\", \"src\", \"tools\", \"smartgrep\", \"cli.ts\"),"
        },
        {
          "targetTerm": "filepath.Join",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/config/config.go",
            "line": 49,
            "column": 3
          },
          "context": "filepath.Join(dir, \"..\", \"..\", \"..\", \"..\", \"src\", \"tools\", \"curator-cli\", \"cli.ts\"),"
        },
        {
          "targetTerm": "filepath.Join",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/config/config.go",
            "line": 50,
            "column": 3
          },
          "context": "filepath.Join(dir, \"..\", \"..\", \"src\", \"tools\", \"curator-cli\", \"cli.ts\"),"
        },
        {
          "targetTerm": "filepath.Join",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/config/config.go",
            "line": 76,
            "column": 3
          },
          "context": "filepath.Join(dir, \"..\", \"..\", \"..\", \"..\", \"src\", \"tools\", \"monitor\", \"cli.ts\"),"
        },
        {
          "targetTerm": "filepath.Join",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/config/config.go",
            "line": 77,
            "column": 3
          },
          "context": "filepath.Join(dir, \"..\", \"..\", \"src\", \"tools\", \"monitor\", \"cli.ts\"),"
        },
        {
          "targetTerm": "filepath.Join",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/config/config.go",
            "line": 96,
            "column": 13
          },
          "context": "devPath := filepath.Join(dir, \"..\", \"..\", \"..\", \"..\", \"src\", \"tools\", \"smartgrep\", \"cli.ts\")"
        }
      ]
    ],
    [
      "Paths",
      [
        {
          "targetTerm": "Paths",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "internal/config/config.go",
            "line": 26,
            "column": 26
          },
          "context": "for _, path := range devPaths {"
        },
        {
          "targetTerm": "Paths",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "internal/config/config.go",
            "line": 53,
            "column": 26
          },
          "context": "for _, path := range devPaths {"
        },
        {
          "targetTerm": "Paths",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "internal/config/config.go",
            "line": 80,
            "column": 26
          },
          "context": "for _, path := range devPaths {"
        }
      ]
    ],
    [
      "os.Stat",
      [
        {
          "targetTerm": "os.Stat",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/config/config.go",
            "line": 27,
            "column": 16
          },
          "context": "if _, err := os.Stat(path); err == nil {"
        },
        {
          "targetTerm": "os.Stat",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/config/config.go",
            "line": 54,
            "column": 16
          },
          "context": "if _, err := os.Stat(path); err == nil {"
        },
        {
          "targetTerm": "os.Stat",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/config/config.go",
            "line": 81,
            "column": 16
          },
          "context": "if _, err := os.Stat(path); err == nil {"
        },
        {
          "targetTerm": "os.Stat",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/config/config.go",
            "line": 97,
            "column": 15
          },
          "context": "if _, err := os.Stat(devPath); err == nil {"
        }
      ]
    ],
    [
      "GetCuratorPath",
      [
        {
          "targetTerm": "GetCuratorPath",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/config/config.go",
            "line": 38,
            "column": 5
          },
          "context": "func GetCuratorPath() string {"
        }
      ]
    ],
    [
      "GetMonitorPath",
      [
        {
          "targetTerm": "GetMonitorPath",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/config/config.go",
            "line": 65,
            "column": 5
          },
          "context": "func GetMonitorPath() string {"
        }
      ]
    ],
    [
      "IsDevMode",
      [
        {
          "targetTerm": "IsDevMode",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/config/config.go",
            "line": 92,
            "column": 5
          },
          "context": "func IsDevMode() bool {"
        },
        {
          "targetTerm": "IsDevMode",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/config/config.go",
            "line": 106,
            "column": 4
          },
          "context": "if IsDevMode() {"
        }
      ]
    ],
    [
      "GetExecutor",
      [
        {
          "targetTerm": "GetExecutor",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/config/config.go",
            "line": 105,
            "column": 5
          },
          "context": "func GetExecutor() string {"
        }
      ]
    ],
    [
      "Underline",
      [
        {
          "targetTerm": "Underline",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 41,
            "column": 3
          },
          "context": "Underline(true)"
        }
      ]
    ],
    [
      "progress.New",
      [
        {
          "targetTerm": "progress.New",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 68,
            "column": 9
          },
          "context": "prog := progress.New(progress.WithDefaultGradient())"
        }
      ]
    ],
    [
      "progress.WithDefaultGradient",
      [
        {
          "targetTerm": "progress.WithDefaultGradient",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 68,
            "column": 22
          },
          "context": "prog := progress.New(progress.WithDefaultGradient())"
        }
      ]
    ],
    [
      "tickCmd",
      [
        {
          "targetTerm": "tickCmd",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 81,
            "column": 2
          },
          "context": "tickCmd(),"
        },
        {
          "targetTerm": "tickCmd",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 86,
            "column": 5
          },
          "context": "func tickCmd() tea.Cmd {"
        },
        {
          "targetTerm": "tickCmd",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 154,
            "column": 23
          },
          "context": "return m, tea.Batch(tickCmd(), m.startMonitoring())"
        },
        {
          "targetTerm": "tickCmd",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 156,
            "column": 12
          },
          "context": "return m, tickCmd()"
        }
      ]
    ],
    [
      "m.startMonitoring",
      [
        {
          "targetTerm": "m.startMonitoring",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 82,
            "column": 2
          },
          "context": "m.startMonitoring(),"
        },
        {
          "targetTerm": "m.startMonitoring",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 154,
            "column": 34
          },
          "context": "return m, tea.Batch(tickCmd(), m.startMonitoring())"
        }
      ]
    ],
    [
      "tea.Tick",
      [
        {
          "targetTerm": "tea.Tick",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 87,
            "column": 8
          },
          "context": "return tea.Tick(time.Second, func(t time.Time) tea.Msg {"
        }
      ]
    ],
    [
      "tickMsg",
      [
        {
          "targetTerm": "tickMsg",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 88,
            "column": 9
          },
          "context": "return tickMsg(t)"
        }
      ]
    ],
    [
      "startMonitoring",
      [
        {
          "targetTerm": "startMonitoring",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 92,
            "column": 15
          },
          "context": "func (m model) startMonitoring() tea.Cmd {"
        }
      ]
    ],
    [
      "Overview",
      [
        {
          "targetTerm": "Overview",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 98,
            "column": 12
          },
          "context": "if m.showOverview {"
        },
        {
          "targetTerm": "Overview",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "cmd/monitor/main.go",
            "line": 45,
            "column": 9
          },
          "context": "if withOverview {"
        }
      ]
    ],
    [
      "monitorOutputMsg",
      [
        {
          "targetTerm": "monitorOutputMsg",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 107,
            "column": 10
          },
          "context": "return monitorOutputMsg(string(output))"
        }
      ]
    ],
    [
      "strings.Split",
      [
        {
          "targetTerm": "strings.Split",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 118,
            "column": 12
          },
          "context": "lines := strings.Split(string(output), \"\\n\")"
        },
        {
          "targetTerm": "strings.Split",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 160,
            "column": 11
          },
          "context": "lines := strings.Split(string(msg), \"\\n\")"
        }
      ]
    ],
    [
      "time.Now",
      [
        {
          "targetTerm": "time.Now",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 121,
            "column": 18
          },
          "context": "lastUpdate:   time.Now(),"
        },
        {
          "targetTerm": "time.Now",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 164,
            "column": 5
          },
          "context": "time.Now().Format(\"15:04:05\"), line))"
        }
      ]
    ],
    [
      "msg.String",
      [
        {
          "targetTerm": "msg.String",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 142,
            "column": 9
          },
          "context": "switch msg.String() {"
        },
        {
          "targetTerm": "msg.String",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 284,
            "column": 9
          },
          "context": "switch msg.String() {"
        }
      ]
    ],
    [
      "Format",
      [
        {
          "targetTerm": "Format",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 164,
            "column": 16
          },
          "context": "time.Now().Format(\"15:04:05\"), line))"
        }
      ]
    ],
    [
      "m.renderEvents",
      [
        {
          "targetTerm": "m.renderEvents",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 171,
            "column": 24
          },
          "context": "m.viewport.SetContent(m.renderEvents())"
        }
      ]
    ],
    [
      "renderEvents",
      [
        {
          "targetTerm": "renderEvents",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 189,
            "column": 15
          },
          "context": "func (m model) renderEvents() string {"
        }
      ]
    ],
    [
      "strings.Contains",
      [
        {
          "targetTerm": "strings.Contains",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 194,
            "column": 5
          },
          "context": "if strings.Contains(event, \"added\") {"
        },
        {
          "targetTerm": "strings.Contains",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 196,
            "column": 12
          },
          "context": "} else if strings.Contains(event, \"modified\") {"
        },
        {
          "targetTerm": "strings.Contains",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 198,
            "column": 12
          },
          "context": "} else if strings.Contains(event, \"deleted\") {"
        }
      ]
    ],
    [
      "addedStyle.Render",
      [
        {
          "targetTerm": "addedStyle.Render",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 195,
            "column": 12
          },
          "context": "styled = addedStyle.Render(event)"
        },
        {
          "targetTerm": "addedStyle.Render",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 226,
            "column": 11
          },
          "context": "return addedStyle.Render(\"✓ Healthy\")"
        }
      ]
    ],
    [
      "modifiedStyle.Render",
      [
        {
          "targetTerm": "modifiedStyle.Render",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 197,
            "column": 12
          },
          "context": "styled = modifiedStyle.Render(event)"
        }
      ]
    ],
    [
      "deletedStyle.Render",
      [
        {
          "targetTerm": "deletedStyle.Render",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 199,
            "column": 12
          },
          "context": "styled = deletedStyle.Render(event)"
        },
        {
          "targetTerm": "deletedStyle.Render",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 228,
            "column": 10
          },
          "context": "return deletedStyle.Render(\"✗ Issues\")"
        }
      ]
    ],
    [
      "sb.WriteString",
      [
        {
          "targetTerm": "sb.WriteString",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 201,
            "column": 2
          },
          "context": "sb.WriteString(styled + \"\\n\")"
        }
      ]
    ],
    [
      "sb.String",
      [
        {
          "targetTerm": "sb.String",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 204,
            "column": 8
          },
          "context": "return sb.String()"
        }
      ]
    ],
    [
      "statsStyle.Render",
      [
        {
          "targetTerm": "statsStyle.Render",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 216,
            "column": 10
          },
          "context": "stats := statsStyle.Render(fmt.Sprintf("
        }
      ]
    ],
    [
      "headerStyle.Render",
      [
        {
          "targetTerm": "headerStyle.Render",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 221,
            "column": 2
          },
          "context": "headerStyle.Render(\"Statistics\"),"
        }
      ]
    ],
    [
      "lastUpdate.Format",
      [
        {
          "targetTerm": "lastUpdate.Format",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 223,
            "column": 10
          },
          "context": "m.stats.lastUpdate.Format(\"15:04:05\"),"
        }
      ]
    ],
    [
      "Render",
      [
        {
          "targetTerm": "Render",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 236,
            "column": 41
          },
          "context": "help := lipgloss.NewStyle().Faint(true).Render("
        },
        {
          "targetTerm": "Render",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 299,
            "column": 69
          },
          "context": "return m.viewport.View() + \"\\n\\n\" + lipgloss.NewStyle().Faint(true).Render(\"Press q to quit\")"
        }
      ]
    ],
    [
      "RunWatchTUI",
      [
        {
          "targetTerm": "RunWatchTUI",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 252,
            "column": 8
          },
          "context": "return RunWatchTUI(false)"
        },
        {
          "targetTerm": "RunWatchTUI",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 256,
            "column": 5
          },
          "context": "func RunWatchTUI(withOverview bool) error {"
        }
      ]
    ],
    [
      "vp.SetContent",
      [
        {
          "targetTerm": "vp.SetContent",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 313,
            "column": 1
          },
          "context": "vp.SetContent(string(output))"
        }
      ]
    ],
    [
      "Model",
      [
        {
          "targetTerm": "Model",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 315,
            "column": 29
          },
          "context": "p := tea.NewProgram(overviewModel{viewport: vp}, tea.WithAltScreen())"
        }
      ]
    ],
    [
      "RunStatusTUI",
      [
        {
          "targetTerm": "RunStatusTUI",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 321,
            "column": 5
          },
          "context": "func RunStatusTUI() error {"
        }
      ]
    ],
    [
      "Command",
      [
        {
          "targetTerm": "Command",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 18,
            "column": 21
          },
          "context": "var rootCmd = &cobra.Command{"
        },
        {
          "targetTerm": "Command",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 36,
            "column": 25
          },
          "context": "var overviewCmd = &cobra.Command{"
        },
        {
          "targetTerm": "Command",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 68,
            "column": 20
          },
          "context": "var askCmd = &cobra.Command{"
        },
        {
          "targetTerm": "Command",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 105,
            "column": 21
          },
          "context": "var chatCmd = &cobra.Command{"
        },
        {
          "targetTerm": "Command",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 120,
            "column": 24
          },
          "context": "var featureCmd = &cobra.Command{"
        },
        {
          "targetTerm": "Command",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 155,
            "column": 23
          },
          "context": "var changeCmd = &cobra.Command{"
        },
        {
          "targetTerm": "Command",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 190,
            "column": 23
          },
          "context": "var memoryCmd = &cobra.Command{"
        },
        {
          "targetTerm": "Command",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 219,
            "column": 22
          },
          "context": "var clearCmd = &cobra.Command{"
        },
        {
          "targetTerm": "Command",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "cmd/monitor/main.go",
            "line": 17,
            "column": 21
          },
          "context": "var rootCmd = &cobra.Command{"
        },
        {
          "targetTerm": "Command",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "cmd/monitor/main.go",
            "line": 35,
            "column": 22
          },
          "context": "var watchCmd = &cobra.Command{"
        },
        {
          "targetTerm": "Command",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "cmd/monitor/main.go",
            "line": 58,
            "column": 25
          },
          "context": "var overviewCmd = &cobra.Command{"
        },
        {
          "targetTerm": "Command",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "cmd/monitor/main.go",
            "line": 78,
            "column": 23
          },
          "context": "var statusCmd = &cobra.Command{"
        },
        {
          "targetTerm": "Command",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 22,
            "column": 21
          },
          "context": "var rootCmd = &cobra.Command{"
        },
        {
          "targetTerm": "Command",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 129,
            "column": 22
          },
          "context": "var groupCmd = &cobra.Command{"
        },
        {
          "targetTerm": "Command",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 143,
            "column": 21
          },
          "context": "var refsCmd = &cobra.Command{"
        },
        {
          "targetTerm": "Command",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 160,
            "column": 24
          },
          "context": "var changesCmd = &cobra.Command{"
        },
        {
          "targetTerm": "Command",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 184,
            "column": 30
          },
          "context": "for _, cmd := range []*cobra.Command{groupCmd, refsCmd, changesCmd} {"
        }
      ]
    ],
    [
      "Mode",
      [
        {
          "targetTerm": "Mode",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 26,
            "column": 8
          },
          "context": "if tuiMode {"
        },
        {
          "targetTerm": "Mode",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 46,
            "column": 8
          },
          "context": "if tuiMode {"
        },
        {
          "targetTerm": "Mode",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 85,
            "column": 8
          },
          "context": "if tuiMode {"
        },
        {
          "targetTerm": "Mode",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 135,
            "column": 8
          },
          "context": "if tuiMode {"
        },
        {
          "targetTerm": "Mode",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 170,
            "column": 8
          },
          "context": "if tuiMode {"
        },
        {
          "targetTerm": "Mode",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 200,
            "column": 8
          },
          "context": "if tuiMode {"
        },
        {
          "targetTerm": "Mode",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "cmd/monitor/main.go",
            "line": 25,
            "column": 8
          },
          "context": "if tuiMode {"
        },
        {
          "targetTerm": "Mode",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "cmd/monitor/main.go",
            "line": 39,
            "column": 8
          },
          "context": "if tuiMode {"
        },
        {
          "targetTerm": "Mode",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "cmd/monitor/main.go",
            "line": 62,
            "column": 8
          },
          "context": "if tuiMode {"
        },
        {
          "targetTerm": "Mode",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "cmd/monitor/main.go",
            "line": 82,
            "column": 8
          },
          "context": "if tuiMode {"
        },
        {
          "targetTerm": "Mode",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 31,
            "column": 8
          },
          "context": "if tuiMode {"
        },
        {
          "targetTerm": "Mode",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 121,
            "column": 11
          },
          "context": "if compactMode {"
        },
        {
          "targetTerm": "Mode",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 134,
            "column": 8
          },
          "context": "if tuiMode {"
        },
        {
          "targetTerm": "Mode",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 147,
            "column": 8
          },
          "context": "if tuiMode {"
        },
        {
          "targetTerm": "Mode",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 164,
            "column": 8
          },
          "context": "if tuiMode {"
        },
        {
          "targetTerm": "Mode",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 170,
            "column": 12
          },
          "context": "if compactMode {"
        }
      ]
    ],
    [
      "curator.RunTUI",
      [
        {
          "targetTerm": "curator.RunTUI",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 28,
            "column": 10
          },
          "context": "return curator.RunTUI(projectPath)"
        }
      ]
    ],
    [
      "cmd.Help",
      [
        {
          "targetTerm": "cmd.Help",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 32,
            "column": 9
          },
          "context": "return cmd.Help()"
        },
        {
          "targetTerm": "cmd.Help",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/monitor/main.go",
            "line": 31,
            "column": 9
          },
          "context": "return cmd.Help()"
        }
      ]
    ],
    [
      "cobra.MaximumNArgs",
      [
        {
          "targetTerm": "cobra.MaximumNArgs",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 39,
            "column": 8
          },
          "context": "Args:  cobra.MaximumNArgs(1),"
        },
        {
          "targetTerm": "cobra.MaximumNArgs",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 108,
            "column": 8
          },
          "context": "Args:  cobra.MaximumNArgs(1),"
        },
        {
          "targetTerm": "cobra.MaximumNArgs",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 193,
            "column": 8
          },
          "context": "Args:  cobra.MaximumNArgs(1),"
        },
        {
          "targetTerm": "cobra.MaximumNArgs",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 222,
            "column": 8
          },
          "context": "Args:  cobra.MaximumNArgs(1),"
        }
      ]
    ],
    [
      "curator.RunOverviewTUI",
      [
        {
          "targetTerm": "curator.RunOverviewTUI",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 47,
            "column": 10
          },
          "context": "return curator.RunOverviewTUI(path, newSession)"
        }
      ]
    ],
    [
      "Session",
      [
        {
          "targetTerm": "Session",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 55,
            "column": 8
          },
          "context": "if newSession {"
        }
      ]
    ],
    [
      "execCmd.Run",
      [
        {
          "targetTerm": "execCmd.Run",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 64,
            "column": 9
          },
          "context": "return execCmd.Run()"
        },
        {
          "targetTerm": "execCmd.Run",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 101,
            "column": 9
          },
          "context": "return execCmd.Run()"
        },
        {
          "targetTerm": "execCmd.Run",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 151,
            "column": 9
          },
          "context": "return execCmd.Run()"
        },
        {
          "targetTerm": "execCmd.Run",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 186,
            "column": 9
          },
          "context": "return execCmd.Run()"
        },
        {
          "targetTerm": "execCmd.Run",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 215,
            "column": 9
          },
          "context": "return execCmd.Run()"
        },
        {
          "targetTerm": "execCmd.Run",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 240,
            "column": 9
          },
          "context": "return execCmd.Run()"
        },
        {
          "targetTerm": "execCmd.Run",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/monitor/main.go",
            "line": 54,
            "column": 9
          },
          "context": "return execCmd.Run()"
        },
        {
          "targetTerm": "execCmd.Run",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/monitor/main.go",
            "line": 74,
            "column": 9
          },
          "context": "return execCmd.Run()"
        },
        {
          "targetTerm": "execCmd.Run",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/monitor/main.go",
            "line": 94,
            "column": 9
          },
          "context": "return execCmd.Run()"
        }
      ]
    ],
    [
      "cobra.MinimumNArgs",
      [
        {
          "targetTerm": "cobra.MinimumNArgs",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 71,
            "column": 8
          },
          "context": "Args:  cobra.MinimumNArgs(1),"
        },
        {
          "targetTerm": "cobra.MinimumNArgs",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 123,
            "column": 8
          },
          "context": "Args:  cobra.MinimumNArgs(1),"
        },
        {
          "targetTerm": "cobra.MinimumNArgs",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 158,
            "column": 8
          },
          "context": "Args:  cobra.MinimumNArgs(1),"
        }
      ]
    ],
    [
      "curator.RunAskTUI",
      [
        {
          "targetTerm": "curator.RunAskTUI",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 86,
            "column": 10
          },
          "context": "return curator.RunAskTUI(path, question)"
        }
      ]
    ],
    [
      "curator.RunChatTUI",
      [
        {
          "targetTerm": "curator.RunChatTUI",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 116,
            "column": 9
          },
          "context": "return curator.RunChatTUI(path)"
        }
      ]
    ],
    [
      "curator.RunFeatureTUI",
      [
        {
          "targetTerm": "curator.RunFeatureTUI",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 136,
            "column": 10
          },
          "context": "return curator.RunFeatureTUI(path, description)"
        }
      ]
    ],
    [
      "curator.RunChangeTUI",
      [
        {
          "targetTerm": "curator.RunChangeTUI",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 171,
            "column": 10
          },
          "context": "return curator.RunChangeTUI(path, description)"
        }
      ]
    ],
    [
      "curator.RunMemoryTUI",
      [
        {
          "targetTerm": "curator.RunMemoryTUI",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 201,
            "column": 10
          },
          "context": "return curator.RunMemoryTUI(path)"
        }
      ]
    ],
    [
      "init",
      [
        {
          "targetTerm": "init",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 244,
            "column": 5
          },
          "context": "func init() {"
        },
        {
          "targetTerm": "init",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/monitor/main.go",
            "line": 98,
            "column": 5
          },
          "context": "func init() {"
        },
        {
          "targetTerm": "init",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 41,
            "column": 5
          },
          "context": "func init() {"
        }
      ]
    ],
    [
      "rootCmd.PersistentFlags",
      [
        {
          "targetTerm": "rootCmd.PersistentFlags",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 246,
            "column": 1
          },
          "context": "rootCmd.PersistentFlags().BoolVar(&tuiMode, \"tui\", false, \"Launch interactive TUI mode\")"
        },
        {
          "targetTerm": "rootCmd.PersistentFlags",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 247,
            "column": 1
          },
          "context": "rootCmd.PersistentFlags().StringVarP(&projectPath, \"project\", \"p\", \"\", \"Project path (defaults to current directory)\")"
        },
        {
          "targetTerm": "rootCmd.PersistentFlags",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/monitor/main.go",
            "line": 100,
            "column": 1
          },
          "context": "rootCmd.PersistentFlags().BoolVar(&tuiMode, \"tui\", false, \"Launch interactive TUI mode\")"
        }
      ]
    ],
    [
      "BoolVar",
      [
        {
          "targetTerm": "BoolVar",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 246,
            "column": 27
          },
          "context": "rootCmd.PersistentFlags().BoolVar(&tuiMode, \"tui\", false, \"Launch interactive TUI mode\")"
        },
        {
          "targetTerm": "BoolVar",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 250,
            "column": 21
          },
          "context": "overviewCmd.Flags().BoolVar(&newSession, \"new-session\", false, \"Start fresh analysis session\")"
        },
        {
          "targetTerm": "BoolVar",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/monitor/main.go",
            "line": 100,
            "column": 27
          },
          "context": "rootCmd.PersistentFlags().BoolVar(&tuiMode, \"tui\", false, \"Launch interactive TUI mode\")"
        },
        {
          "targetTerm": "BoolVar",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/monitor/main.go",
            "line": 103,
            "column": 18
          },
          "context": "watchCmd.Flags().BoolVar(&withOverview, \"overview\", false, \"Include codebase overview in dashboard\")"
        },
        {
          "targetTerm": "BoolVar",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 42,
            "column": 17
          },
          "context": "rootCmd.Flags().BoolVar(&tuiMode, \"tui\", false, \"Launch interactive TUI mode\")"
        },
        {
          "targetTerm": "BoolVar",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 46,
            "column": 17
          },
          "context": "rootCmd.Flags().BoolVar(&compactMode, \"compact\", false, \"Compact output format\")"
        },
        {
          "targetTerm": "BoolVar",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 47,
            "column": 17
          },
          "context": "rootCmd.Flags().BoolVar(&rebuildIndex, \"index\", false, \"Rebuild the semantic index\")"
        },
        {
          "targetTerm": "BoolVar",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 185,
            "column": 14
          },
          "context": "cmd.Flags().BoolVar(&tuiMode, \"tui\", false, \"Launch interactive TUI mode\")"
        }
      ]
    ],
    [
      "StringVarP",
      [
        {
          "targetTerm": "StringVarP",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 247,
            "column": 27
          },
          "context": "rootCmd.PersistentFlags().StringVarP(&projectPath, \"project\", \"p\", \"\", \"Project path (defaults to current directory)\")"
        }
      ]
    ],
    [
      "path",
      [
        {
          "targetTerm": "path",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 247,
            "column": 81
          },
          "context": "rootCmd.PersistentFlags().StringVarP(&projectPath, \"project\", \"p\", \"\", \"Project path (defaults to current directory)\")"
        }
      ]
    ],
    [
      "overviewCmd.Flags",
      [
        {
          "targetTerm": "overviewCmd.Flags",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 250,
            "column": 1
          },
          "context": "overviewCmd.Flags().BoolVar(&newSession, \"new-session\", false, \"Start fresh analysis session\")"
        }
      ]
    ],
    [
      "rootCmd.AddCommand",
      [
        {
          "targetTerm": "rootCmd.AddCommand",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 253,
            "column": 1
          },
          "context": "rootCmd.AddCommand(overviewCmd)"
        },
        {
          "targetTerm": "rootCmd.AddCommand",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 254,
            "column": 1
          },
          "context": "rootCmd.AddCommand(askCmd)"
        },
        {
          "targetTerm": "rootCmd.AddCommand",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 255,
            "column": 1
          },
          "context": "rootCmd.AddCommand(chatCmd)"
        },
        {
          "targetTerm": "rootCmd.AddCommand",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 256,
            "column": 1
          },
          "context": "rootCmd.AddCommand(featureCmd)"
        },
        {
          "targetTerm": "rootCmd.AddCommand",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 257,
            "column": 1
          },
          "context": "rootCmd.AddCommand(changeCmd)"
        },
        {
          "targetTerm": "rootCmd.AddCommand",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 258,
            "column": 1
          },
          "context": "rootCmd.AddCommand(memoryCmd)"
        },
        {
          "targetTerm": "rootCmd.AddCommand",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 259,
            "column": 1
          },
          "context": "rootCmd.AddCommand(clearCmd)"
        },
        {
          "targetTerm": "rootCmd.AddCommand",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/monitor/main.go",
            "line": 106,
            "column": 1
          },
          "context": "rootCmd.AddCommand(watchCmd)"
        },
        {
          "targetTerm": "rootCmd.AddCommand",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/monitor/main.go",
            "line": 107,
            "column": 1
          },
          "context": "rootCmd.AddCommand(overviewCmd)"
        },
        {
          "targetTerm": "rootCmd.AddCommand",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/monitor/main.go",
            "line": 108,
            "column": 1
          },
          "context": "rootCmd.AddCommand(statusCmd)"
        },
        {
          "targetTerm": "rootCmd.AddCommand",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 179,
            "column": 1
          },
          "context": "rootCmd.AddCommand(groupCmd)"
        },
        {
          "targetTerm": "rootCmd.AddCommand",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 180,
            "column": 1
          },
          "context": "rootCmd.AddCommand(refsCmd)"
        },
        {
          "targetTerm": "rootCmd.AddCommand",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 181,
            "column": 1
          },
          "context": "rootCmd.AddCommand(changesCmd)"
        }
      ]
    ],
    [
      "main",
      [
        {
          "targetTerm": "main",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 262,
            "column": 5
          },
          "context": "func main() {"
        },
        {
          "targetTerm": "main",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/monitor/main.go",
            "line": 111,
            "column": 5
          },
          "context": "func main() {"
        },
        {
          "targetTerm": "main",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 177,
            "column": 5
          },
          "context": "func main() {"
        }
      ]
    ],
    [
      "rootCmd.Execute",
      [
        {
          "targetTerm": "rootCmd.Execute",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 263,
            "column": 11
          },
          "context": "if err := rootCmd.Execute(); err != nil {"
        },
        {
          "targetTerm": "rootCmd.Execute",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/monitor/main.go",
            "line": 112,
            "column": 11
          },
          "context": "if err := rootCmd.Execute(); err != nil {"
        },
        {
          "targetTerm": "rootCmd.Execute",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 188,
            "column": 11
          },
          "context": "if err := rootCmd.Execute(); err != nil {"
        }
      ]
    ],
    [
      "fmt.Fprintln",
      [
        {
          "targetTerm": "fmt.Fprintln",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 264,
            "column": 2
          },
          "context": "fmt.Fprintln(os.Stderr, err)"
        },
        {
          "targetTerm": "fmt.Fprintln",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/monitor/main.go",
            "line": 113,
            "column": 2
          },
          "context": "fmt.Fprintln(os.Stderr, err)"
        },
        {
          "targetTerm": "fmt.Fprintln",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 189,
            "column": 2
          },
          "context": "fmt.Fprintln(os.Stderr, err)"
        }
      ]
    ],
    [
      "os.Exit",
      [
        {
          "targetTerm": "os.Exit",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 265,
            "column": 2
          },
          "context": "os.Exit(1)"
        },
        {
          "targetTerm": "os.Exit",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/monitor/main.go",
            "line": 114,
            "column": 2
          },
          "context": "os.Exit(1)"
        },
        {
          "targetTerm": "os.Exit",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 190,
            "column": 2
          },
          "context": "os.Exit(1)"
        }
      ]
    ],
    [
      "monitor.RunTUI",
      [
        {
          "targetTerm": "monitor.RunTUI",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/monitor/main.go",
            "line": 27,
            "column": 10
          },
          "context": "return monitor.RunTUI()"
        }
      ]
    ],
    [
      "monitor.RunWatchTUI",
      [
        {
          "targetTerm": "monitor.RunWatchTUI",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/monitor/main.go",
            "line": 40,
            "column": 10
          },
          "context": "return monitor.RunWatchTUI(withOverview)"
        }
      ]
    ],
    [
      "monitor.RunOverviewTUI",
      [
        {
          "targetTerm": "monitor.RunOverviewTUI",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/monitor/main.go",
            "line": 63,
            "column": 10
          },
          "context": "return monitor.RunOverviewTUI()"
        }
      ]
    ],
    [
      "monitor.RunStatusTUI",
      [
        {
          "targetTerm": "monitor.RunStatusTUI",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/monitor/main.go",
            "line": 83,
            "column": 10
          },
          "context": "return monitor.RunStatusTUI()"
        }
      ]
    ],
    [
      "watchCmd.Flags",
      [
        {
          "targetTerm": "watchCmd.Flags",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/monitor/main.go",
            "line": 103,
            "column": 1
          },
          "context": "watchCmd.Flags().BoolVar(&withOverview, \"overview\", false, \"Include codebase overview in dashboard\")"
        }
      ]
    ],
    [
      "smartgrep.RunTUI",
      [
        {
          "targetTerm": "smartgrep.RunTUI",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 33,
            "column": 10
          },
          "context": "return smartgrep.RunTUI()"
        }
      ]
    ],
    [
      "runCLIMode",
      [
        {
          "targetTerm": "runCLIMode",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 37,
            "column": 9
          },
          "context": "return runCLIMode(args)"
        },
        {
          "targetTerm": "runCLIMode",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 106,
            "column": 5
          },
          "context": "func runCLIMode(args []string) error {"
        }
      ]
    ],
    [
      "rootCmd.Flags",
      [
        {
          "targetTerm": "rootCmd.Flags",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 42,
            "column": 1
          },
          "context": "rootCmd.Flags().BoolVar(&tuiMode, \"tui\", false, \"Launch interactive TUI mode\")"
        },
        {
          "targetTerm": "rootCmd.Flags",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 43,
            "column": 1
          },
          "context": "rootCmd.Flags().StringVar(&typeFilter, \"type\", \"\", \"Filter by type (function,class,variable,etc)\")"
        },
        {
          "targetTerm": "rootCmd.Flags",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 44,
            "column": 1
          },
          "context": "rootCmd.Flags().IntVar(&maxResults, \"max\", 50, \"Maximum results to show\")"
        },
        {
          "targetTerm": "rootCmd.Flags",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 45,
            "column": 1
          },
          "context": "rootCmd.Flags().StringVar(&sortBy, \"sort\", \"relevance\", \"Sort by: relevance, usage, name, file\")"
        },
        {
          "targetTerm": "rootCmd.Flags",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 46,
            "column": 1
          },
          "context": "rootCmd.Flags().BoolVar(&compactMode, \"compact\", false, \"Compact output format\")"
        },
        {
          "targetTerm": "rootCmd.Flags",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 47,
            "column": 1
          },
          "context": "rootCmd.Flags().BoolVar(&rebuildIndex, \"index\", false, \"Rebuild the semantic index\")"
        }
      ]
    ],
    [
      "StringVar",
      [
        {
          "targetTerm": "StringVar",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 43,
            "column": 17
          },
          "context": "rootCmd.Flags().StringVar(&typeFilter, \"type\", \"\", \"Filter by type (function,class,variable,etc)\")"
        },
        {
          "targetTerm": "StringVar",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 45,
            "column": 17
          },
          "context": "rootCmd.Flags().StringVar(&sortBy, \"sort\", \"relevance\", \"Sort by: relevance, usage, name, file\")"
        }
      ]
    ],
    [
      "IntVar",
      [
        {
          "targetTerm": "IntVar",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 44,
            "column": 17
          },
          "context": "rootCmd.Flags().IntVar(&maxResults, \"max\", 50, \"Maximum results to show\")"
        }
      ]
    ],
    [
      "executeCommand",
      [
        {
          "targetTerm": "executeCommand",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 51,
            "column": 5
          },
          "context": "func executeCommand(subcommand string, args []string, flags map[string]interface{}) error {"
        },
        {
          "targetTerm": "executeCommand",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 125,
            "column": 8
          },
          "context": "return executeCommand(\"\", args, flags)"
        },
        {
          "targetTerm": "executeCommand",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 139,
            "column": 9
          },
          "context": "return executeCommand(\"group\", args, nil)"
        },
        {
          "targetTerm": "executeCommand",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 156,
            "column": 9
          },
          "context": "return executeCommand(\"refs\", args, nil)"
        },
        {
          "targetTerm": "executeCommand",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 173,
            "column": 9
          },
          "context": "return executeCommand(\"changes\", nil, flags)"
        }
      ]
    ],
    [
      "config.GetExecutor",
      [
        {
          "targetTerm": "config.GetExecutor",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 52,
            "column": 13
          },
          "context": "executor := config.GetExecutor()"
        }
      ]
    ],
    [
      "config.GetSmartgrepPath",
      [
        {
          "targetTerm": "config.GetSmartgrepPath",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 53,
            "column": 12
          },
          "context": "cliPath := config.GetSmartgrepPath()"
        }
      ]
    ],
    [
      "Val",
      [
        {
          "targetTerm": "Val",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 68,
            "column": 45
          },
          "context": "if boolVal, ok := value.(bool); ok && boolVal {"
        },
        {
          "targetTerm": "Val",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 87,
            "column": 45
          },
          "context": "if boolVal, ok := value.(bool); ok && boolVal {"
        }
      ]
    ],
    [
      "cmd.Run",
      [
        {
          "targetTerm": "cmd.Run",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 103,
            "column": 8
          },
          "context": "return cmd.Run()"
        }
      ]
    ],
    [
      "Index",
      [
        {
          "targetTerm": "Index",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 109,
            "column": 11
          },
          "context": "if rebuildIndex {"
        }
      ]
    ],
    [
      "smartgrep.RunGroupTUI",
      [
        {
          "targetTerm": "smartgrep.RunGroupTUI",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 135,
            "column": 10
          },
          "context": "return smartgrep.RunGroupTUI()"
        }
      ]
    ],
    [
      "smartgrep.RunRefsTUI",
      [
        {
          "targetTerm": "smartgrep.RunRefsTUI",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 148,
            "column": 10
          },
          "context": "return smartgrep.RunRefsTUI()"
        }
      ]
    ],
    [
      "smartgrep.RunChangesTUI",
      [
        {
          "targetTerm": "smartgrep.RunChangesTUI",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 165,
            "column": 10
          },
          "context": "return smartgrep.RunChangesTUI()"
        }
      ]
    ],
    [
      "cmd.Flags",
      [
        {
          "targetTerm": "cmd.Flags",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 185,
            "column": 2
          },
          "context": "cmd.Flags().BoolVar(&tuiMode, \"tui\", false, \"Launch interactive TUI mode\")"
        }
      ]
    ]
  ],
  "fileReferences": [
    [
      "Makefile",
      [
        {
          "targetTerm": "BUILD_DIR",
          "referenceType": "call",
          "fromLocation": {
            "file": "Makefile",
            "line": 4,
            "column": 0
          },
          "context": "BUILD_DIR := build"
        },
        {
          "targetTerm": "BIN_DIR",
          "referenceType": "call",
          "fromLocation": {
            "file": "Makefile",
            "line": 5,
            "column": 0
          },
          "context": "BIN_DIR := $(BUILD_DIR)/bin"
        },
        {
          "targetTerm": "BUILD_DIR",
          "referenceType": "call",
          "fromLocation": {
            "file": "Makefile",
            "line": 5,
            "column": 11
          },
          "context": "BIN_DIR := $(BUILD_DIR)/bin"
        },
        {
          "targetTerm": "SMARTGREP_BIN",
          "referenceType": "call",
          "fromLocation": {
            "file": "Makefile",
            "line": 8,
            "column": 0
          },
          "context": "SMARTGREP_BIN := $(BIN_DIR)/smartgrep"
        },
        {
          "targetTerm": "BIN_DIR",
          "referenceType": "call",
          "fromLocation": {
            "file": "Makefile",
            "line": 8,
            "column": 17
          },
          "context": "SMARTGREP_BIN := $(BIN_DIR)/smartgrep"
        },
        {
          "targetTerm": "CURATOR_BIN",
          "referenceType": "call",
          "fromLocation": {
            "file": "Makefile",
            "line": 9,
            "column": 0
          },
          "context": "CURATOR_BIN := $(BIN_DIR)/curator"
        },
        {
          "targetTerm": "BIN_DIR",
          "referenceType": "call",
          "fromLocation": {
            "file": "Makefile",
            "line": 9,
            "column": 15
          },
          "context": "CURATOR_BIN := $(BIN_DIR)/curator"
        },
        {
          "targetTerm": "MONITOR_BIN",
          "referenceType": "call",
          "fromLocation": {
            "file": "Makefile",
            "line": 10,
            "column": 0
          },
          "context": "MONITOR_BIN := $(BIN_DIR)/monitor"
        },
        {
          "targetTerm": "BIN_DIR",
          "referenceType": "call",
          "fromLocation": {
            "file": "Makefile",
            "line": 10,
            "column": 15
          },
          "context": "MONITOR_BIN := $(BIN_DIR)/monitor"
        },
        {
          "targetTerm": "BIN_DIR",
          "referenceType": "call",
          "fromLocation": {
            "file": "Makefile",
            "line": 16,
            "column": 0
          },
          "context": "$(BIN_DIR):"
        },
        {
          "targetTerm": "BIN_DIR",
          "referenceType": "call",
          "fromLocation": {
            "file": "Makefile",
            "line": 17,
            "column": 10
          },
          "context": "mkdir -p $(BIN_DIR)"
        },
        {
          "targetTerm": "BIN_DIR",
          "referenceType": "call",
          "fromLocation": {
            "file": "Makefile",
            "line": 20,
            "column": 7
          },
          "context": "build: $(BIN_DIR) smartgrep curator monitor"
        },
        {
          "targetTerm": "BIN_DIR",
          "referenceType": "call",
          "fromLocation": {
            "file": "Makefile",
            "line": 23,
            "column": 11
          },
          "context": "smartgrep: $(BIN_DIR)"
        },
        {
          "targetTerm": "SMARTGREP_BIN",
          "referenceType": "call",
          "fromLocation": {
            "file": "Makefile",
            "line": 24,
            "column": 13
          },
          "context": "go build -o $(SMARTGREP_BIN) ./cmd/smartgrep"
        },
        {
          "targetTerm": "BIN_DIR",
          "referenceType": "call",
          "fromLocation": {
            "file": "Makefile",
            "line": 26,
            "column": 9
          },
          "context": "curator: $(BIN_DIR)"
        },
        {
          "targetTerm": "CURATOR_BIN",
          "referenceType": "call",
          "fromLocation": {
            "file": "Makefile",
            "line": 27,
            "column": 13
          },
          "context": "go build -o $(CURATOR_BIN) ./cmd/curator"
        },
        {
          "targetTerm": "BIN_DIR",
          "referenceType": "call",
          "fromLocation": {
            "file": "Makefile",
            "line": 29,
            "column": 9
          },
          "context": "monitor: $(BIN_DIR)"
        },
        {
          "targetTerm": "MONITOR_BIN",
          "referenceType": "call",
          "fromLocation": {
            "file": "Makefile",
            "line": 30,
            "column": 13
          },
          "context": "go build -o $(MONITOR_BIN) ./cmd/monitor"
        },
        {
          "targetTerm": "SMARTGREP_BIN",
          "referenceType": "call",
          "fromLocation": {
            "file": "Makefile",
            "line": 35,
            "column": 5
          },
          "context": "@cp $(SMARTGREP_BIN) /usr/local/bin/smartgrep-tui"
        },
        {
          "targetTerm": "CURATOR_BIN",
          "referenceType": "call",
          "fromLocation": {
            "file": "Makefile",
            "line": 36,
            "column": 5
          },
          "context": "@cp $(CURATOR_BIN) /usr/local/bin/curator-tui"
        },
        {
          "targetTerm": "MONITOR_BIN",
          "referenceType": "call",
          "fromLocation": {
            "file": "Makefile",
            "line": 37,
            "column": 5
          },
          "context": "@cp $(MONITOR_BIN) /usr/local/bin/monitor-tui"
        },
        {
          "targetTerm": "BUILD_DIR",
          "referenceType": "call",
          "fromLocation": {
            "file": "Makefile",
            "line": 51,
            "column": 8
          },
          "context": "rm -rf $(BUILD_DIR)"
        },
        {
          "targetTerm": "SMARTGREP_BIN",
          "referenceType": "call",
          "fromLocation": {
            "file": "Makefile",
            "line": 55,
            "column": 1
          },
          "context": "$(SMARTGREP_BIN) --tui"
        },
        {
          "targetTerm": "CURATOR_BIN",
          "referenceType": "call",
          "fromLocation": {
            "file": "Makefile",
            "line": 58,
            "column": 1
          },
          "context": "$(CURATOR_BIN) --tui"
        },
        {
          "targetTerm": "MONITOR_BIN",
          "referenceType": "call",
          "fromLocation": {
            "file": "Makefile",
            "line": 61,
            "column": 1
          },
          "context": "$(MONITOR_BIN) --tui"
        }
      ]
    ],
    [
      "internal/curator/tui.go",
      [
        {
          "targetTerm": "lipgloss.NewStyle",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 19,
            "column": 14
          },
          "context": "titleStyle = lipgloss.NewStyle()."
        },
        {
          "targetTerm": "Bold",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 20,
            "column": 3
          },
          "context": "Bold(true)."
        },
        {
          "targetTerm": "Foreground",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 21,
            "column": 3
          },
          "context": "Foreground(lipgloss.Color(\"212\"))."
        },
        {
          "targetTerm": "lipgloss.Color",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 21,
            "column": 14
          },
          "context": "Foreground(lipgloss.Color(\"212\"))."
        },
        {
          "targetTerm": "BorderStyle",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 22,
            "column": 3
          },
          "context": "BorderStyle(lipgloss.DoubleBorder())."
        },
        {
          "targetTerm": "lipgloss.DoubleBorder",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 22,
            "column": 15
          },
          "context": "BorderStyle(lipgloss.DoubleBorder())."
        },
        {
          "targetTerm": "BorderForeground",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 23,
            "column": 3
          },
          "context": "BorderForeground(lipgloss.Color(\"212\"))."
        },
        {
          "targetTerm": "lipgloss.Color",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 23,
            "column": 20
          },
          "context": "BorderForeground(lipgloss.Color(\"212\"))."
        },
        {
          "targetTerm": "Padding",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 24,
            "column": 3
          },
          "context": "Padding(1, 3)."
        },
        {
          "targetTerm": "MarginBottom",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 25,
            "column": 3
          },
          "context": "MarginBottom(1)"
        },
        {
          "targetTerm": "lipgloss.NewStyle",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 27,
            "column": 13
          },
          "context": "chatStyle = lipgloss.NewStyle()."
        },
        {
          "targetTerm": "BorderStyle",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 28,
            "column": 3
          },
          "context": "BorderStyle(lipgloss.RoundedBorder())."
        },
        {
          "targetTerm": "lipgloss.RoundedBorder",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 28,
            "column": 15
          },
          "context": "BorderStyle(lipgloss.RoundedBorder())."
        },
        {
          "targetTerm": "BorderForeground",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 29,
            "column": 3
          },
          "context": "BorderForeground(lipgloss.Color(\"33\"))."
        },
        {
          "targetTerm": "lipgloss.Color",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 29,
            "column": 20
          },
          "context": "BorderForeground(lipgloss.Color(\"33\"))."
        },
        {
          "targetTerm": "Padding",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 30,
            "column": 3
          },
          "context": "Padding(1, 2)"
        },
        {
          "targetTerm": "lipgloss.NewStyle",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 32,
            "column": 13
          },
          "context": "userStyle = lipgloss.NewStyle()."
        },
        {
          "targetTerm": "Bold",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 33,
            "column": 3
          },
          "context": "Bold(true)."
        },
        {
          "targetTerm": "Foreground",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 34,
            "column": 3
          },
          "context": "Foreground(lipgloss.Color(\"120\"))"
        },
        {
          "targetTerm": "lipgloss.Color",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 34,
            "column": 14
          },
          "context": "Foreground(lipgloss.Color(\"120\"))"
        },
        {
          "targetTerm": "lipgloss.NewStyle",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 36,
            "column": 16
          },
          "context": "curatorStyle = lipgloss.NewStyle()."
        },
        {
          "targetTerm": "Bold",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 37,
            "column": 3
          },
          "context": "Bold(true)."
        },
        {
          "targetTerm": "Foreground",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 38,
            "column": 3
          },
          "context": "Foreground(lipgloss.Color(\"212\"))"
        },
        {
          "targetTerm": "lipgloss.Color",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 38,
            "column": 14
          },
          "context": "Foreground(lipgloss.Color(\"212\"))"
        },
        {
          "targetTerm": "lipgloss.NewStyle",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 40,
            "column": 13
          },
          "context": "helpStyle = lipgloss.NewStyle()."
        },
        {
          "targetTerm": "Faint",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 41,
            "column": 3
          },
          "context": "Faint(true)."
        },
        {
          "targetTerm": "MarginTop",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 42,
            "column": 3
          },
          "context": "MarginTop(1)"
        },
        {
          "targetTerm": "initialModel",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 72,
            "column": 5
          },
          "context": "func initialModel(mode, projectPath string) model {"
        },
        {
          "targetTerm": "glamour.NewTermRenderer",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 74,
            "column": 16
          },
          "context": "renderer, _ := glamour.NewTermRenderer("
        },
        {
          "targetTerm": "glamour.WithAutoStyle",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 75,
            "column": 2
          },
          "context": "glamour.WithAutoStyle(),"
        },
        {
          "targetTerm": "glamour.WithWordWrap",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 76,
            "column": 2
          },
          "context": "glamour.WithWordWrap(80),"
        },
        {
          "targetTerm": "viewport.New",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 80,
            "column": 7
          },
          "context": "vp := viewport.New(80, 20)"
        },
        {
          "targetTerm": "textarea.New",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 81,
            "column": 7
          },
          "context": "ta := textarea.New()"
        },
        {
          "targetTerm": "ta.SetWidth",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 84,
            "column": 1
          },
          "context": "ta.SetWidth(80)"
        },
        {
          "targetTerm": "ta.SetHeight",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 85,
            "column": 1
          },
          "context": "ta.SetHeight(4)"
        },
        {
          "targetTerm": "lipgloss.NewStyle",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 86,
            "column": 30
          },
          "context": "ta.FocusedStyle.CursorLine = lipgloss.NewStyle()"
        },
        {
          "targetTerm": "spinner.New",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 89,
            "column": 7
          },
          "context": "sp := spinner.New()"
        },
        {
          "targetTerm": "lipgloss.NewStyle",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 91,
            "column": 12
          },
          "context": "sp.Style = lipgloss.NewStyle().Foreground(lipgloss.Color(\"212\"))"
        },
        {
          "targetTerm": "Foreground",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 91,
            "column": 32
          },
          "context": "sp.Style = lipgloss.NewStyle().Foreground(lipgloss.Color(\"212\"))"
        },
        {
          "targetTerm": "lipgloss.Color",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 91,
            "column": 43
          },
          "context": "sp.Style = lipgloss.NewStyle().Foreground(lipgloss.Color(\"212\"))"
        },
        {
          "targetTerm": "Init",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 104,
            "column": 15
          },
          "context": "func (m model) Init() tea.Cmd {"
        },
        {
          "targetTerm": "Cmd",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 104,
            "column": 26
          },
          "context": "func (m model) Init() tea.Cmd {"
        },
        {
          "targetTerm": "tea.Batch",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 105,
            "column": 8
          },
          "context": "return tea.Batch("
        },
        {
          "targetTerm": "m.executeInitialCommand",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 108,
            "column": 2
          },
          "context": "m.executeInitialCommand(),"
        },
        {
          "targetTerm": "executeInitialCommand",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 112,
            "column": 15
          },
          "context": "func (m model) executeInitialCommand() tea.Cmd {"
        },
        {
          "targetTerm": "Cmd",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 112,
            "column": 43
          },
          "context": "func (m model) executeInitialCommand() tea.Cmd {"
        },
        {
          "targetTerm": "m.runCuratorCommand",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 116,
            "column": 9
          },
          "context": "return m.runCuratorCommand(\"overview\", m.projectPath)"
        },
        {
          "targetTerm": "m.runCuratorCommand",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 124,
            "column": 10
          },
          "context": "return m.runCuratorCommand(\"ask\", m.projectPath, m.question)"
        },
        {
          "targetTerm": "runCuratorCommand",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 130,
            "column": 15
          },
          "context": "func (m model) runCuratorCommand(command string, args ...string) tea.Cmd {"
        },
        {
          "targetTerm": "Cmd",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 130,
            "column": 69
          },
          "context": "func (m model) runCuratorCommand(command string, args ...string) tea.Cmd {"
        },
        {
          "targetTerm": "Msg",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 131,
            "column": 19
          },
          "context": "return func() tea.Msg {"
        },
        {
          "targetTerm": "exec.Command",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 135,
            "column": 9
          },
          "context": "cmd := exec.Command(\"bun\", cmdArgs...)"
        },
        {
          "targetTerm": "cmd.CombinedOutput",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 136,
            "column": 17
          },
          "context": "output, err := cmd.CombinedOutput()"
        },
        {
          "targetTerm": "Msg",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 139,
            "column": 18
          },
          "context": "return responseMsg{"
        },
        {
          "targetTerm": "fmt.Sprintf",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 140,
            "column": 13
          },
          "context": "content: fmt.Sprintf(\"Error: %v\\n%s\", err, string(output)),"
        },
        {
          "targetTerm": "Msg",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 145,
            "column": 17
          },
          "context": "return responseMsg{"
        },
        {
          "targetTerm": "Update",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 152,
            "column": 15
          },
          "context": "func (m model) Update(msg tea.Msg) (tea.Model, tea.Cmd) {"
        },
        {
          "targetTerm": "textarea.SetWidth",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 165,
            "column": 4
          },
          "context": "m.textarea.SetWidth(msg.Width - 4)"
        },
        {
          "targetTerm": "Type",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 170,
            "column": 13
          },
          "context": "switch msg.Type {"
        },
        {
          "targetTerm": "Loading",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 174,
            "column": 31
          },
          "context": "if m.mode == \"chat\" && !m.isLoading {"
        },
        {
          "targetTerm": "textarea.Value",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 178,
            "column": 44
          },
          "context": "if m.mode == \"chat\" && !m.isLoading && m.textarea.Value() != \"\" {"
        },
        {
          "targetTerm": "textarea.Value",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 180,
            "column": 17
          },
          "context": "userMsg := m.textarea.Value()"
        },
        {
          "targetTerm": "textarea.Reset",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 185,
            "column": 6
          },
          "context": "m.textarea.Reset()"
        },
        {
          "targetTerm": "m.runCuratorCommand",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 187,
            "column": 14
          },
          "context": "return m, m.runCuratorCommand(\"ask\", m.projectPath, userMsg)"
        },
        {
          "targetTerm": "Error",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 194,
            "column": 11
          },
          "context": "if msg.isError {"
        },
        {
          "targetTerm": "fmt.Errorf",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 195,
            "column": 11
          },
          "context": "m.err = fmt.Errorf(msg.content)"
        },
        {
          "targetTerm": "m.updateViewport",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 206,
            "column": 2
          },
          "context": "m.updateViewport()"
        },
        {
          "targetTerm": "Loading",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 211,
            "column": 9
          },
          "context": "if m.isLoading {"
        },
        {
          "targetTerm": "spinner.Update",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 213,
            "column": 22
          },
          "context": "m.spinner, cmd = m.spinner.Update(msg)"
        },
        {
          "targetTerm": "Loading",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 221,
            "column": 29
          },
          "context": "if m.mode == \"chat\" && !m.isLoading {"
        },
        {
          "targetTerm": "textarea.Update",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 223,
            "column": 22
          },
          "context": "m.textarea, cmd = m.textarea.Update(msg)"
        },
        {
          "targetTerm": "viewport.Update",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 228,
            "column": 21
          },
          "context": "m.viewport, cmd = m.viewport.Update(msg)"
        },
        {
          "targetTerm": "tea.Batch",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 231,
            "column": 11
          },
          "context": "return m, tea.Batch(cmds...)"
        },
        {
          "targetTerm": "updateViewport",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 234,
            "column": 16
          },
          "context": "func (m *model) updateViewport() {"
        },
        {
          "targetTerm": "content.WriteString",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 240,
            "column": 3
          },
          "context": "content.WriteString(userStyle.Render(\"🧑 You:\") + \"\\n\")"
        },
        {
          "targetTerm": "userStyle.Render",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 240,
            "column": 23
          },
          "context": "content.WriteString(userStyle.Render(\"🧑 You:\") + \"\\n\")"
        },
        {
          "targetTerm": "content.WriteString",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 241,
            "column": 3
          },
          "context": "content.WriteString(msg.content + \"\\n\\n\")"
        },
        {
          "targetTerm": "content.WriteString",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 243,
            "column": 3
          },
          "context": "content.WriteString(curatorStyle.Render(\"🤖 Curator:\") + \"\\n\")"
        },
        {
          "targetTerm": "curatorStyle.Render",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 243,
            "column": 23
          },
          "context": "content.WriteString(curatorStyle.Render(\"🤖 Curator:\") + \"\\n\")"
        },
        {
          "targetTerm": "renderer.Render",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 245,
            "column": 22
          },
          "context": "rendered, err := m.renderer.Render(msg.content)"
        },
        {
          "targetTerm": "content.WriteString",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 247,
            "column": 4
          },
          "context": "content.WriteString(msg.content + \"\\n\\n\")"
        },
        {
          "targetTerm": "content.WriteString",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 249,
            "column": 4
          },
          "context": "content.WriteString(rendered + \"\\n\")"
        },
        {
          "targetTerm": "viewport.SetContent",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 254,
            "column": 3
          },
          "context": "m.viewport.SetContent(content.String())"
        },
        {
          "targetTerm": "content.String",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 254,
            "column": 23
          },
          "context": "m.viewport.SetContent(content.String())"
        },
        {
          "targetTerm": "viewport.GotoBottom",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 255,
            "column": 3
          },
          "context": "m.viewport.GotoBottom()"
        },
        {
          "targetTerm": "View",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 258,
            "column": 15
          },
          "context": "func (m model) View() string {"
        },
        {
          "targetTerm": "fmt.Sprintf",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 260,
            "column": 9
          },
          "context": "return fmt.Sprintf(\"Error: %v\\n\\nPress Ctrl+C to quit.\", m.err)"
        },
        {
          "targetTerm": "titleStyle.Render",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 264,
            "column": 10
          },
          "context": "title := titleStyle.Render(\"🤖 Curator - AI Codebase Assistant\")"
        },
        {
          "targetTerm": "Loading",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 268,
            "column": 8
          },
          "context": "if m.isLoading {"
        },
        {
          "targetTerm": "chatStyle.Render",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 269,
            "column": 16
          },
          "context": "mainContent = chatStyle.Render("
        },
        {
          "targetTerm": "viewport.View",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 270,
            "column": 5
          },
          "context": "m.viewport.View() + \"\\n\\n\" +"
        },
        {
          "targetTerm": "spinner.View",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 271,
            "column": 6
          },
          "context": "m.spinner.View() + \" Thinking...\","
        },
        {
          "targetTerm": "chatStyle.Render",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 274,
            "column": 16
          },
          "context": "mainContent = chatStyle.Render(m.viewport.View())"
        },
        {
          "targetTerm": "viewport.View",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 274,
            "column": 35
          },
          "context": "mainContent = chatStyle.Render(m.viewport.View())"
        },
        {
          "targetTerm": "Loading",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 279,
            "column": 29
          },
          "context": "if m.mode == \"chat\" && !m.isLoading {"
        },
        {
          "targetTerm": "textarea.View",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 280,
            "column": 16
          },
          "context": "inputArea = m.textarea.View()"
        },
        {
          "targetTerm": "helpStyle.Render",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 287,
            "column": 9
          },
          "context": "help = helpStyle.Render(\"Enter: send • Esc: quit • ↑/↓: scroll\")"
        },
        {
          "targetTerm": "helpStyle.Render",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 289,
            "column": 9
          },
          "context": "help = helpStyle.Render(\"↑/↓: scroll • Ctrl+C: quit\")"
        },
        {
          "targetTerm": "lipgloss.JoinVertical",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 293,
            "column": 8
          },
          "context": "return lipgloss.JoinVertical("
        },
        {
          "targetTerm": "RunTUI",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 304,
            "column": 5
          },
          "context": "func RunTUI(projectPath string) error {"
        },
        {
          "targetTerm": "os.Getwd",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 306,
            "column": 19
          },
          "context": "projectPath, _ = os.Getwd()"
        },
        {
          "targetTerm": "RunChatTUI",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 308,
            "column": 8
          },
          "context": "return RunChatTUI(projectPath)"
        },
        {
          "targetTerm": "RunOverviewTUI",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 311,
            "column": 5
          },
          "context": "func RunOverviewTUI(projectPath string, newSession bool) error {"
        },
        {
          "targetTerm": "os.Getwd",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 313,
            "column": 19
          },
          "context": "projectPath, _ = os.Getwd()"
        },
        {
          "targetTerm": "initialModel",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 316,
            "column": 6
          },
          "context": "m := initialModel(\"overview\", projectPath)"
        },
        {
          "targetTerm": "tea.NewProgram",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 317,
            "column": 6
          },
          "context": "p := tea.NewProgram(m, tea.WithAltScreen())"
        },
        {
          "targetTerm": "tea.WithAltScreen",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 317,
            "column": 24
          },
          "context": "p := tea.NewProgram(m, tea.WithAltScreen())"
        },
        {
          "targetTerm": "p.Run",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 318,
            "column": 11
          },
          "context": "_, err := p.Run()"
        },
        {
          "targetTerm": "RunAskTUI",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 322,
            "column": 5
          },
          "context": "func RunAskTUI(projectPath, question string) error {"
        },
        {
          "targetTerm": "os.Getwd",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 324,
            "column": 19
          },
          "context": "projectPath, _ = os.Getwd()"
        },
        {
          "targetTerm": "initialModel",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 327,
            "column": 6
          },
          "context": "m := initialModel(\"ask\", projectPath)"
        },
        {
          "targetTerm": "tea.NewProgram",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 329,
            "column": 6
          },
          "context": "p := tea.NewProgram(m, tea.WithAltScreen())"
        },
        {
          "targetTerm": "tea.WithAltScreen",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 329,
            "column": 24
          },
          "context": "p := tea.NewProgram(m, tea.WithAltScreen())"
        },
        {
          "targetTerm": "p.Run",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 330,
            "column": 11
          },
          "context": "_, err := p.Run()"
        },
        {
          "targetTerm": "RunChatTUI",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 334,
            "column": 5
          },
          "context": "func RunChatTUI(projectPath string) error {"
        },
        {
          "targetTerm": "os.Getwd",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 336,
            "column": 19
          },
          "context": "projectPath, _ = os.Getwd()"
        },
        {
          "targetTerm": "initialModel",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 339,
            "column": 6
          },
          "context": "m := initialModel(\"chat\", projectPath)"
        },
        {
          "targetTerm": "textarea.Focus",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 340,
            "column": 3
          },
          "context": "m.textarea.Focus()"
        },
        {
          "targetTerm": "m.updateViewport",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 347,
            "column": 1
          },
          "context": "m.updateViewport()"
        },
        {
          "targetTerm": "tea.NewProgram",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 349,
            "column": 6
          },
          "context": "p := tea.NewProgram(m, tea.WithAltScreen())"
        },
        {
          "targetTerm": "tea.WithAltScreen",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 349,
            "column": 24
          },
          "context": "p := tea.NewProgram(m, tea.WithAltScreen())"
        },
        {
          "targetTerm": "p.Run",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 350,
            "column": 11
          },
          "context": "_, err := p.Run()"
        },
        {
          "targetTerm": "RunFeatureTUI",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 354,
            "column": 5
          },
          "context": "func RunFeatureTUI(projectPath, description string) error {"
        },
        {
          "targetTerm": "os.Getwd",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 356,
            "column": 19
          },
          "context": "projectPath, _ = os.Getwd()"
        },
        {
          "targetTerm": "initialModel",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 359,
            "column": 6
          },
          "context": "m := initialModel(\"feature\", projectPath)"
        },
        {
          "targetTerm": "fmt.Sprintf",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 366,
            "column": 11
          },
          "context": "content: fmt.Sprintf(\"Feature Request: %s\", description),"
        },
        {
          "targetTerm": "tea.NewProgram",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 369,
            "column": 6
          },
          "context": "p := tea.NewProgram(m, tea.WithAltScreen())"
        },
        {
          "targetTerm": "tea.WithAltScreen",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 369,
            "column": 24
          },
          "context": "p := tea.NewProgram(m, tea.WithAltScreen())"
        },
        {
          "targetTerm": "p.Run",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 370,
            "column": 11
          },
          "context": "_, err := p.Run()"
        },
        {
          "targetTerm": "RunChangeTUI",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 374,
            "column": 5
          },
          "context": "func RunChangeTUI(projectPath, description string) error {"
        },
        {
          "targetTerm": "os.Getwd",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 376,
            "column": 19
          },
          "context": "projectPath, _ = os.Getwd()"
        },
        {
          "targetTerm": "initialModel",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 379,
            "column": 6
          },
          "context": "m := initialModel(\"change\", projectPath)"
        },
        {
          "targetTerm": "fmt.Sprintf",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 386,
            "column": 11
          },
          "context": "content: fmt.Sprintf(\"Change Analysis: %s\", description),"
        },
        {
          "targetTerm": "tea.NewProgram",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 389,
            "column": 6
          },
          "context": "p := tea.NewProgram(m, tea.WithAltScreen())"
        },
        {
          "targetTerm": "tea.WithAltScreen",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 389,
            "column": 24
          },
          "context": "p := tea.NewProgram(m, tea.WithAltScreen())"
        },
        {
          "targetTerm": "p.Run",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 390,
            "column": 11
          },
          "context": "_, err := p.Run()"
        },
        {
          "targetTerm": "RunMemoryTUI",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 394,
            "column": 5
          },
          "context": "func RunMemoryTUI(projectPath string) error {"
        },
        {
          "targetTerm": "os.Getwd",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 396,
            "column": 19
          },
          "context": "projectPath, _ = os.Getwd()"
        },
        {
          "targetTerm": "initialModel",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 399,
            "column": 6
          },
          "context": "m := initialModel(\"memory\", projectPath)"
        },
        {
          "targetTerm": "tea.NewProgram",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 402,
            "column": 6
          },
          "context": "p := tea.NewProgram(m, tea.WithAltScreen())"
        },
        {
          "targetTerm": "tea.WithAltScreen",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 402,
            "column": 24
          },
          "context": "p := tea.NewProgram(m, tea.WithAltScreen())"
        },
        {
          "targetTerm": "p.Run",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/curator/tui.go",
            "line": 403,
            "column": 11
          },
          "context": "_, err := p.Run()"
        }
      ]
    ],
    [
      "internal/smartgrep/tui.go",
      [
        {
          "targetTerm": "lipgloss.NewStyle",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 16,
            "column": 14
          },
          "context": "titleStyle = lipgloss.NewStyle()."
        },
        {
          "targetTerm": "Bold",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 17,
            "column": 3
          },
          "context": "Bold(true)."
        },
        {
          "targetTerm": "Foreground",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 18,
            "column": 3
          },
          "context": "Foreground(lipgloss.Color(\"212\"))."
        },
        {
          "targetTerm": "lipgloss.Color",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 18,
            "column": 14
          },
          "context": "Foreground(lipgloss.Color(\"212\"))."
        },
        {
          "targetTerm": "MarginBottom",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 19,
            "column": 3
          },
          "context": "MarginBottom(1)"
        },
        {
          "targetTerm": "lipgloss.NewStyle",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 21,
            "column": 17
          },
          "context": "selectedStyle = lipgloss.NewStyle()."
        },
        {
          "targetTerm": "Foreground",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 22,
            "column": 3
          },
          "context": "Foreground(lipgloss.Color(\"120\"))"
        },
        {
          "targetTerm": "lipgloss.Color",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 22,
            "column": 14
          },
          "context": "Foreground(lipgloss.Color(\"120\"))"
        },
        {
          "targetTerm": "lipgloss.NewStyle",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 24,
            "column": 15
          },
          "context": "headerStyle = lipgloss.NewStyle()."
        },
        {
          "targetTerm": "Bold",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 25,
            "column": 3
          },
          "context": "Bold(true)."
        },
        {
          "targetTerm": "Foreground",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 26,
            "column": 3
          },
          "context": "Foreground(lipgloss.Color(\"33\"))"
        },
        {
          "targetTerm": "lipgloss.Color",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 26,
            "column": 14
          },
          "context": "Foreground(lipgloss.Color(\"33\"))"
        },
        {
          "targetTerm": "Map",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 38,
            "column": 14
          },
          "context": "var keys = keyMap{"
        },
        {
          "targetTerm": "key.NewBinding",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 39,
            "column": 5
          },
          "context": "Up: key.NewBinding("
        },
        {
          "targetTerm": "key.WithKeys",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 40,
            "column": 2
          },
          "context": "key.WithKeys(\"up\", \"k\"),"
        },
        {
          "targetTerm": "key.WithHelp",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 41,
            "column": 2
          },
          "context": "key.WithHelp(\"↑/k\", \"up\"),"
        },
        {
          "targetTerm": "key.NewBinding",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 43,
            "column": 7
          },
          "context": "Down: key.NewBinding("
        },
        {
          "targetTerm": "key.WithKeys",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 44,
            "column": 2
          },
          "context": "key.WithKeys(\"down\", \"j\"),"
        },
        {
          "targetTerm": "key.WithHelp",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 45,
            "column": 2
          },
          "context": "key.WithHelp(\"↓/j\", \"down\"),"
        },
        {
          "targetTerm": "key.NewBinding",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 47,
            "column": 9
          },
          "context": "Select: key.NewBinding("
        },
        {
          "targetTerm": "key.WithKeys",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 48,
            "column": 2
          },
          "context": "key.WithKeys(\"enter\"),"
        },
        {
          "targetTerm": "key.WithHelp",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 49,
            "column": 2
          },
          "context": "key.WithHelp(\"enter\", \"select\"),"
        },
        {
          "targetTerm": "key.NewBinding",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 51,
            "column": 7
          },
          "context": "Back: key.NewBinding("
        },
        {
          "targetTerm": "key.WithKeys",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 52,
            "column": 2
          },
          "context": "key.WithKeys(\"esc\"),"
        },
        {
          "targetTerm": "key.WithHelp",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 53,
            "column": 2
          },
          "context": "key.WithHelp(\"esc\", \"back\"),"
        },
        {
          "targetTerm": "key.NewBinding",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 55,
            "column": 7
          },
          "context": "Quit: key.NewBinding("
        },
        {
          "targetTerm": "key.WithKeys",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 56,
            "column": 2
          },
          "context": "key.WithKeys(\"q\", \"ctrl+c\"),"
        },
        {
          "targetTerm": "key.WithHelp",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 57,
            "column": 2
          },
          "context": "key.WithHelp(\"q\", \"quit\"),"
        },
        {
          "targetTerm": "Title",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 68,
            "column": 18
          },
          "context": "func (i menuItem) Title() string       { return i.title }"
        },
        {
          "targetTerm": "Description",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 69,
            "column": 18
          },
          "context": "func (i menuItem) Description() string { return i.description }"
        },
        {
          "targetTerm": "FilterValue",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 70,
            "column": 18
          },
          "context": "func (i menuItem) FilterValue() string { return i.title }"
        },
        {
          "targetTerm": "initialModel",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 81,
            "column": 5
          },
          "context": "func initialModel() model {"
        },
        {
          "targetTerm": "Item",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 83,
            "column": 17
          },
          "context": "items := []list.Item{"
        },
        {
          "targetTerm": "Item",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 84,
            "column": 6
          },
          "context": "menuItem{"
        },
        {
          "targetTerm": "Item",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 89,
            "column": 6
          },
          "context": "menuItem{"
        },
        {
          "targetTerm": "Item",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 94,
            "column": 6
          },
          "context": "menuItem{"
        },
        {
          "targetTerm": "Item",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 99,
            "column": 6
          },
          "context": "menuItem{"
        },
        {
          "targetTerm": "Item",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 104,
            "column": 6
          },
          "context": "menuItem{"
        },
        {
          "targetTerm": "list.New",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 112,
            "column": 13
          },
          "context": "mainMenu := list.New(items, list.NewDefaultDelegate(), 0, 0)"
        },
        {
          "targetTerm": "list.NewDefaultDelegate",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 112,
            "column": 29
          },
          "context": "mainMenu := list.New(items, list.NewDefaultDelegate(), 0, 0)"
        },
        {
          "targetTerm": "mainMenu.SetShowStatusBar",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 114,
            "column": 1
          },
          "context": "mainMenu.SetShowStatusBar(false)"
        },
        {
          "targetTerm": "mainMenu.SetFilteringEnabled",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 115,
            "column": 1
          },
          "context": "mainMenu.SetFilteringEnabled(false)"
        },
        {
          "targetTerm": "textinput.New",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 118,
            "column": 16
          },
          "context": "searchInput := textinput.New()"
        },
        {
          "targetTerm": "Init",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 131,
            "column": 15
          },
          "context": "func (m model) Init() tea.Cmd {"
        },
        {
          "targetTerm": "Cmd",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 131,
            "column": 26
          },
          "context": "func (m model) Init() tea.Cmd {"
        },
        {
          "targetTerm": "Update",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 135,
            "column": 15
          },
          "context": "func (m model) Update(msg tea.Msg) (tea.Model, tea.Cmd) {"
        },
        {
          "targetTerm": "mainMenu.SetWidth",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 138,
            "column": 4
          },
          "context": "m.mainMenu.SetWidth(msg.Width)"
        },
        {
          "targetTerm": "mainMenu.SetHeight",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 139,
            "column": 4
          },
          "context": "m.mainMenu.SetHeight(msg.Height - 4)"
        },
        {
          "targetTerm": "key.Matches",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 146,
            "column": 8
          },
          "context": "case key.Matches(msg, keys.Quit):"
        },
        {
          "targetTerm": "key.Matches",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 148,
            "column": 8
          },
          "context": "case key.Matches(msg, keys.Select):"
        },
        {
          "targetTerm": "mainMenu.SelectedItem",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 149,
            "column": 18
          },
          "context": "selected := m.mainMenu.SelectedItem().(menuItem)"
        },
        {
          "targetTerm": "searchInput.Focus",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 152,
            "column": 7
          },
          "context": "m.searchInput.Focus()"
        },
        {
          "targetTerm": "m.executeSearch",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 156,
            "column": 14
          },
          "context": "return m, m.executeSearch()"
        },
        {
          "targetTerm": "key.Matches",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 161,
            "column": 8
          },
          "context": "case key.Matches(msg, keys.Back):"
        },
        {
          "targetTerm": "searchInput.Blur",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 163,
            "column": 6
          },
          "context": "m.searchInput.Blur()"
        },
        {
          "targetTerm": "searchInput.SetValue",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 164,
            "column": 6
          },
          "context": "m.searchInput.SetValue(\"\")"
        },
        {
          "targetTerm": "key.Matches",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 166,
            "column": 8
          },
          "context": "case key.Matches(msg, keys.Quit):"
        },
        {
          "targetTerm": "m.executeSearch",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 169,
            "column": 14
          },
          "context": "return m, m.executeSearch()"
        },
        {
          "targetTerm": "key.Matches",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 174,
            "column": 8
          },
          "context": "case key.Matches(msg, keys.Back):"
        },
        {
          "targetTerm": "key.Matches",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 178,
            "column": 8
          },
          "context": "case key.Matches(msg, keys.Quit):"
        },
        {
          "targetTerm": "mainMenu.Update",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 197,
            "column": 22
          },
          "context": "m.mainMenu, cmd = m.mainMenu.Update(msg)"
        },
        {
          "targetTerm": "searchInput.Update",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 201,
            "column": 25
          },
          "context": "m.searchInput, cmd = m.searchInput.Update(msg)"
        },
        {
          "targetTerm": "View",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 208,
            "column": 15
          },
          "context": "func (m model) View() string {"
        },
        {
          "targetTerm": "fmt.Sprintf",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 210,
            "column": 9
          },
          "context": "return fmt.Sprintf(\"Error: %v\\n\\nPress 'q' to quit.\", m.err)"
        },
        {
          "targetTerm": "titleStyle.Render",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 215,
            "column": 9
          },
          "context": "return titleStyle.Render(\"🔍 SmartGrep TUI\") + \"\\n\\n\" + m.mainMenu.View()"
        },
        {
          "targetTerm": "mainMenu.View",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 215,
            "column": 60
          },
          "context": "return titleStyle.Render(\"🔍 SmartGrep TUI\") + \"\\n\\n\" + m.mainMenu.View()"
        },
        {
          "targetTerm": "titleStyle.Render",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 218,
            "column": 9
          },
          "context": "return titleStyle.Render(\"Pattern Search\") + \"\\n\\n\" +"
        },
        {
          "targetTerm": "pattern",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 219,
            "column": 17
          },
          "context": "\"Enter search pattern (use | for OR, & for AND, ! for NOT):\\n\\n\" +"
        },
        {
          "targetTerm": "searchInput.View",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 220,
            "column": 5
          },
          "context": "m.searchInput.View() + \"\\n\\n\" +"
        },
        {
          "targetTerm": "titleStyle.Render",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 224,
            "column": 9
          },
          "context": "return titleStyle.Render(\"Find References\") + \"\\n\\n\" +"
        },
        {
          "targetTerm": "searchInput.View",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 226,
            "column": 5
          },
          "context": "m.searchInput.View() + \"\\n\\n\" +"
        },
        {
          "targetTerm": "titleStyle.Render",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 230,
            "column": 9
          },
          "context": "return titleStyle.Render(\"Search Results\") + \"\\n\\n\" +"
        },
        {
          "targetTerm": "executeSearch",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 243,
            "column": 15
          },
          "context": "func (m model) executeSearch() tea.Cmd {"
        },
        {
          "targetTerm": "Cmd",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 243,
            "column": 35
          },
          "context": "func (m model) executeSearch() tea.Cmd {"
        },
        {
          "targetTerm": "Msg",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 244,
            "column": 19
          },
          "context": "return func() tea.Msg {"
        },
        {
          "targetTerm": "searchInput.Value",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 249,
            "column": 8
          },
          "context": "if m.searchInput.Value() == \"\" {"
        },
        {
          "targetTerm": "errMsg",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 250,
            "column": 11
          },
          "context": "return errMsg(fmt.Errorf(\"search pattern required\"))"
        },
        {
          "targetTerm": "fmt.Errorf",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 250,
            "column": 18
          },
          "context": "return errMsg(fmt.Errorf(\"search pattern required\"))"
        },
        {
          "targetTerm": "searchInput.Value",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 252,
            "column": 67
          },
          "context": "cmdArgs = []string{\"run\", \"../../src/tools/smartgrep/cli.ts\", m.searchInput.Value()}"
        },
        {
          "targetTerm": "searchInput.Value",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 255,
            "column": 8
          },
          "context": "if m.searchInput.Value() == \"\" {"
        },
        {
          "targetTerm": "errMsg",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 256,
            "column": 11
          },
          "context": "return errMsg(fmt.Errorf(\"symbol name required\"))"
        },
        {
          "targetTerm": "fmt.Errorf",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 256,
            "column": 18
          },
          "context": "return errMsg(fmt.Errorf(\"symbol name required\"))"
        },
        {
          "targetTerm": "searchInput.Value",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 258,
            "column": 75
          },
          "context": "cmdArgs = []string{\"run\", \"../../src/tools/smartgrep/cli.ts\", \"refs\", m.searchInput.Value()}"
        },
        {
          "targetTerm": "searchInput.Value",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 270,
            "column": 8
          },
          "context": "if m.searchInput.Value() != \"\" {"
        },
        {
          "targetTerm": "searchInput.Value",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 271,
            "column": 14
          },
          "context": "topic = m.searchInput.Value()"
        },
        {
          "targetTerm": "searchResultMsg",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 273,
            "column": 10
          },
          "context": "return searchResultMsg(fmt.Sprintf(\"Claude Batch Mode for topic: %s\\n\\nThis would run multiple searches and create a comprehensive report.\\n(Full implementation pending)\", topic))"
        },
        {
          "targetTerm": "fmt.Sprintf",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 273,
            "column": 26
          },
          "context": "return searchResultMsg(fmt.Sprintf(\"Claude Batch Mode for topic: %s\\n\\nThis would run multiple searches and create a comprehensive report.\\n(Full implementation pending)\", topic))"
        },
        {
          "targetTerm": "n",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 273,
            "column": 142
          },
          "context": "return searchResultMsg(fmt.Sprintf(\"Claude Batch Mode for topic: %s\\n\\nThis would run multiple searches and create a comprehensive report.\\n(Full implementation pending)\", topic))"
        },
        {
          "targetTerm": "exec.Command",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 277,
            "column": 9
          },
          "context": "cmd := exec.Command(\"bun\", cmdArgs...)"
        },
        {
          "targetTerm": "cmd.CombinedOutput",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 278,
            "column": 17
          },
          "context": "output, err := cmd.CombinedOutput()"
        },
        {
          "targetTerm": "errMsg",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 280,
            "column": 10
          },
          "context": "return errMsg(fmt.Errorf(\"command failed: %w\\n%s\", err, string(output)))"
        },
        {
          "targetTerm": "fmt.Errorf",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 280,
            "column": 17
          },
          "context": "return errMsg(fmt.Errorf(\"command failed: %w\\n%s\", err, string(output)))"
        },
        {
          "targetTerm": "searchResultMsg",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 283,
            "column": 9
          },
          "context": "return searchResultMsg(string(output))"
        },
        {
          "targetTerm": "RunTUI",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 288,
            "column": 5
          },
          "context": "func RunTUI() error {"
        },
        {
          "targetTerm": "tea.NewProgram",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 289,
            "column": 6
          },
          "context": "p := tea.NewProgram(initialModel(), tea.WithAltScreen())"
        },
        {
          "targetTerm": "initialModel",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 289,
            "column": 21
          },
          "context": "p := tea.NewProgram(initialModel(), tea.WithAltScreen())"
        },
        {
          "targetTerm": "tea.WithAltScreen",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 289,
            "column": 37
          },
          "context": "p := tea.NewProgram(initialModel(), tea.WithAltScreen())"
        },
        {
          "targetTerm": "p.Run",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 290,
            "column": 11
          },
          "context": "_, err := p.Run()"
        },
        {
          "targetTerm": "RunGroupTUI",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 295,
            "column": 5
          },
          "context": "func RunGroupTUI() error {"
        },
        {
          "targetTerm": "RunTUI",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 297,
            "column": 8
          },
          "context": "return RunTUI()"
        },
        {
          "targetTerm": "RunRefsTUI",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 301,
            "column": 5
          },
          "context": "func RunRefsTUI() error {"
        },
        {
          "targetTerm": "RunTUI",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 303,
            "column": 8
          },
          "context": "return RunTUI()"
        },
        {
          "targetTerm": "RunChangesTUI",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 307,
            "column": 5
          },
          "context": "func RunChangesTUI() error {"
        },
        {
          "targetTerm": "RunTUI",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/smartgrep/tui.go",
            "line": 309,
            "column": 8
          },
          "context": "return RunTUI()"
        }
      ]
    ],
    [
      "internal/config/config.go",
      [
        {
          "targetTerm": "GetSmartgrepPath",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/config/config.go",
            "line": 9,
            "column": 5
          },
          "context": "func GetSmartgrepPath() string {"
        },
        {
          "targetTerm": "os.Getenv",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/config/config.go",
            "line": 11,
            "column": 12
          },
          "context": "if path := os.Getenv(\"SMARTGREP_CLI_PATH\"); path != \"\" {"
        },
        {
          "targetTerm": "os.Executable",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/config/config.go",
            "line": 16,
            "column": 21
          },
          "context": "if execPath, err := os.Executable(); err == nil {"
        },
        {
          "targetTerm": "filepath.Dir",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/config/config.go",
            "line": 18,
            "column": 9
          },
          "context": "dir := filepath.Dir(execPath)"
        },
        {
          "targetTerm": "filepath.Join",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/config/config.go",
            "line": 22,
            "column": 3
          },
          "context": "filepath.Join(dir, \"..\", \"..\", \"..\", \"..\", \"src\", \"tools\", \"smartgrep\", \"cli.ts\"),"
        },
        {
          "targetTerm": "filepath.Join",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/config/config.go",
            "line": 23,
            "column": 3
          },
          "context": "filepath.Join(dir, \"..\", \"..\", \"src\", \"tools\", \"smartgrep\", \"cli.ts\"),"
        },
        {
          "targetTerm": "Paths",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "internal/config/config.go",
            "line": 26,
            "column": 26
          },
          "context": "for _, path := range devPaths {"
        },
        {
          "targetTerm": "os.Stat",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/config/config.go",
            "line": 27,
            "column": 16
          },
          "context": "if _, err := os.Stat(path); err == nil {"
        },
        {
          "targetTerm": "GetCuratorPath",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/config/config.go",
            "line": 38,
            "column": 5
          },
          "context": "func GetCuratorPath() string {"
        },
        {
          "targetTerm": "os.Getenv",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/config/config.go",
            "line": 40,
            "column": 12
          },
          "context": "if path := os.Getenv(\"CURATOR_CLI_PATH\"); path != \"\" {"
        },
        {
          "targetTerm": "os.Executable",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/config/config.go",
            "line": 45,
            "column": 21
          },
          "context": "if execPath, err := os.Executable(); err == nil {"
        },
        {
          "targetTerm": "filepath.Dir",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/config/config.go",
            "line": 46,
            "column": 9
          },
          "context": "dir := filepath.Dir(execPath)"
        },
        {
          "targetTerm": "filepath.Join",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/config/config.go",
            "line": 49,
            "column": 3
          },
          "context": "filepath.Join(dir, \"..\", \"..\", \"..\", \"..\", \"src\", \"tools\", \"curator-cli\", \"cli.ts\"),"
        },
        {
          "targetTerm": "filepath.Join",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/config/config.go",
            "line": 50,
            "column": 3
          },
          "context": "filepath.Join(dir, \"..\", \"..\", \"src\", \"tools\", \"curator-cli\", \"cli.ts\"),"
        },
        {
          "targetTerm": "Paths",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "internal/config/config.go",
            "line": 53,
            "column": 26
          },
          "context": "for _, path := range devPaths {"
        },
        {
          "targetTerm": "os.Stat",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/config/config.go",
            "line": 54,
            "column": 16
          },
          "context": "if _, err := os.Stat(path); err == nil {"
        },
        {
          "targetTerm": "GetMonitorPath",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/config/config.go",
            "line": 65,
            "column": 5
          },
          "context": "func GetMonitorPath() string {"
        },
        {
          "targetTerm": "os.Getenv",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/config/config.go",
            "line": 67,
            "column": 12
          },
          "context": "if path := os.Getenv(\"MONITOR_CLI_PATH\"); path != \"\" {"
        },
        {
          "targetTerm": "os.Executable",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/config/config.go",
            "line": 72,
            "column": 21
          },
          "context": "if execPath, err := os.Executable(); err == nil {"
        },
        {
          "targetTerm": "filepath.Dir",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/config/config.go",
            "line": 73,
            "column": 9
          },
          "context": "dir := filepath.Dir(execPath)"
        },
        {
          "targetTerm": "filepath.Join",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/config/config.go",
            "line": 76,
            "column": 3
          },
          "context": "filepath.Join(dir, \"..\", \"..\", \"..\", \"..\", \"src\", \"tools\", \"monitor\", \"cli.ts\"),"
        },
        {
          "targetTerm": "filepath.Join",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/config/config.go",
            "line": 77,
            "column": 3
          },
          "context": "filepath.Join(dir, \"..\", \"..\", \"src\", \"tools\", \"monitor\", \"cli.ts\"),"
        },
        {
          "targetTerm": "Paths",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "internal/config/config.go",
            "line": 80,
            "column": 26
          },
          "context": "for _, path := range devPaths {"
        },
        {
          "targetTerm": "os.Stat",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/config/config.go",
            "line": 81,
            "column": 16
          },
          "context": "if _, err := os.Stat(path); err == nil {"
        },
        {
          "targetTerm": "IsDevMode",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/config/config.go",
            "line": 92,
            "column": 5
          },
          "context": "func IsDevMode() bool {"
        },
        {
          "targetTerm": "os.Executable",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/config/config.go",
            "line": 94,
            "column": 21
          },
          "context": "if execPath, err := os.Executable(); err == nil {"
        },
        {
          "targetTerm": "filepath.Dir",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/config/config.go",
            "line": 95,
            "column": 9
          },
          "context": "dir := filepath.Dir(execPath)"
        },
        {
          "targetTerm": "filepath.Join",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/config/config.go",
            "line": 96,
            "column": 13
          },
          "context": "devPath := filepath.Join(dir, \"..\", \"..\", \"..\", \"..\", \"src\", \"tools\", \"smartgrep\", \"cli.ts\")"
        },
        {
          "targetTerm": "os.Stat",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/config/config.go",
            "line": 97,
            "column": 15
          },
          "context": "if _, err := os.Stat(devPath); err == nil {"
        },
        {
          "targetTerm": "GetExecutor",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/config/config.go",
            "line": 105,
            "column": 5
          },
          "context": "func GetExecutor() string {"
        },
        {
          "targetTerm": "IsDevMode",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/config/config.go",
            "line": 106,
            "column": 4
          },
          "context": "if IsDevMode() {"
        }
      ]
    ],
    [
      "internal/monitor/tui.go",
      [
        {
          "targetTerm": "lipgloss.NewStyle",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 17,
            "column": 14
          },
          "context": "titleStyle = lipgloss.NewStyle()."
        },
        {
          "targetTerm": "Bold",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 18,
            "column": 3
          },
          "context": "Bold(true)."
        },
        {
          "targetTerm": "Foreground",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 19,
            "column": 3
          },
          "context": "Foreground(lipgloss.Color(\"212\"))."
        },
        {
          "targetTerm": "lipgloss.Color",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 19,
            "column": 14
          },
          "context": "Foreground(lipgloss.Color(\"212\"))."
        },
        {
          "targetTerm": "BorderStyle",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 20,
            "column": 3
          },
          "context": "BorderStyle(lipgloss.DoubleBorder())."
        },
        {
          "targetTerm": "lipgloss.DoubleBorder",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 20,
            "column": 15
          },
          "context": "BorderStyle(lipgloss.DoubleBorder())."
        },
        {
          "targetTerm": "BorderForeground",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 21,
            "column": 3
          },
          "context": "BorderForeground(lipgloss.Color(\"212\"))."
        },
        {
          "targetTerm": "lipgloss.Color",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 21,
            "column": 20
          },
          "context": "BorderForeground(lipgloss.Color(\"212\"))."
        },
        {
          "targetTerm": "Padding",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 22,
            "column": 3
          },
          "context": "Padding(1, 2)"
        },
        {
          "targetTerm": "lipgloss.NewStyle",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 24,
            "column": 14
          },
          "context": "statsStyle = lipgloss.NewStyle()."
        },
        {
          "targetTerm": "BorderStyle",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 25,
            "column": 3
          },
          "context": "BorderStyle(lipgloss.RoundedBorder())."
        },
        {
          "targetTerm": "lipgloss.RoundedBorder",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 25,
            "column": 15
          },
          "context": "BorderStyle(lipgloss.RoundedBorder())."
        },
        {
          "targetTerm": "BorderForeground",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 26,
            "column": 3
          },
          "context": "BorderForeground(lipgloss.Color(\"33\"))."
        },
        {
          "targetTerm": "lipgloss.Color",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 26,
            "column": 20
          },
          "context": "BorderForeground(lipgloss.Color(\"33\"))."
        },
        {
          "targetTerm": "Padding",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 27,
            "column": 3
          },
          "context": "Padding(1, 2)."
        },
        {
          "targetTerm": "MarginTop",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 28,
            "column": 3
          },
          "context": "MarginTop(1)"
        },
        {
          "targetTerm": "lipgloss.NewStyle",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 30,
            "column": 14
          },
          "context": "addedStyle = lipgloss.NewStyle()."
        },
        {
          "targetTerm": "Foreground",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 31,
            "column": 3
          },
          "context": "Foreground(lipgloss.Color(\"120\"))"
        },
        {
          "targetTerm": "lipgloss.Color",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 31,
            "column": 14
          },
          "context": "Foreground(lipgloss.Color(\"120\"))"
        },
        {
          "targetTerm": "lipgloss.NewStyle",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 33,
            "column": 17
          },
          "context": "modifiedStyle = lipgloss.NewStyle()."
        },
        {
          "targetTerm": "Foreground",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 34,
            "column": 3
          },
          "context": "Foreground(lipgloss.Color(\"33\"))"
        },
        {
          "targetTerm": "lipgloss.Color",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 34,
            "column": 14
          },
          "context": "Foreground(lipgloss.Color(\"33\"))"
        },
        {
          "targetTerm": "lipgloss.NewStyle",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 36,
            "column": 16
          },
          "context": "deletedStyle = lipgloss.NewStyle()."
        },
        {
          "targetTerm": "Foreground",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 37,
            "column": 3
          },
          "context": "Foreground(lipgloss.Color(\"196\"))"
        },
        {
          "targetTerm": "lipgloss.Color",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 37,
            "column": 14
          },
          "context": "Foreground(lipgloss.Color(\"196\"))"
        },
        {
          "targetTerm": "lipgloss.NewStyle",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 39,
            "column": 15
          },
          "context": "headerStyle = lipgloss.NewStyle()."
        },
        {
          "targetTerm": "Bold",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 40,
            "column": 3
          },
          "context": "Bold(true)."
        },
        {
          "targetTerm": "Underline",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 41,
            "column": 3
          },
          "context": "Underline(true)"
        },
        {
          "targetTerm": "initialModel",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 66,
            "column": 5
          },
          "context": "func initialModel(mode string, showOverview bool) model {"
        },
        {
          "targetTerm": "viewport.New",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 67,
            "column": 7
          },
          "context": "vp := viewport.New(80, 20)"
        },
        {
          "targetTerm": "progress.New",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 68,
            "column": 9
          },
          "context": "prog := progress.New(progress.WithDefaultGradient())"
        },
        {
          "targetTerm": "progress.WithDefaultGradient",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 68,
            "column": 22
          },
          "context": "prog := progress.New(progress.WithDefaultGradient())"
        },
        {
          "targetTerm": "Init",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 79,
            "column": 15
          },
          "context": "func (m model) Init() tea.Cmd {"
        },
        {
          "targetTerm": "Cmd",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 79,
            "column": 26
          },
          "context": "func (m model) Init() tea.Cmd {"
        },
        {
          "targetTerm": "tea.Batch",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 80,
            "column": 8
          },
          "context": "return tea.Batch("
        },
        {
          "targetTerm": "tickCmd",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 81,
            "column": 2
          },
          "context": "tickCmd(),"
        },
        {
          "targetTerm": "m.startMonitoring",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 82,
            "column": 2
          },
          "context": "m.startMonitoring(),"
        },
        {
          "targetTerm": "tickCmd",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 86,
            "column": 5
          },
          "context": "func tickCmd() tea.Cmd {"
        },
        {
          "targetTerm": "Cmd",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 86,
            "column": 19
          },
          "context": "func tickCmd() tea.Cmd {"
        },
        {
          "targetTerm": "tea.Tick",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 87,
            "column": 8
          },
          "context": "return tea.Tick(time.Second, func(t time.Time) tea.Msg {"
        },
        {
          "targetTerm": "Msg",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 87,
            "column": 52
          },
          "context": "return tea.Tick(time.Second, func(t time.Time) tea.Msg {"
        },
        {
          "targetTerm": "tickMsg",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 88,
            "column": 9
          },
          "context": "return tickMsg(t)"
        },
        {
          "targetTerm": "startMonitoring",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 92,
            "column": 15
          },
          "context": "func (m model) startMonitoring() tea.Cmd {"
        },
        {
          "targetTerm": "Cmd",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 92,
            "column": 37
          },
          "context": "func (m model) startMonitoring() tea.Cmd {"
        },
        {
          "targetTerm": "Msg",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 93,
            "column": 19
          },
          "context": "return func() tea.Msg {"
        },
        {
          "targetTerm": "Overview",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 98,
            "column": 12
          },
          "context": "if m.showOverview {"
        },
        {
          "targetTerm": "exec.Command",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 102,
            "column": 10
          },
          "context": "cmd := exec.Command(\"bun\", cmdArgs...)"
        },
        {
          "targetTerm": "cmd.CombinedOutput",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 103,
            "column": 18
          },
          "context": "output, err := cmd.CombinedOutput()"
        },
        {
          "targetTerm": "monitorOutputMsg",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 107,
            "column": 10
          },
          "context": "return monitorOutputMsg(string(output))"
        },
        {
          "targetTerm": "exec.Command",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 111,
            "column": 10
          },
          "context": "cmd := exec.Command(\"bun\", \"run\", \"../../src/tools/monitor/cli.ts\", \"status\")"
        },
        {
          "targetTerm": "cmd.CombinedOutput",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 112,
            "column": 18
          },
          "context": "output, err := cmd.CombinedOutput()"
        },
        {
          "targetTerm": "strings.Split",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 118,
            "column": 12
          },
          "context": "lines := strings.Split(string(output), \"\\n\")"
        },
        {
          "targetTerm": "Msg",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 119,
            "column": 19
          },
          "context": "status := statusMsg{"
        },
        {
          "targetTerm": "time.Now",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 121,
            "column": 18
          },
          "context": "lastUpdate:   time.Now(),"
        },
        {
          "targetTerm": "Update",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 132,
            "column": 15
          },
          "context": "func (m model) Update(msg tea.Msg) (tea.Model, tea.Cmd) {"
        },
        {
          "targetTerm": "msg.String",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 142,
            "column": 9
          },
          "context": "switch msg.String() {"
        },
        {
          "targetTerm": "tea.Batch",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 154,
            "column": 13
          },
          "context": "return m, tea.Batch(tickCmd(), m.startMonitoring())"
        },
        {
          "targetTerm": "tickCmd",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 154,
            "column": 23
          },
          "context": "return m, tea.Batch(tickCmd(), m.startMonitoring())"
        },
        {
          "targetTerm": "m.startMonitoring",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 154,
            "column": 34
          },
          "context": "return m, tea.Batch(tickCmd(), m.startMonitoring())"
        },
        {
          "targetTerm": "tickCmd",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 156,
            "column": 12
          },
          "context": "return m, tickCmd()"
        },
        {
          "targetTerm": "strings.Split",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 160,
            "column": 11
          },
          "context": "lines := strings.Split(string(msg), \"\\n\")"
        },
        {
          "targetTerm": "fmt.Sprintf",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 163,
            "column": 32
          },
          "context": "m.events = append(m.events, fmt.Sprintf(\"[%s] %s\","
        },
        {
          "targetTerm": "time.Now",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 164,
            "column": 5
          },
          "context": "time.Now().Format(\"15:04:05\"), line))"
        },
        {
          "targetTerm": "Format",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 164,
            "column": 16
          },
          "context": "time.Now().Format(\"15:04:05\"), line))"
        },
        {
          "targetTerm": "viewport.SetContent",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 171,
            "column": 4
          },
          "context": "m.viewport.SetContent(m.renderEvents())"
        },
        {
          "targetTerm": "m.renderEvents",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 171,
            "column": 24
          },
          "context": "m.viewport.SetContent(m.renderEvents())"
        },
        {
          "targetTerm": "viewport.Update",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 185,
            "column": 21
          },
          "context": "m.viewport, cmd = m.viewport.Update(msg)"
        },
        {
          "targetTerm": "renderEvents",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 189,
            "column": 15
          },
          "context": "func (m model) renderEvents() string {"
        },
        {
          "targetTerm": "strings.Contains",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 194,
            "column": 5
          },
          "context": "if strings.Contains(event, \"added\") {"
        },
        {
          "targetTerm": "addedStyle.Render",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 195,
            "column": 12
          },
          "context": "styled = addedStyle.Render(event)"
        },
        {
          "targetTerm": "strings.Contains",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 196,
            "column": 12
          },
          "context": "} else if strings.Contains(event, \"modified\") {"
        },
        {
          "targetTerm": "modifiedStyle.Render",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 197,
            "column": 12
          },
          "context": "styled = modifiedStyle.Render(event)"
        },
        {
          "targetTerm": "strings.Contains",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 198,
            "column": 12
          },
          "context": "} else if strings.Contains(event, \"deleted\") {"
        },
        {
          "targetTerm": "deletedStyle.Render",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 199,
            "column": 12
          },
          "context": "styled = deletedStyle.Render(event)"
        },
        {
          "targetTerm": "sb.WriteString",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 201,
            "column": 2
          },
          "context": "sb.WriteString(styled + \"\\n\")"
        },
        {
          "targetTerm": "sb.String",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 204,
            "column": 8
          },
          "context": "return sb.String()"
        },
        {
          "targetTerm": "View",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 207,
            "column": 15
          },
          "context": "func (m model) View() string {"
        },
        {
          "targetTerm": "fmt.Sprintf",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 209,
            "column": 9
          },
          "context": "return fmt.Sprintf(\"Error: %v\\n\\nPress 'q' to quit.\", m.err)"
        },
        {
          "targetTerm": "titleStyle.Render",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 213,
            "column": 10
          },
          "context": "title := titleStyle.Render(\"📊 Monitor Dashboard\")"
        },
        {
          "targetTerm": "statsStyle.Render",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 216,
            "column": 10
          },
          "context": "stats := statsStyle.Render(fmt.Sprintf("
        },
        {
          "targetTerm": "fmt.Sprintf",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 216,
            "column": 28
          },
          "context": "stats := statsStyle.Render(fmt.Sprintf("
        },
        {
          "targetTerm": "headerStyle.Render",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 221,
            "column": 2
          },
          "context": "headerStyle.Render(\"Statistics\"),"
        },
        {
          "targetTerm": "lastUpdate.Format",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 223,
            "column": 10
          },
          "context": "m.stats.lastUpdate.Format(\"15:04:05\"),"
        },
        {
          "targetTerm": "addedStyle.Render",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 226,
            "column": 11
          },
          "context": "return addedStyle.Render(\"✓ Healthy\")"
        },
        {
          "targetTerm": "deletedStyle.Render",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 228,
            "column": 10
          },
          "context": "return deletedStyle.Render(\"✗ Issues\")"
        },
        {
          "targetTerm": "viewport.View",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 233,
            "column": 14
          },
          "context": "content := m.viewport.View()"
        },
        {
          "targetTerm": "lipgloss.NewStyle",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 236,
            "column": 9
          },
          "context": "help := lipgloss.NewStyle().Faint(true).Render("
        },
        {
          "targetTerm": "Faint",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 236,
            "column": 29
          },
          "context": "help := lipgloss.NewStyle().Faint(true).Render("
        },
        {
          "targetTerm": "Render",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 236,
            "column": 41
          },
          "context": "help := lipgloss.NewStyle().Faint(true).Render("
        },
        {
          "targetTerm": "lipgloss.JoinVertical",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 240,
            "column": 8
          },
          "context": "return lipgloss.JoinVertical("
        },
        {
          "targetTerm": "RunTUI",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 250,
            "column": 5
          },
          "context": "func RunTUI() error {"
        },
        {
          "targetTerm": "RunWatchTUI",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 252,
            "column": 8
          },
          "context": "return RunWatchTUI(false)"
        },
        {
          "targetTerm": "RunWatchTUI",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 256,
            "column": 5
          },
          "context": "func RunWatchTUI(withOverview bool) error {"
        },
        {
          "targetTerm": "tea.NewProgram",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 257,
            "column": 6
          },
          "context": "p := tea.NewProgram("
        },
        {
          "targetTerm": "initialModel",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 258,
            "column": 2
          },
          "context": "initialModel(\"watch\", withOverview),"
        },
        {
          "targetTerm": "tea.WithAltScreen",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 259,
            "column": 2
          },
          "context": "tea.WithAltScreen(),"
        },
        {
          "targetTerm": "p.Run",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 261,
            "column": 11
          },
          "context": "_, err := p.Run()"
        },
        {
          "targetTerm": "Init",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 271,
            "column": 23
          },
          "context": "func (m overviewModel) Init() tea.Cmd {"
        },
        {
          "targetTerm": "Cmd",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 271,
            "column": 34
          },
          "context": "func (m overviewModel) Init() tea.Cmd {"
        },
        {
          "targetTerm": "Update",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 275,
            "column": 23
          },
          "context": "func (m overviewModel) Update(msg tea.Msg) (tea.Model, tea.Cmd) {"
        },
        {
          "targetTerm": "msg.String",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 284,
            "column": 9
          },
          "context": "switch msg.String() {"
        },
        {
          "targetTerm": "viewport.Update",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 291,
            "column": 21
          },
          "context": "m.viewport, cmd = m.viewport.Update(msg)"
        },
        {
          "targetTerm": "View",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 295,
            "column": 23
          },
          "context": "func (m overviewModel) View() string {"
        },
        {
          "targetTerm": "viewport.View",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 299,
            "column": 10
          },
          "context": "return m.viewport.View() + \"\\n\\n\" + lipgloss.NewStyle().Faint(true).Render(\"Press q to quit\")"
        },
        {
          "targetTerm": "lipgloss.NewStyle",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 299,
            "column": 37
          },
          "context": "return m.viewport.View() + \"\\n\\n\" + lipgloss.NewStyle().Faint(true).Render(\"Press q to quit\")"
        },
        {
          "targetTerm": "Faint",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 299,
            "column": 57
          },
          "context": "return m.viewport.View() + \"\\n\\n\" + lipgloss.NewStyle().Faint(true).Render(\"Press q to quit\")"
        },
        {
          "targetTerm": "Render",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 299,
            "column": 69
          },
          "context": "return m.viewport.View() + \"\\n\\n\" + lipgloss.NewStyle().Faint(true).Render(\"Press q to quit\")"
        },
        {
          "targetTerm": "RunOverviewTUI",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 303,
            "column": 5
          },
          "context": "func RunOverviewTUI() error {"
        },
        {
          "targetTerm": "exec.Command",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 305,
            "column": 8
          },
          "context": "cmd := exec.Command(\"bun\", \"run\", \"../../src/tools/monitor/cli.ts\", \"overview\")"
        },
        {
          "targetTerm": "cmd.CombinedOutput",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 306,
            "column": 16
          },
          "context": "output, err := cmd.CombinedOutput()"
        },
        {
          "targetTerm": "viewport.New",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 312,
            "column": 7
          },
          "context": "vp := viewport.New(80, 30)"
        },
        {
          "targetTerm": "vp.SetContent",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 313,
            "column": 1
          },
          "context": "vp.SetContent(string(output))"
        },
        {
          "targetTerm": "tea.NewProgram",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 315,
            "column": 6
          },
          "context": "p := tea.NewProgram(overviewModel{viewport: vp}, tea.WithAltScreen())"
        },
        {
          "targetTerm": "tea.WithAltScreen",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 315,
            "column": 50
          },
          "context": "p := tea.NewProgram(overviewModel{viewport: vp}, tea.WithAltScreen())"
        },
        {
          "targetTerm": "Model",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 315,
            "column": 29
          },
          "context": "p := tea.NewProgram(overviewModel{viewport: vp}, tea.WithAltScreen())"
        },
        {
          "targetTerm": "p.Run",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 316,
            "column": 10
          },
          "context": "_, err = p.Run()"
        },
        {
          "targetTerm": "RunStatusTUI",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 321,
            "column": 5
          },
          "context": "func RunStatusTUI() error {"
        },
        {
          "targetTerm": "tea.NewProgram",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 322,
            "column": 6
          },
          "context": "p := tea.NewProgram("
        },
        {
          "targetTerm": "initialModel",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 323,
            "column": 2
          },
          "context": "initialModel(\"status\", false),"
        },
        {
          "targetTerm": "tea.WithAltScreen",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 324,
            "column": 2
          },
          "context": "tea.WithAltScreen(),"
        },
        {
          "targetTerm": "p.Run",
          "referenceType": "call",
          "fromLocation": {
            "file": "internal/monitor/tui.go",
            "line": 326,
            "column": 11
          },
          "context": "_, err := p.Run()"
        }
      ]
    ],
    [
      "cmd/curator/main.go",
      [
        {
          "targetTerm": "Command",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 18,
            "column": 21
          },
          "context": "var rootCmd = &cobra.Command{"
        },
        {
          "targetTerm": "Mode",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 26,
            "column": 8
          },
          "context": "if tuiMode {"
        },
        {
          "targetTerm": "curator.RunTUI",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 28,
            "column": 10
          },
          "context": "return curator.RunTUI(projectPath)"
        },
        {
          "targetTerm": "cmd.Help",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 32,
            "column": 9
          },
          "context": "return cmd.Help()"
        },
        {
          "targetTerm": "Command",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 36,
            "column": 25
          },
          "context": "var overviewCmd = &cobra.Command{"
        },
        {
          "targetTerm": "cobra.MaximumNArgs",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 39,
            "column": 8
          },
          "context": "Args:  cobra.MaximumNArgs(1),"
        },
        {
          "targetTerm": "Mode",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 46,
            "column": 8
          },
          "context": "if tuiMode {"
        },
        {
          "targetTerm": "curator.RunOverviewTUI",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 47,
            "column": 10
          },
          "context": "return curator.RunOverviewTUI(path, newSession)"
        },
        {
          "targetTerm": "Session",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 55,
            "column": 8
          },
          "context": "if newSession {"
        },
        {
          "targetTerm": "exec.Command",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 59,
            "column": 13
          },
          "context": "execCmd := exec.Command(\"bun\", cmdArgs...)"
        },
        {
          "targetTerm": "execCmd.Run",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 64,
            "column": 9
          },
          "context": "return execCmd.Run()"
        },
        {
          "targetTerm": "Command",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 68,
            "column": 20
          },
          "context": "var askCmd = &cobra.Command{"
        },
        {
          "targetTerm": "cobra.MinimumNArgs",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 71,
            "column": 8
          },
          "context": "Args:  cobra.MinimumNArgs(1),"
        },
        {
          "targetTerm": "Mode",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 85,
            "column": 8
          },
          "context": "if tuiMode {"
        },
        {
          "targetTerm": "curator.RunAskTUI",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 86,
            "column": 10
          },
          "context": "return curator.RunAskTUI(path, question)"
        },
        {
          "targetTerm": "exec.Command",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 96,
            "column": 13
          },
          "context": "execCmd := exec.Command(\"bun\", cmdArgs...)"
        },
        {
          "targetTerm": "execCmd.Run",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 101,
            "column": 9
          },
          "context": "return execCmd.Run()"
        },
        {
          "targetTerm": "Command",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 105,
            "column": 21
          },
          "context": "var chatCmd = &cobra.Command{"
        },
        {
          "targetTerm": "cobra.MaximumNArgs",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 108,
            "column": 8
          },
          "context": "Args:  cobra.MaximumNArgs(1),"
        },
        {
          "targetTerm": "curator.RunChatTUI",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 116,
            "column": 9
          },
          "context": "return curator.RunChatTUI(path)"
        },
        {
          "targetTerm": "Command",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 120,
            "column": 24
          },
          "context": "var featureCmd = &cobra.Command{"
        },
        {
          "targetTerm": "cobra.MinimumNArgs",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 123,
            "column": 8
          },
          "context": "Args:  cobra.MinimumNArgs(1),"
        },
        {
          "targetTerm": "Mode",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 135,
            "column": 8
          },
          "context": "if tuiMode {"
        },
        {
          "targetTerm": "curator.RunFeatureTUI",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 136,
            "column": 10
          },
          "context": "return curator.RunFeatureTUI(path, description)"
        },
        {
          "targetTerm": "exec.Command",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 146,
            "column": 13
          },
          "context": "execCmd := exec.Command(\"bun\", cmdArgs...)"
        },
        {
          "targetTerm": "execCmd.Run",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 151,
            "column": 9
          },
          "context": "return execCmd.Run()"
        },
        {
          "targetTerm": "Command",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 155,
            "column": 23
          },
          "context": "var changeCmd = &cobra.Command{"
        },
        {
          "targetTerm": "cobra.MinimumNArgs",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 158,
            "column": 8
          },
          "context": "Args:  cobra.MinimumNArgs(1),"
        },
        {
          "targetTerm": "Mode",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 170,
            "column": 8
          },
          "context": "if tuiMode {"
        },
        {
          "targetTerm": "curator.RunChangeTUI",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 171,
            "column": 10
          },
          "context": "return curator.RunChangeTUI(path, description)"
        },
        {
          "targetTerm": "exec.Command",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 181,
            "column": 13
          },
          "context": "execCmd := exec.Command(\"bun\", cmdArgs...)"
        },
        {
          "targetTerm": "execCmd.Run",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 186,
            "column": 9
          },
          "context": "return execCmd.Run()"
        },
        {
          "targetTerm": "Command",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 190,
            "column": 23
          },
          "context": "var memoryCmd = &cobra.Command{"
        },
        {
          "targetTerm": "cobra.MaximumNArgs",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 193,
            "column": 8
          },
          "context": "Args:  cobra.MaximumNArgs(1),"
        },
        {
          "targetTerm": "Mode",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 200,
            "column": 8
          },
          "context": "if tuiMode {"
        },
        {
          "targetTerm": "curator.RunMemoryTUI",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 201,
            "column": 10
          },
          "context": "return curator.RunMemoryTUI(path)"
        },
        {
          "targetTerm": "exec.Command",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 210,
            "column": 13
          },
          "context": "execCmd := exec.Command(\"bun\", cmdArgs...)"
        },
        {
          "targetTerm": "execCmd.Run",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 215,
            "column": 9
          },
          "context": "return execCmd.Run()"
        },
        {
          "targetTerm": "Command",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 219,
            "column": 22
          },
          "context": "var clearCmd = &cobra.Command{"
        },
        {
          "targetTerm": "cobra.MaximumNArgs",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 222,
            "column": 8
          },
          "context": "Args:  cobra.MaximumNArgs(1),"
        },
        {
          "targetTerm": "exec.Command",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 235,
            "column": 13
          },
          "context": "execCmd := exec.Command(\"bun\", cmdArgs...)"
        },
        {
          "targetTerm": "execCmd.Run",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 240,
            "column": 9
          },
          "context": "return execCmd.Run()"
        },
        {
          "targetTerm": "init",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 244,
            "column": 5
          },
          "context": "func init() {"
        },
        {
          "targetTerm": "rootCmd.PersistentFlags",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 246,
            "column": 1
          },
          "context": "rootCmd.PersistentFlags().BoolVar(&tuiMode, \"tui\", false, \"Launch interactive TUI mode\")"
        },
        {
          "targetTerm": "BoolVar",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 246,
            "column": 27
          },
          "context": "rootCmd.PersistentFlags().BoolVar(&tuiMode, \"tui\", false, \"Launch interactive TUI mode\")"
        },
        {
          "targetTerm": "rootCmd.PersistentFlags",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 247,
            "column": 1
          },
          "context": "rootCmd.PersistentFlags().StringVarP(&projectPath, \"project\", \"p\", \"\", \"Project path (defaults to current directory)\")"
        },
        {
          "targetTerm": "StringVarP",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 247,
            "column": 27
          },
          "context": "rootCmd.PersistentFlags().StringVarP(&projectPath, \"project\", \"p\", \"\", \"Project path (defaults to current directory)\")"
        },
        {
          "targetTerm": "path",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 247,
            "column": 81
          },
          "context": "rootCmd.PersistentFlags().StringVarP(&projectPath, \"project\", \"p\", \"\", \"Project path (defaults to current directory)\")"
        },
        {
          "targetTerm": "overviewCmd.Flags",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 250,
            "column": 1
          },
          "context": "overviewCmd.Flags().BoolVar(&newSession, \"new-session\", false, \"Start fresh analysis session\")"
        },
        {
          "targetTerm": "BoolVar",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 250,
            "column": 21
          },
          "context": "overviewCmd.Flags().BoolVar(&newSession, \"new-session\", false, \"Start fresh analysis session\")"
        },
        {
          "targetTerm": "rootCmd.AddCommand",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 253,
            "column": 1
          },
          "context": "rootCmd.AddCommand(overviewCmd)"
        },
        {
          "targetTerm": "rootCmd.AddCommand",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 254,
            "column": 1
          },
          "context": "rootCmd.AddCommand(askCmd)"
        },
        {
          "targetTerm": "rootCmd.AddCommand",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 255,
            "column": 1
          },
          "context": "rootCmd.AddCommand(chatCmd)"
        },
        {
          "targetTerm": "rootCmd.AddCommand",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 256,
            "column": 1
          },
          "context": "rootCmd.AddCommand(featureCmd)"
        },
        {
          "targetTerm": "rootCmd.AddCommand",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 257,
            "column": 1
          },
          "context": "rootCmd.AddCommand(changeCmd)"
        },
        {
          "targetTerm": "rootCmd.AddCommand",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 258,
            "column": 1
          },
          "context": "rootCmd.AddCommand(memoryCmd)"
        },
        {
          "targetTerm": "rootCmd.AddCommand",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 259,
            "column": 1
          },
          "context": "rootCmd.AddCommand(clearCmd)"
        },
        {
          "targetTerm": "main",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 262,
            "column": 5
          },
          "context": "func main() {"
        },
        {
          "targetTerm": "rootCmd.Execute",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 263,
            "column": 11
          },
          "context": "if err := rootCmd.Execute(); err != nil {"
        },
        {
          "targetTerm": "fmt.Fprintln",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 264,
            "column": 2
          },
          "context": "fmt.Fprintln(os.Stderr, err)"
        },
        {
          "targetTerm": "os.Exit",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/curator/main.go",
            "line": 265,
            "column": 2
          },
          "context": "os.Exit(1)"
        }
      ]
    ],
    [
      "cmd/monitor/main.go",
      [
        {
          "targetTerm": "Command",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "cmd/monitor/main.go",
            "line": 17,
            "column": 21
          },
          "context": "var rootCmd = &cobra.Command{"
        },
        {
          "targetTerm": "Mode",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "cmd/monitor/main.go",
            "line": 25,
            "column": 8
          },
          "context": "if tuiMode {"
        },
        {
          "targetTerm": "monitor.RunTUI",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/monitor/main.go",
            "line": 27,
            "column": 10
          },
          "context": "return monitor.RunTUI()"
        },
        {
          "targetTerm": "cmd.Help",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/monitor/main.go",
            "line": 31,
            "column": 9
          },
          "context": "return cmd.Help()"
        },
        {
          "targetTerm": "Command",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "cmd/monitor/main.go",
            "line": 35,
            "column": 22
          },
          "context": "var watchCmd = &cobra.Command{"
        },
        {
          "targetTerm": "Mode",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "cmd/monitor/main.go",
            "line": 39,
            "column": 8
          },
          "context": "if tuiMode {"
        },
        {
          "targetTerm": "monitor.RunWatchTUI",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/monitor/main.go",
            "line": 40,
            "column": 10
          },
          "context": "return monitor.RunWatchTUI(withOverview)"
        },
        {
          "targetTerm": "Overview",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "cmd/monitor/main.go",
            "line": 45,
            "column": 9
          },
          "context": "if withOverview {"
        },
        {
          "targetTerm": "exec.Command",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/monitor/main.go",
            "line": 49,
            "column": 13
          },
          "context": "execCmd := exec.Command(\"bun\", cmdArgs...)"
        },
        {
          "targetTerm": "execCmd.Run",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/monitor/main.go",
            "line": 54,
            "column": 9
          },
          "context": "return execCmd.Run()"
        },
        {
          "targetTerm": "Command",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "cmd/monitor/main.go",
            "line": 58,
            "column": 25
          },
          "context": "var overviewCmd = &cobra.Command{"
        },
        {
          "targetTerm": "Mode",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "cmd/monitor/main.go",
            "line": 62,
            "column": 8
          },
          "context": "if tuiMode {"
        },
        {
          "targetTerm": "monitor.RunOverviewTUI",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/monitor/main.go",
            "line": 63,
            "column": 10
          },
          "context": "return monitor.RunOverviewTUI()"
        },
        {
          "targetTerm": "exec.Command",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/monitor/main.go",
            "line": 69,
            "column": 13
          },
          "context": "execCmd := exec.Command(\"bun\", cmdArgs...)"
        },
        {
          "targetTerm": "execCmd.Run",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/monitor/main.go",
            "line": 74,
            "column": 9
          },
          "context": "return execCmd.Run()"
        },
        {
          "targetTerm": "Command",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "cmd/monitor/main.go",
            "line": 78,
            "column": 23
          },
          "context": "var statusCmd = &cobra.Command{"
        },
        {
          "targetTerm": "Mode",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "cmd/monitor/main.go",
            "line": 82,
            "column": 8
          },
          "context": "if tuiMode {"
        },
        {
          "targetTerm": "monitor.RunStatusTUI",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/monitor/main.go",
            "line": 83,
            "column": 10
          },
          "context": "return monitor.RunStatusTUI()"
        },
        {
          "targetTerm": "exec.Command",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/monitor/main.go",
            "line": 89,
            "column": 13
          },
          "context": "execCmd := exec.Command(\"bun\", cmdArgs...)"
        },
        {
          "targetTerm": "execCmd.Run",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/monitor/main.go",
            "line": 94,
            "column": 9
          },
          "context": "return execCmd.Run()"
        },
        {
          "targetTerm": "init",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/monitor/main.go",
            "line": 98,
            "column": 5
          },
          "context": "func init() {"
        },
        {
          "targetTerm": "rootCmd.PersistentFlags",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/monitor/main.go",
            "line": 100,
            "column": 1
          },
          "context": "rootCmd.PersistentFlags().BoolVar(&tuiMode, \"tui\", false, \"Launch interactive TUI mode\")"
        },
        {
          "targetTerm": "BoolVar",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/monitor/main.go",
            "line": 100,
            "column": 27
          },
          "context": "rootCmd.PersistentFlags().BoolVar(&tuiMode, \"tui\", false, \"Launch interactive TUI mode\")"
        },
        {
          "targetTerm": "watchCmd.Flags",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/monitor/main.go",
            "line": 103,
            "column": 1
          },
          "context": "watchCmd.Flags().BoolVar(&withOverview, \"overview\", false, \"Include codebase overview in dashboard\")"
        },
        {
          "targetTerm": "BoolVar",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/monitor/main.go",
            "line": 103,
            "column": 18
          },
          "context": "watchCmd.Flags().BoolVar(&withOverview, \"overview\", false, \"Include codebase overview in dashboard\")"
        },
        {
          "targetTerm": "rootCmd.AddCommand",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/monitor/main.go",
            "line": 106,
            "column": 1
          },
          "context": "rootCmd.AddCommand(watchCmd)"
        },
        {
          "targetTerm": "rootCmd.AddCommand",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/monitor/main.go",
            "line": 107,
            "column": 1
          },
          "context": "rootCmd.AddCommand(overviewCmd)"
        },
        {
          "targetTerm": "rootCmd.AddCommand",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/monitor/main.go",
            "line": 108,
            "column": 1
          },
          "context": "rootCmd.AddCommand(statusCmd)"
        },
        {
          "targetTerm": "main",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/monitor/main.go",
            "line": 111,
            "column": 5
          },
          "context": "func main() {"
        },
        {
          "targetTerm": "rootCmd.Execute",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/monitor/main.go",
            "line": 112,
            "column": 11
          },
          "context": "if err := rootCmd.Execute(); err != nil {"
        },
        {
          "targetTerm": "fmt.Fprintln",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/monitor/main.go",
            "line": 113,
            "column": 2
          },
          "context": "fmt.Fprintln(os.Stderr, err)"
        },
        {
          "targetTerm": "os.Exit",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/monitor/main.go",
            "line": 114,
            "column": 2
          },
          "context": "os.Exit(1)"
        }
      ]
    ],
    [
      "cmd/smartgrep/main.go",
      [
        {
          "targetTerm": "Command",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 22,
            "column": 21
          },
          "context": "var rootCmd = &cobra.Command{"
        },
        {
          "targetTerm": "Mode",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 31,
            "column": 8
          },
          "context": "if tuiMode {"
        },
        {
          "targetTerm": "smartgrep.RunTUI",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 33,
            "column": 10
          },
          "context": "return smartgrep.RunTUI()"
        },
        {
          "targetTerm": "runCLIMode",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 37,
            "column": 9
          },
          "context": "return runCLIMode(args)"
        },
        {
          "targetTerm": "init",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 41,
            "column": 5
          },
          "context": "func init() {"
        },
        {
          "targetTerm": "rootCmd.Flags",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 42,
            "column": 1
          },
          "context": "rootCmd.Flags().BoolVar(&tuiMode, \"tui\", false, \"Launch interactive TUI mode\")"
        },
        {
          "targetTerm": "BoolVar",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 42,
            "column": 17
          },
          "context": "rootCmd.Flags().BoolVar(&tuiMode, \"tui\", false, \"Launch interactive TUI mode\")"
        },
        {
          "targetTerm": "rootCmd.Flags",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 43,
            "column": 1
          },
          "context": "rootCmd.Flags().StringVar(&typeFilter, \"type\", \"\", \"Filter by type (function,class,variable,etc)\")"
        },
        {
          "targetTerm": "StringVar",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 43,
            "column": 17
          },
          "context": "rootCmd.Flags().StringVar(&typeFilter, \"type\", \"\", \"Filter by type (function,class,variable,etc)\")"
        },
        {
          "targetTerm": "rootCmd.Flags",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 44,
            "column": 1
          },
          "context": "rootCmd.Flags().IntVar(&maxResults, \"max\", 50, \"Maximum results to show\")"
        },
        {
          "targetTerm": "IntVar",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 44,
            "column": 17
          },
          "context": "rootCmd.Flags().IntVar(&maxResults, \"max\", 50, \"Maximum results to show\")"
        },
        {
          "targetTerm": "rootCmd.Flags",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 45,
            "column": 1
          },
          "context": "rootCmd.Flags().StringVar(&sortBy, \"sort\", \"relevance\", \"Sort by: relevance, usage, name, file\")"
        },
        {
          "targetTerm": "StringVar",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 45,
            "column": 17
          },
          "context": "rootCmd.Flags().StringVar(&sortBy, \"sort\", \"relevance\", \"Sort by: relevance, usage, name, file\")"
        },
        {
          "targetTerm": "rootCmd.Flags",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 46,
            "column": 1
          },
          "context": "rootCmd.Flags().BoolVar(&compactMode, \"compact\", false, \"Compact output format\")"
        },
        {
          "targetTerm": "BoolVar",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 46,
            "column": 17
          },
          "context": "rootCmd.Flags().BoolVar(&compactMode, \"compact\", false, \"Compact output format\")"
        },
        {
          "targetTerm": "rootCmd.Flags",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 47,
            "column": 1
          },
          "context": "rootCmd.Flags().BoolVar(&rebuildIndex, \"index\", false, \"Rebuild the semantic index\")"
        },
        {
          "targetTerm": "BoolVar",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 47,
            "column": 17
          },
          "context": "rootCmd.Flags().BoolVar(&rebuildIndex, \"index\", false, \"Rebuild the semantic index\")"
        },
        {
          "targetTerm": "executeCommand",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 51,
            "column": 5
          },
          "context": "func executeCommand(subcommand string, args []string, flags map[string]interface{}) error {"
        },
        {
          "targetTerm": "config.GetExecutor",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 52,
            "column": 13
          },
          "context": "executor := config.GetExecutor()"
        },
        {
          "targetTerm": "config.GetSmartgrepPath",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 53,
            "column": 12
          },
          "context": "cliPath := config.GetSmartgrepPath()"
        },
        {
          "targetTerm": "Val",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 68,
            "column": 45
          },
          "context": "if boolVal, ok := value.(bool); ok && boolVal {"
        },
        {
          "targetTerm": "fmt.Sprintf",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 73,
            "column": 41
          },
          "context": "cmdArgs = append(cmdArgs, \"--\"+flag, fmt.Sprintf(\"%d\", intVal))"
        },
        {
          "targetTerm": "exec.Command",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 77,
            "column": 8
          },
          "context": "cmd = exec.Command(executor, cmdArgs...)"
        },
        {
          "targetTerm": "Val",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 87,
            "column": 45
          },
          "context": "if boolVal, ok := value.(bool); ok && boolVal {"
        },
        {
          "targetTerm": "fmt.Sprintf",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 92,
            "column": 41
          },
          "context": "cmdArgs = append(cmdArgs, \"--\"+flag, fmt.Sprintf(\"%d\", intVal))"
        },
        {
          "targetTerm": "exec.Command",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 96,
            "column": 8
          },
          "context": "cmd = exec.Command(cliPath, cmdArgs...)"
        },
        {
          "targetTerm": "cmd.Run",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 103,
            "column": 8
          },
          "context": "return cmd.Run()"
        },
        {
          "targetTerm": "runCLIMode",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 106,
            "column": 5
          },
          "context": "func runCLIMode(args []string) error {"
        },
        {
          "targetTerm": "Index",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 109,
            "column": 11
          },
          "context": "if rebuildIndex {"
        },
        {
          "targetTerm": "Mode",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 121,
            "column": 11
          },
          "context": "if compactMode {"
        },
        {
          "targetTerm": "executeCommand",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 125,
            "column": 8
          },
          "context": "return executeCommand(\"\", args, flags)"
        },
        {
          "targetTerm": "Command",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 129,
            "column": 22
          },
          "context": "var groupCmd = &cobra.Command{"
        },
        {
          "targetTerm": "Mode",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 134,
            "column": 8
          },
          "context": "if tuiMode {"
        },
        {
          "targetTerm": "smartgrep.RunGroupTUI",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 135,
            "column": 10
          },
          "context": "return smartgrep.RunGroupTUI()"
        },
        {
          "targetTerm": "executeCommand",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 139,
            "column": 9
          },
          "context": "return executeCommand(\"group\", args, nil)"
        },
        {
          "targetTerm": "Command",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 143,
            "column": 21
          },
          "context": "var refsCmd = &cobra.Command{"
        },
        {
          "targetTerm": "Mode",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 147,
            "column": 8
          },
          "context": "if tuiMode {"
        },
        {
          "targetTerm": "smartgrep.RunRefsTUI",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 148,
            "column": 10
          },
          "context": "return smartgrep.RunRefsTUI()"
        },
        {
          "targetTerm": "fmt.Errorf",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 152,
            "column": 10
          },
          "context": "return fmt.Errorf(\"symbol name required\")"
        },
        {
          "targetTerm": "executeCommand",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 156,
            "column": 9
          },
          "context": "return executeCommand(\"refs\", args, nil)"
        },
        {
          "targetTerm": "Command",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 160,
            "column": 24
          },
          "context": "var changesCmd = &cobra.Command{"
        },
        {
          "targetTerm": "Mode",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 164,
            "column": 8
          },
          "context": "if tuiMode {"
        },
        {
          "targetTerm": "smartgrep.RunChangesTUI",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 165,
            "column": 10
          },
          "context": "return smartgrep.RunChangesTUI()"
        },
        {
          "targetTerm": "Mode",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 170,
            "column": 12
          },
          "context": "if compactMode {"
        },
        {
          "targetTerm": "executeCommand",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 173,
            "column": 9
          },
          "context": "return executeCommand(\"changes\", nil, flags)"
        },
        {
          "targetTerm": "main",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 177,
            "column": 5
          },
          "context": "func main() {"
        },
        {
          "targetTerm": "rootCmd.AddCommand",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 179,
            "column": 1
          },
          "context": "rootCmd.AddCommand(groupCmd)"
        },
        {
          "targetTerm": "rootCmd.AddCommand",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 180,
            "column": 1
          },
          "context": "rootCmd.AddCommand(refsCmd)"
        },
        {
          "targetTerm": "rootCmd.AddCommand",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 181,
            "column": 1
          },
          "context": "rootCmd.AddCommand(changesCmd)"
        },
        {
          "targetTerm": "Command",
          "referenceType": "instantiation",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 184,
            "column": 30
          },
          "context": "for _, cmd := range []*cobra.Command{groupCmd, refsCmd, changesCmd} {"
        },
        {
          "targetTerm": "cmd.Flags",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 185,
            "column": 2
          },
          "context": "cmd.Flags().BoolVar(&tuiMode, \"tui\", false, \"Launch interactive TUI mode\")"
        },
        {
          "targetTerm": "BoolVar",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 185,
            "column": 14
          },
          "context": "cmd.Flags().BoolVar(&tuiMode, \"tui\", false, \"Launch interactive TUI mode\")"
        },
        {
          "targetTerm": "rootCmd.Execute",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 188,
            "column": 11
          },
          "context": "if err := rootCmd.Execute(); err != nil {"
        },
        {
          "targetTerm": "fmt.Fprintln",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 189,
            "column": 2
          },
          "context": "fmt.Fprintln(os.Stderr, err)"
        },
        {
          "targetTerm": "os.Exit",
          "referenceType": "call",
          "fromLocation": {
            "file": "cmd/smartgrep/main.go",
            "line": 190,
            "column": 2
          },
          "context": "os.Exit(1)"
        }
      ]
    ]
  ]
}