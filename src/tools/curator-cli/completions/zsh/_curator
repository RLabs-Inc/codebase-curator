#compdef curator codebase-curator
# Zsh completion for curator (codebase-curator)
# Install: Place in a directory in your $fpath (e.g., /usr/local/share/zsh/site-functions/)

_curator() {
    local -a commands options formats
    
    commands=(
        'overview:Get a comprehensive overview of the codebase architecture'
        'ask:Ask a specific question about the codebase'
        'feature:Get detailed guidance for implementing a new feature'
        'change:Get focused action plan for a specific change or fix'
        'chat:Start an interactive chat session with the curator'
        'memory:Show what the curator remembers about your codebase'
        'clear:Clear the curator memory and start fresh'
    )
    
    options=(
        '--help[Show help information]'
        '-h[Show help information]'
        '--output[Output format]:format:(summary detailed json)'
        '-o[Output format]:format:(summary detailed json)'
        '--new-session[Start fresh without previous context]'
        '--interactive[Interactive mode for multi-turn conversations]'
        '-i[Interactive mode for multi-turn conversations]'
    )
    
    formats=(
        'summary:Concise overview (default)'
        'detailed:Comprehensive analysis'
        'json:Machine-readable format'
    )
    
    # Main argument handling
    _arguments -s \
        '1:command:->commands' \
        '*::arg:->args' \
        $options
    
    case $state in
        commands)
            _describe -t commands 'curator command' commands
            ;;
            
        args)
            case $line[1] in
                overview|memory|clear)
                    # These commands only take a directory path
                    _arguments \
                        '1:directory:_directories' \
                        $options
                    ;;
                    
                ask|feature|change)
                    # These can take a directory and/or question text
                    if (( CURRENT == 2 )); then
                        # Second argument could be directory or question
                        _alternative \
                            'directories:project directory:_directories' \
                            'messages:question or description:_message'
                    else
                        # Subsequent arguments are part of the question/description
                        _message 'question or description text'
                    fi
                    ;;
                    
                chat)
                    # Chat takes optional directory
                    _arguments \
                        '1:directory:_directories' \
                        '--new-session[Start a fresh chat session]' \
                        $options
                    ;;
            esac
            ;;
    esac
}

# Helper function for command descriptions
_curator_commands() {
    local -a curator_commands
    curator_commands=(
        'overview:Analyze codebase architecture'
        'ask:Ask about the codebase'
        'feature:Plan a new feature'
        'change:Plan a code change'
        'chat:Interactive conversation'
        'memory:View curator knowledge'
        'clear:Reset curator memory'
    )
    _describe -t commands 'curator command' curator_commands
}

# Register aliases
compdef _curator curator
compdef _curator codebase-curator