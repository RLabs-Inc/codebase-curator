.\" Manpage for curator (codebase-curator)
.\" Contact the maintainers to correct errors or typos
.TH CURATOR 1 "January 2025" "curator 3.0" "User Commands"

.SH NAME
curator \- AI-powered codebase assistant for understanding and modifying code

.SH SYNOPSIS
.B curator
.I command
[\fIpath\fR] [\fIoptions\fR]

.SH DESCRIPTION
.B curator
is an AI-powered assistant that helps developers understand, navigate, and
modify codebases. It uses advanced language models to provide intelligent
insights, answer questions, and guide feature implementation.

The curator builds a deep understanding of your codebase through semantic
analysis and maintains context across sessions, allowing for increasingly
sophisticated assistance over time.

.SH COMMANDS
.TP
.B overview [\fIpath\fR]
Generate a comprehensive overview of the codebase architecture. Analyzes
code structure, identifies patterns, suggests improvements, and provides
a practical understanding of how the codebase works.

.TP
.B ask \fR[\fIpath\fR] \fI"question"\fR
Ask a specific question about the codebase. The curator will analyze the
code and provide detailed, context-aware answers.

.TP
.B feature \fR[\fIpath\fR] \fI"description"\fR
Get detailed guidance for implementing a new feature. The curator analyzes
existing patterns and provides step-by-step implementation advice that
fits naturally with your codebase style.

.TP
.B change \fR[\fIpath\fR] \fI"description"\fR
Get a focused action plan for implementing a specific change or fix.
Provides targeted guidance for modifications, refactoring, or bug fixes.

.TP
.B chat [\fIpath\fR]
Start an interactive chat session with the curator. Allows for multi-turn
conversations, follow-up questions, and detailed explorations of the codebase.

.TP
.B memory [\fIpath\fR]
Display what the curator has learned about your codebase. Shows accumulated
knowledge, patterns identified, and key insights from previous sessions.

.TP
.B clear [\fIpath\fR]
Clear the curator's memory for the specified project and start fresh.
Useful when the codebase has changed significantly.

.SH OPTIONS
.TP
.B \-o, \-\-output \fIformat\fR
Set output format. Available formats:
.RS
.IP \(bu 2
\fBsummary\fR (default) - Concise, actionable insights
.IP \(bu 2
\fBdetailed\fR - Comprehensive analysis with examples
.IP \(bu 2
\fBjson\fR - Machine-readable format for integration
.RE

.TP
.B \-\-new\-session
Start fresh without loading previous context. Useful when you want
the curator to analyze the codebase from scratch.

.TP
.B \-i, \-\-interactive
Enable interactive mode for commands that support it. Allows for
follow-up questions and clarifications.

.TP
.B \-h, \-\-help
Display help information and usage examples.

.SH EXAMPLES
.TP
.B curator overview
Analyze the current directory and provide architectural insights.

.TP
.B curator ask "How does the authentication system work?"
Get a detailed explanation of authentication implementation.

.TP
.B curator ask ./backend "What are the main API endpoints?"
Ask about specific aspects of a subdirectory.

.TP
.B curator feature "Add real-time notifications"
Get implementation guidance for a new feature.

.TP
.B curator change "Optimize database queries in the user service"
Get specific steps for performance improvements.

.TP
.B curator chat
Start an interactive session for complex discussions.

.TP
.B curator chat ./project \-\-new\-session
Begin a fresh chat session for a specific project.

.SH CHAT MODE
In chat mode, you can:
.IP \(bu 2
Ask follow-up questions for clarification
.IP \(bu 2
Explore different implementation approaches
.IP \(bu 2
Get code examples and best practices
.IP \(bu 2
Type "exit" to end the session
.IP \(bu 2
Type "clear" to reset the conversation

.SH UNDERSTANDING CONTEXT
The curator maintains context in several ways:

.TP
.B Session Persistence
Each interaction builds on previous ones, developing deeper understanding
of your codebase patterns and architecture.

.TP
.B Semantic Analysis
Code is analyzed for meaning, not just syntax, allowing the curator to
understand relationships, dependencies, and design patterns.

.TP
.B Pattern Recognition
Common patterns in your codebase are identified and used to provide
consistent, idiomatic suggestions.

.SH FILES
.TP
.I .curator/
Directory containing curator session data and codebase analysis cache.

.TP
.I .curator/sessions/
Stored conversation history and accumulated knowledge.

.TP
.I .curator/semantic-index.json
Semantic analysis cache for faster subsequent analyses.

.SH BEST PRACTICES
.IP \(bu 2
Use \fBoverview\fR when first analyzing a new codebase
.IP \(bu 2
Be specific in your questions for more actionable answers
.IP \(bu 2
Use \fBchat\fR mode for complex explorations
.IP \(bu 2
Regular \fBclear\fR after major refactoring ensures fresh analysis
.IP \(bu 2
The curator works best with well-structured code and clear naming

.SH LIMITATIONS
.IP \(bu 2
Large codebases may take time to analyze initially
.IP \(bu 2
Suggestions should be reviewed and tested
.IP \(bu 2
Works best with common programming languages and frameworks
.IP \(bu 2
Cannot execute code or make direct modifications

.SH ENVIRONMENT
.TP
.B CURATOR_OUTPUT
Override default output format (summary, detailed, json).

.TP
.B NO_COLOR
Disable colored output.

.SH EXIT STATUS
.TP
.B 0
Success
.TP
.B 1
General error or invalid arguments
.TP
.B 130
Interrupted by user (Ctrl+C)

.SH SEE ALSO
.BR smartgrep (1),
.BR monitor (1)

.SH BUGS
Report bugs at: https://github.com/RLabs-Inc/codebase-curator/issues

.SH AUTHOR
Written by RLabs Inc. and Claude.

.SH COPYRIGHT
Copyright Â© 2025 RLabs Inc. License: MIT
.br
This is free software; you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.