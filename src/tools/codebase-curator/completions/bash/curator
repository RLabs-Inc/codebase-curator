#!/bin/bash
# Bash completion for curator (codebase-curator)
# Install: source this file or add to ~/.bash_completion.d/

_curator() {
    local cur prev opts
    COMPREPLY=()
    cur="${COMP_WORDS[COMP_CWORD]}"
    prev="${COMP_WORDS[COMP_CWORD-1]}"
    
    # Main commands
    local commands="overview ask feature change chat memory clear"
    
    # Options
    local options="--help -h --output -o --new-session --interactive -i"
    
    # Output formats
    local formats="summary detailed json"
    
    # Handle different contexts
    case "${prev}" in
        curator|codebase-curator)
            # First argument - show commands
            COMPREPLY=( $(compgen -W "${commands} ${options}" -- ${cur}) )
            ;;
            
        --output|-o)
            # After output flag, show format options
            COMPREPLY=( $(compgen -W "${formats}" -- ${cur}) )
            ;;
            
        overview|memory|clear)
            # These commands only take directories and options
            if [[ ${cur} == -* ]]; then
                COMPREPLY=( $(compgen -W "${options}" -- ${cur}) )
            else
                # Directory completion
                COMPREPLY=( $(compgen -d -- ${cur}) )
            fi
            ;;
            
        ask|feature|change)
            # These commands can take directories or be followed by quoted text
            if [[ ${cur} == -* ]]; then
                COMPREPLY=( $(compgen -W "${options}" -- ${cur}) )
            elif [[ ${COMP_CWORD} -eq 2 ]]; then
                # Second position could be directory or start of question
                # Offer directory completion
                COMPREPLY=( $(compgen -d -- ${cur}) )
            fi
            # Note: Bash doesn't handle quoted strings well in completion
            ;;
            
        chat)
            # Chat command takes directories and options
            if [[ ${cur} == -* ]]; then
                COMPREPLY=( $(compgen -W "${options} --new-session" -- ${cur}) )
            else
                COMPREPLY=( $(compgen -d -- ${cur}) )
            fi
            ;;
            
        *)
            # Check command context
            local cmd_index=1
            local cmd=""
            while [[ ${cmd_index} -lt ${COMP_CWORD} ]]; do
                if [[ " ${commands} " =~ " ${COMP_WORDS[cmd_index]} " ]]; then
                    cmd="${COMP_WORDS[cmd_index]}"
                    break
                fi
                ((cmd_index++))
            done
            
            # Based on detected command, offer appropriate completions
            case "${cmd}" in
                overview|memory|clear|chat)
                    if [[ ${cur} == -* ]]; then
                        COMPREPLY=( $(compgen -W "${options}" -- ${cur}) )
                    else
                        COMPREPLY=( $(compgen -d -- ${cur}) )
                    fi
                    ;;
                    
                ask|feature|change)
                    if [[ ${cur} == -* ]]; then
                        COMPREPLY=( $(compgen -W "${options}" -- ${cur}) )
                    fi
                    ;;
                    
                *)
                    # No command yet, show commands and options
                    if [[ ${cur} == -* ]]; then
                        COMPREPLY=( $(compgen -W "${options}" -- ${cur}) )
                    else
                        COMPREPLY=( $(compgen -W "${commands}" -- ${cur}) )
                    fi
                    ;;
            esac
            ;;
    esac
    
    return 0
}

# Register the completion function
complete -F _curator curator
complete -F _curator codebase-curator
complete -F _curator bun run curator