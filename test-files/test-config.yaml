# CI/CD Pipeline Configuration
name: Build and Deploy

# Trigger conditions
on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main

# Environment variables
env:
  NODE_VERSION: '20.x'
  REGISTRY: docker.io
  IMAGE_NAME: codebase-curator

# Job definitions
jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      
      - name: Install dependencies
        run: |
          npm install
          npm run build
      
      - name: Run unit tests
        run: npm test
      
      - name: Run integration tests
        run: npm run test:integration

  build:
    name: Build Docker Image
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

  deploy:
    name: Deploy to Production
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://curator.example.com
    steps:
      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f k8s/deployment.yaml
          kubectl rollout status deployment/codebase-curator

# Service configuration
services:
  postgres:
    image: postgres:15
    env:
      POSTGRES_USER: curator
      POSTGRES_PASSWORD: password
      POSTGRES_DB: curator_test
    options: >-
      --health-cmd pg_isready
      --health-interval 10s
      --health-timeout 5s
      --health-retries 5

# Matrix strategy for testing
strategy:
  matrix:
    node-version: [18.x, 20.x]
    os: [ubuntu-latest, macos-latest]